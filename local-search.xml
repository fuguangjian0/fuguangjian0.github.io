<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>redis入门操作</title>
    <link href="/2023/12/08/redis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/"/>
    <url>/2023/12/08/redis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="Redis入门操作"><a href="#Redis入门操作" class="headerlink" title="Redis入门操作"></a>Redis入门操作</h1><blockquote><p>基于内存的key-value结构数据库, 用途广泛的存储中间件</p><p>NoSQL, 非关系型数据库, 是对关系型数据库的补充</p></blockquote><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><blockquote><p>Redis是 k-v 结构数据,  key是String, value有5种数据类型</p></blockquote><table><thead><tr><th align="left">字符串</th><th align="left">String</th><th></th></tr></thead><tbody><tr><td align="left">哈希</td><td align="left">hash</td><td>又名散列,    类似HashMap</td></tr><tr><td align="left">列表</td><td align="left">list</td><td>按照插入顺序排序, 可以重复元素, 类似LinkedList</td></tr><tr><td align="left">集合</td><td align="left">set</td><td>无序集合, 没有重复, 类似HashSet</td></tr><tr><td align="left">有序集合</td><td align="left">sorted    set&#x2F;zset</td><td>集合每个元素关联一个分数, 根据分数升序排序, 没用重复</td></tr></tbody></table><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20221130190150749.png" alt="image-20221130190150749" style="zoom:50%;" /><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p><strong>字符串</strong></p><table><thead><tr><th align="left"><strong>GET</strong> key</th><th align="left">获取a的值</th></tr></thead><tbody><tr><td align="left"><strong>SET</strong> key value</td><td align="left">设置a的值</td></tr><tr><td align="left"><strong>SETEX</strong> key seconds value</td><td align="left">设置a的值, 设置过期时间(s)</td></tr></tbody></table><p><strong>hash</strong></p><table><thead><tr><th align="left"><strong>HGET</strong> key field</th><th align="left">获取key的field</th></tr></thead><tbody><tr><td align="left"><strong>HSET</strong> key field value</td><td align="left">设置key的field 和 value</td></tr><tr><td align="left"><strong>HDEL</strong> key field</td><td align="left">删除key的field</td></tr><tr><td align="left"><strong>HKEYS</strong> key</td><td align="left">获取key的所有field</td></tr><tr><td align="left"><strong>HVALS</strong> key</td><td align="left">获取key的所有value</td></tr></tbody></table><p><strong>list</strong></p><table><thead><tr><th align="left"><strong>LPUSH</strong> key value1 [value2]</th><th align="left">插入k-v</th></tr></thead><tbody><tr><td align="left"><strong>LRANGE</strong> key start stop</td><td align="left">获取指定下标范围的value</td></tr><tr><td align="left"><strong>RPOP</strong> key</td><td align="left">移除并获取列表最后一个value</td></tr><tr><td align="left"><strong>LLEN</strong> key</td><td align="left">获取列表长度</td></tr><tr><td align="left"><strong>BRPOP</strong> key1 [key2 ] timeout</td><td align="left">移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超 时或发现可弹出元素为止</td></tr></tbody></table><p><strong>set</strong></p><table><thead><tr><th align="left"><strong>SADD</strong> key member1 [member2]</th><th align="left">向集合添加一个或多个成员</th></tr></thead><tbody><tr><td align="left"><strong>SMEMBERS</strong> key</td><td align="left">返回集合中的所有成员</td></tr><tr><td align="left"><strong>SCARD</strong> key</td><td align="left">获取集合的成员数</td></tr><tr><td align="left"><strong>SINTER</strong> key1 [key2]</td><td align="left">返回给定所有集合的交集</td></tr><tr><td align="left"><strong>SUNION</strong> key1 [key2]</td><td align="left">返回所有给定集合的并集</td></tr><tr><td align="left"><strong>SREM</strong> key member1 [member2]</td><td align="left">移除集合中一个或多个成员</td></tr></tbody></table><p><strong>zset</strong></p><table><thead><tr><th align="left"><strong>ZADD</strong> key score1 member1 [score2 member2]</th><th align="left">向有序集合添加一个或多个成员</th></tr></thead><tbody><tr><td align="left"><strong>ZRANGE</strong> key start stop [WITHSCORES]</td><td align="left">通过索引区间返回有序集合中指定区间内的成员</td></tr><tr><td align="left"><strong>ZINCRBY</strong> key increment member</td><td align="left">有序集合中对指定成员的分数加上增量 increment</td></tr><tr><td align="left"><strong>ZREM</strong> key member [member …]</td><td align="left">移除有序集合中的一个或多个成员</td></tr></tbody></table><p><strong>通用</strong></p><table><thead><tr><th align="left">KEYS pattern</th><th align="left">查找所有符合给定模式( pattern)的 key</th></tr></thead><tbody><tr><td align="left">EXISTS key</td><td align="left">检查给定 key 是否存在</td></tr><tr><td align="left">TYPE key</td><td align="left">返回 key 所储存的值的类型</td></tr><tr><td align="left">DEL key</td><td align="left">删除 key</td></tr></tbody></table><h2 id="Spring-Data-Redis"><a href="#Spring-Data-Redis" class="headerlink" title="Spring Data Redis"></a>Spring Data Redis</h2><blockquote><p>Spring中通过简单的配置访问Redis服务, 简化Redis操作</p></blockquote><p><strong>导入Spring Data Redis的maven坐标</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>配置Redis数据源</strong></p><blockquote><p> 如果是本地的redis且没有密码则不用配置, 用默认的</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">profiles:</span><br>    <span class="hljs-attr">active:</span> <span class="hljs-string">dev</span><br>  <span class="hljs-attr">redis:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">$&#123;sky.redis.host&#125;</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-string">$&#123;sky.redis.port&#125;</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">$&#123;sky.redis.password&#125;</span><br>    <span class="hljs-attr">database:</span> <span class="hljs-string">$&#123;sky.redis.database&#125;</span><br></code></pre></td></tr></table></figure><p><strong>string</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 操作字符串类型的数据</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testString</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-comment">// set get setex setnx</span><br>    redisTemplate.opsForValue().set(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;小明&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">city</span> <span class="hljs-operator">=</span> (String) redisTemplate.opsForValue().get(<span class="hljs-string">&quot;name&quot;</span>);<br>    System.out.println(city);<br>    redisTemplate.opsForValue().set(<span class="hljs-string">&quot;code&quot;</span>,<span class="hljs-string">&quot;1234&quot;</span>,<span class="hljs-number">3</span>, TimeUnit.MINUTES);<br>    redisTemplate.opsForValue().setIfAbsent(<span class="hljs-string">&quot;lock&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>);<br>    redisTemplate.opsForValue().setIfAbsent(<span class="hljs-string">&quot;lock&quot;</span>,<span class="hljs-string">&quot;2&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>hash</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 操作哈希类型的数据</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testHash</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-comment">//hset hget hdel hkeys hvals</span><br>    <span class="hljs-type">HashOperations</span> <span class="hljs-variable">hashOperations</span> <span class="hljs-operator">=</span> redisTemplate.opsForHash();<br><br>    hashOperations.put(<span class="hljs-string">&quot;100&quot;</span>,<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;tom&quot;</span>);<br>    hashOperations.put(<span class="hljs-string">&quot;100&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>,<span class="hljs-string">&quot;20&quot;</span>);<br><br>    <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> (String) hashOperations.get(<span class="hljs-string">&quot;100&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>);<br>    System.out.println(name);<br><br>    <span class="hljs-type">Set</span> <span class="hljs-variable">keys</span> <span class="hljs-operator">=</span> hashOperations.keys(<span class="hljs-string">&quot;100&quot;</span>);<br>    System.out.println(keys);<br><br>    <span class="hljs-type">List</span> <span class="hljs-variable">values</span> <span class="hljs-operator">=</span> hashOperations.values(<span class="hljs-string">&quot;100&quot;</span>);<br>    System.out.println(values);<br><br>    hashOperations.delete(<span class="hljs-string">&quot;100&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>list</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 操作列表类型的数据</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testList</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-comment">//lpush lrange rpop llen</span><br>    <span class="hljs-type">ListOperations</span> <span class="hljs-variable">listOperations</span> <span class="hljs-operator">=</span> redisTemplate.opsForList();<br><br>    listOperations.leftPushAll(<span class="hljs-string">&quot;mylist&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>);<br>    listOperations.leftPush(<span class="hljs-string">&quot;mylist&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>);<br><br>    <span class="hljs-type">List</span> <span class="hljs-variable">mylist</span> <span class="hljs-operator">=</span> listOperations.range(<span class="hljs-string">&quot;mylist&quot;</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>);<br>    System.out.println(mylist);<br><br>    listOperations.rightPop(<span class="hljs-string">&quot;mylist&quot;</span>);<br><br>    <span class="hljs-type">Long</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> listOperations.size(<span class="hljs-string">&quot;mylist&quot;</span>);<br>    System.out.println(size);<br>&#125;<br></code></pre></td></tr></table></figure><p>set</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 操作集合类型的数据</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testSet</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-comment">//sadd smembers scard sinter sunion srem</span><br>    <span class="hljs-type">SetOperations</span> <span class="hljs-variable">setOperations</span> <span class="hljs-operator">=</span> redisTemplate.opsForSet();<br><br>    setOperations.add(<span class="hljs-string">&quot;set1&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>);<br>    setOperations.add(<span class="hljs-string">&quot;set2&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;x&quot;</span>,<span class="hljs-string">&quot;y&quot;</span>);<br><br>    <span class="hljs-type">Set</span> <span class="hljs-variable">members</span> <span class="hljs-operator">=</span> setOperations.members(<span class="hljs-string">&quot;set1&quot;</span>);<br>    System.out.println(members);<br><br>    <span class="hljs-type">Long</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> setOperations.size(<span class="hljs-string">&quot;set1&quot;</span>);<br>    System.out.println(size);<br><br>    <span class="hljs-type">Set</span> <span class="hljs-variable">intersect</span> <span class="hljs-operator">=</span> setOperations.intersect(<span class="hljs-string">&quot;set1&quot;</span>, <span class="hljs-string">&quot;set2&quot;</span>);<br>    System.out.println(intersect);<br><br>    <span class="hljs-type">Set</span> <span class="hljs-variable">union</span> <span class="hljs-operator">=</span> setOperations.union(<span class="hljs-string">&quot;set1&quot;</span>, <span class="hljs-string">&quot;set2&quot;</span>);<br>    System.out.println(union);<br><br>    setOperations.remove(<span class="hljs-string">&quot;set1&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>zset</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 操作有序集合类型的数据</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testZset</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-comment">//zadd zrange zincrby zrem</span><br>    <span class="hljs-type">ZSetOperations</span> <span class="hljs-variable">zSetOperations</span> <span class="hljs-operator">=</span> redisTemplate.opsForZSet();<br><br>    zSetOperations.add(<span class="hljs-string">&quot;zset1&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-number">10</span>);<br>    zSetOperations.add(<span class="hljs-string">&quot;zset1&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-number">12</span>);<br>    zSetOperations.add(<span class="hljs-string">&quot;zset1&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>,<span class="hljs-number">9</span>);<br><br>    <span class="hljs-type">Set</span> <span class="hljs-variable">zset1</span> <span class="hljs-operator">=</span> zSetOperations.range(<span class="hljs-string">&quot;zset1&quot;</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>);<br>    System.out.println(zset1);<br><br>    zSetOperations.incrementScore(<span class="hljs-string">&quot;zset1&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>,<span class="hljs-number">10</span>);<br><br>    zSetOperations.remove(<span class="hljs-string">&quot;zset1&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>通用</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 通用命令操作</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testCommon</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-comment">//keys exists type del</span><br>    <span class="hljs-type">Set</span> <span class="hljs-variable">keys</span> <span class="hljs-operator">=</span> redisTemplate.keys(<span class="hljs-string">&quot;*&quot;</span>);<br>    System.out.println(keys);<br><br>    <span class="hljs-type">Boolean</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> redisTemplate.hasKey(<span class="hljs-string">&quot;name&quot;</span>);<br>    <span class="hljs-type">Boolean</span> <span class="hljs-variable">set1</span> <span class="hljs-operator">=</span> redisTemplate.hasKey(<span class="hljs-string">&quot;set1&quot;</span>);<br><br>    <span class="hljs-keyword">for</span> (Object key : keys) &#123;<br>        <span class="hljs-type">DataType</span> <span class="hljs-variable">type</span> <span class="hljs-operator">=</span> redisTemplate.type(key);<br>        System.out.println(type.name());<br>    &#125;<br><br>    redisTemplate.delete(<span class="hljs-string">&quot;mylist&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><blockquote><p>店铺打烊和营业存入redis</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.sky.controller.admin;<br><br><span class="hljs-keyword">import</span> com.sky.result.Result;<br><span class="hljs-keyword">import</span> io.swagger.annotations.Api;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiOperation;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.*;<br><br><span class="hljs-keyword">import</span> javax.annotation.Resource;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 付广建 2023/12/8 15:44</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@RestController(&quot;adminShopController&quot;)</span><br><span class="hljs-meta">@RequestMapping(&quot;/admin/shop&quot;)</span><br><span class="hljs-meta">@Api(tags = &quot;店铺相关操作&quot;)</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ShopController</span> &#123;<br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> StringRedisTemplate srt;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">KEY</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;SHOP_STATUS&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取营业状态</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@ApiOperation(&quot;获取营业状态&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/status&quot;)</span><br>    <span class="hljs-keyword">public</span> Result&lt;Integer&gt; <span class="hljs-title function_">getStatus</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> srt.opsForValue().get(KEY);<br>        <span class="hljs-keyword">if</span> (status != <span class="hljs-literal">null</span>) &#123;<br>            log.info(<span class="hljs-string">&quot;店铺状态: &#123;&#125;&quot;</span>, status.equals(<span class="hljs-string">&quot;1&quot;</span>) ? <span class="hljs-string">&quot;营业中&quot;</span> : <span class="hljs-string">&quot;打烊中&quot;</span>);<br>            <span class="hljs-keyword">return</span> Result.success(Integer.valueOf(status));<br>        &#125;<br>        <span class="hljs-keyword">return</span> Result.success();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 设置营业状态</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> status</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PutMapping(&quot;/&#123;status&#125;&quot;)</span><br>    <span class="hljs-meta">@ApiOperation(&quot;设置营业状态&quot;)</span><br>    <span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">setStatus</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Integer status)</span>&#123;<br>        srt.opsForValue().set(KEY, status.toString());<br>        <span class="hljs-keyword">return</span> Result.success();<br>    &#125;<br><br><br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>后端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>注解基本使用</title>
    <link href="/2023/12/07/%E6%B3%A8%E8%A7%A3%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/12/07/%E6%B3%A8%E8%A7%A3%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Java注解"><a href="#Java注解" class="headerlink" title="Java注解"></a>Java注解</h1><p>通过<code>反射</code>获取标注的内容,   这个内容可以是类, 方法, 变量, 参数, 包等等</p><h2 id="内置注解"><a href="#内置注解" class="headerlink" title="内置注解"></a>内置注解</h2><p>@Override       检查该方法是否是重写方法</p><p>@Deprecated    标记过时方法</p><p>@SuppressWarnings   编译器忽略警告</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">deprecation  <span class="hljs-comment">-- 使用了不赞成使用的类或方法时的警告</span><br>unchecked    <span class="hljs-comment">-- 执行了未检查的转换时的警告，例如当使用集合时没有用泛型 (Generics) 来指定集合保存的类型。</span><br>fallthrough  <span class="hljs-comment">-- 当 Switch 程序块直接通往下一种情况而没有 Break 时的警告。</span><br><span class="hljs-type">path</span>         <span class="hljs-comment">-- 在类路径、源文件路径等中有不存在的路径时的警告。</span><br><span class="hljs-type">serial</span>       <span class="hljs-comment">-- 当在可序列化的类上缺少 serialVersionUID 定义时的警告。</span><br>finally      <span class="hljs-comment">-- 任何 finally 子句不能正常完成时的警告。</span><br><span class="hljs-keyword">all</span>          <span class="hljs-comment">-- 关于以上所有情况的警告。</span><br></code></pre></td></tr></table></figure><p><strong>元注解:    注解的注解</strong></p><p>@Retention  标识这个注解怎么保存，是只在代码中，还是编入class文件中，或者是在运行时可以通过反射访问</p><p>@Documented   标记这些注解是否包含在用户文档</p><p>@Target  标记这个注解应该是哪种 Java 成员</p><p>@Inherited  标记这个注解是继承于哪个注解</p><h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> java.lang.annotation;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Annotation</span> &#123;<br><br>    <span class="hljs-type">boolean</span> <span class="hljs-title function_">equals</span><span class="hljs-params">(Object obj)</span>;<br><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">hashCode</span><span class="hljs-params">()</span>;<br><br>    String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span>;<br><br>    Class&lt;? <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Annotation</span>&gt; annotationType();<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> java.lang.annotation;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">ElementType</span> &#123;<br>    TYPE,               <span class="hljs-comment">/* 类、接口（包括注释类型）或枚举声明  */</span><br><br>    FIELD,              <span class="hljs-comment">/* 字段声明（包括枚举常量）  */</span><br><br>    METHOD,             <span class="hljs-comment">/* 方法声明  */</span><br><br>    PARAMETER,          <span class="hljs-comment">/* 参数声明  */</span><br><br>    CONSTRUCTOR,        <span class="hljs-comment">/* 构造方法声明  */</span><br><br>    LOCAL_VARIABLE,     <span class="hljs-comment">/* 局部变量声明  */</span><br><br>    ANNOTATION_TYPE,    <span class="hljs-comment">/* 注释类型声明  */</span><br><br>    PACKAGE             <span class="hljs-comment">/* 包声明  */</span><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> java.lang.annotation;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">RetentionPolicy</span> &#123;<br>    SOURCE,            <span class="hljs-comment">/* Annotation信息仅存在于编译器处理期间，编译器处理完之后就没有该Annotation信息了  */</span><br><br>    CLASS,             <span class="hljs-comment">/* 编译器将Annotation存储于类对应的.class文件中。默认行为  */</span><br><br>    RUNTIME            <span class="hljs-comment">/* 编译器将Annotation存储于class文件中，并且可由JVM读入 */</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="通用定义"><a href="#通用定义" class="headerlink" title="通用定义"></a>通用定义</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Documented</span><br><span class="hljs-meta">@Target(ElementType.TYPE)</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> MyAnnotation1 &#123;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>@interface</strong></p><p>实现 java.lang.annotation.Annotation  接口, 该注解是一个Annotation</p><p><strong>@Documented</strong></p><p>类和方法可以出现在javadoc中</p><p><strong>@Target(ElementType.TYPE)</strong></p><p>Annotation 作用范围, 如果没有则作用范围随意</p><ul><li>TYPE 意味着，它能标注”类、接口（包括注释类型）或枚举声明”。</li><li>FIELD 意味着，它能标注”字段声明”。</li><li>METHOD 意味着，它能标注”方法”。</li><li>PARAMETER 意味着，它能标注”参数”。</li><li>CONSTRUCTOR 意味着，它能标注”构造方法”。</li><li>LOCAL_VARIABLE 意味着，它能标注”局部变量”。</li></ul><p><strong>@Retention(RetentionPolicy.RUNTIME)</strong></p><p>指定Annotation的策略, 后接RetentionPolicy.RUNTIME，编译器会将该 Annotation 信息保留在 .class 文件中，并且能被虚拟机读取</p><h2 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Deprecated</span>  -- <span class="hljs-meta">@Deprecated</span> 所标注内容，不再被建议使用。<br><span class="hljs-meta">@Override</span>    -- <span class="hljs-meta">@Override</span> 只能标注方法，表示该方法覆盖父类中的方法。<br><span class="hljs-meta">@Documented</span>  -- <span class="hljs-meta">@Documented</span> 所标注内容，可以出现在javadoc中。<br><span class="hljs-meta">@Inherited</span>   -- <span class="hljs-meta">@Inherited</span>只能被用来标注注解，它所标注的注解具有继承性。<br><span class="hljs-meta">@Retention</span>   -- <span class="hljs-meta">@Retention</span>只能被用来标注注解，而且它被用来指定注解的RetentionPolicy属性。<br><span class="hljs-meta">@Target</span>      -- <span class="hljs-meta">@Target</span>只能被用来标注注解，而且它被用来指定注解的ElementType属性。<br><span class="hljs-meta">@SuppressWarnings</span> -- <span class="hljs-meta">@SuppressWarnings</span> 所标注内容产生的警告，编译器会对这些警告保持静默。<br></code></pre></td></tr></table></figure><h2 id="公共字段填充"><a href="#公共字段填充" class="headerlink" title="公共字段填充"></a>公共字段填充</h2><p><strong>自定义注解</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Target(ElementType.METHOD)</span> <span class="hljs-comment">// 作用范围:方法</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span> <span class="hljs-comment">// 信息保留在.class文件</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> AutoFill &#123;<br>    <span class="hljs-comment">//数据库操作类型enum : INSERT UPDATE</span><br>    OperationType <span class="hljs-title function_">value</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">OperationType</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新操作</span><br><span class="hljs-comment">     */</span><br>    UPDATE,<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 插入操作</span><br><span class="hljs-comment">     */</span><br>    INSERT<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>自定义切面，实现公共字段自动填充处理逻辑</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AutoFillAspect</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 切入点</span><br><span class="hljs-comment">     * 在mapper包且有<span class="hljs-doctag">@AutoFill</span>条件切入</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Pointcut(&quot;execution(* com.sky.mapper.*.*(..)) &amp;&amp; @annotation(com.sky.annotation.AutoFill)&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">autoFillPointCut</span><span class="hljs-params">()</span>&#123;&#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 前置通知,在通知中进行公共字段的赋值</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> joinPoint</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Before(&quot;autoFillPointCut()&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">autoFill</span><span class="hljs-params">(JoinPoint joinPoint)</span>&#123;<br>        log.info(<span class="hljs-string">&quot;开始进行公共字段自动填充...&quot;</span>);<br>        <span class="hljs-comment">// 获取被拦截方法的数据库操作类型</span><br>        <span class="hljs-type">MethodSignature</span> <span class="hljs-variable">signature</span> <span class="hljs-operator">=</span> (MethodSignature) joinPoint.getSignature();<span class="hljs-comment">// 方法签名对象</span><br>        <span class="hljs-type">AutoFill</span> <span class="hljs-variable">autoFill</span> <span class="hljs-operator">=</span> signature.getMethod().getAnnotation(AutoFill.class);<span class="hljs-comment">// 方法注解对象</span><br>        <span class="hljs-type">OperationType</span> <span class="hljs-variable">operationType</span> <span class="hljs-operator">=</span> autoFill.value();<span class="hljs-comment">// 获得数据库操作类型</span><br>        <span class="hljs-comment">// 获取当前被拦截的方法的参数 -- 实体对象</span><br>        Object[] args = joinPoint.getArgs();<br>        <span class="hljs-keyword">if</span> (args==<span class="hljs-literal">null</span> || args.length==<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-comment">// 获得sql方法的第一个参数, 这里只有一个参数: 实体类</span><br>        <span class="hljs-type">Object</span> <span class="hljs-variable">entity</span> <span class="hljs-operator">=</span> args[<span class="hljs-number">0</span>];<br>        <span class="hljs-comment">// 准备赋值数据</span><br>        <span class="hljs-type">LocalDateTime</span> <span class="hljs-variable">now</span> <span class="hljs-operator">=</span> LocalDateTime.now();<br>        <span class="hljs-type">Long</span> <span class="hljs-variable">empId</span> <span class="hljs-operator">=</span> BaseContext.getCurrentId();<br>        <span class="hljs-comment">// 根据不同的操作类型, 为对应属性通过反射来赋值</span><br>        <span class="hljs-keyword">if</span> (operationType == INSERT)&#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-comment">// 4个字段赋值</span><br>                <span class="hljs-type">Method</span> <span class="hljs-variable">setCreateTime</span> <span class="hljs-operator">=</span> entity.getClass().getDeclaredMethod(SET_CREATE_TIME, LocalDateTime.class);<br>                <span class="hljs-type">Method</span> <span class="hljs-variable">setUpdateTime</span> <span class="hljs-operator">=</span> entity.getClass().getDeclaredMethod(SET_UPDATE_TIME, LocalDateTime.class);<br>                <span class="hljs-type">Method</span> <span class="hljs-variable">setCreateUser</span> <span class="hljs-operator">=</span> entity.getClass().getDeclaredMethod(SET_CREATE_USER, Long.class);<br>                <span class="hljs-type">Method</span> <span class="hljs-variable">setUpdateUser</span> <span class="hljs-operator">=</span> entity.getClass().getDeclaredMethod(SET_UPDATE_USER, Long.class);<br>                <span class="hljs-comment">// 通过反射为对象属性赋值</span><br>                setCreateTime.invoke(entity, now);<br>                setUpdateTime.invoke(entity, now);<br>                setCreateUser.invoke(entity, empId);<br>                setUpdateUser.invoke(entity, empId);<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (operationType == OperationType.UPDATE) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-comment">// 2个字段赋值</span><br>                <span class="hljs-type">Method</span> <span class="hljs-variable">setUpdateTime</span> <span class="hljs-operator">=</span> entity.getClass().getDeclaredMethod(SET_UPDATE_TIME, LocalDateTime.class);<br>                <span class="hljs-type">Method</span> <span class="hljs-variable">setUpdateUser</span> <span class="hljs-operator">=</span> entity.getClass().getDeclaredMethod(SET_UPDATE_USER, Long.class);<br>                <span class="hljs-comment">// 通过反射为对象属性赋值</span><br>                setUpdateTime.invoke(entity, now);<br>                setUpdateUser.invoke(entity, empId);<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mapper层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 编辑员工</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> employee</span><br><span class="hljs-comment">     */</span><br><span class="hljs-meta">@AutoFill(UPDATE)</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">(Employee employee)</span>;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 新增员工</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> employee</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@AutoFill(INSERT)</span><br>    <span class="hljs-meta">@Insert(&quot;insert into employee(username, name, phone, sex, id_number, password, status, create_time, update_time, create_user, update_user) values (#&#123;username&#125;, #&#123;name&#125;, #&#123;phone&#125;, #&#123;sex&#125;, #&#123;idNumber&#125;, #&#123;password&#125;, #&#123;status&#125;, #&#123;createTime&#125;, #&#123;updateTime&#125;, #&#123;createUser&#125;, #&#123;updateUser&#125;)&quot;)</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(Employee employee)</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>后端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>注解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>苍穹外卖</title>
    <link href="/2023/12/06/%E8%8B%8D%E7%A9%B9%E5%A4%96%E5%8D%96/"/>
    <url>/2023/12/06/%E8%8B%8D%E7%A9%B9%E5%A4%96%E5%8D%96/</url>
    
    <content type="html"><![CDATA[<h1 id="day01"><a href="#day01" class="headerlink" title="day01"></a>day01</h1><h2 id="软件开发介绍"><a href="#软件开发介绍" class="headerlink" title="软件开发介绍"></a>软件开发介绍</h2><p><code>软件开发流程</code></p><pre><code class=" mermaid">graph LR需求分析 --&gt; 设计 --&gt; 编码 --&gt;  测试 --&gt; 上线运维</code></pre><p><code>软件环境</code></p><ol><li>开发环境(dev),开发阶段使用的环境,外部人员无法访问</li><li>测试环境(test),项目功能模块开发完毕,单元测试后,把项目部署到服务器,让测试人员对项目进行测试,这台测试服务器是测试环境,外部人员无法访问</li><li>生产环境(pro),项目开发完毕, 由测试人员测试通过, 可以上线项目, 将项目部署到线上环境, 外部人员可以访问</li></ol><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><p>包括<code>系统管理后台</code>和<code>小程序端前台</code>两部分, 系统管理后台提供给内部员工使用, 对餐厅的分类,菜品,套餐,订单,员工等进行管理维护,对餐厅各类数据统计, 可以进行语音播报功能;  小程序端提供给消费者使用, 浏览菜品, 添加购物车, 下单, 支付, 催单等.</p><p><code>后台功能</code></p><table><thead><tr><th>模块</th><th>描述</th></tr></thead><tbody><tr><td>登录&#x2F;退出</td><td>内部员工必须登录后,才可以访问系统管理后台</td></tr><tr><td>员工管理</td><td>管理员可以在系统后台对员工信息进行管理，包含查询、新增、编辑、禁用等功能</td></tr><tr><td>分类管理</td><td>主要对当前餐厅经营的 菜品分类 或 套餐分类 进行管理维护， 包含查询、新增、修改、删除等功能</td></tr><tr><td>菜品管理</td><td>主要维护各个分类下的菜品信息，包含查询、新增、修改、删除、启售、停售等功能</td></tr><tr><td>套餐管理</td><td>主要维护当前餐厅中的套餐信息，包含查询、新增、修改、删除、启售、停售等功能</td></tr><tr><td>订单管理</td><td>主要维护用户在移动端下的订单信息，包含查询、取消、派送、完成，以及订单报表下载等功能</td></tr><tr><td>数据统计</td><td>主要完成对餐厅的各类数据统计，如营业额、用户数量、订单等</td></tr></tbody></table><p><code>前台功能</code></p><table><thead><tr><th>模块</th><th>描述</th></tr></thead><tbody><tr><td>登录&#x2F;退出</td><td>用户需要通过微信授权后登录使用小程序进行点餐</td></tr><tr><td>点餐-菜单</td><td>在点餐界面需要展示出菜品分类&#x2F;套餐分类, 并根据当前选择的分类加载其中的菜品信息, 供用户查询选择</td></tr><tr><td>点餐-购物车</td><td>用户选中的菜品就会加入用户的购物车, 主要包含 查询购物车、加入购物车、删除购物车、清空购物车等功能</td></tr><tr><td>订单支付</td><td>用户选完菜品&#x2F;套餐后, 可以对购物车菜品进行结算支付, 这时就需要进行订单的支付</td></tr><tr><td>个人信息</td><td>在个人中心页面中会展示当前用户的基本信息, 用户可以管理收货地址, 也可以查询历史订单数据</td></tr></tbody></table><p><code>原型图</code></p><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20221106195259858.png" alt="image-20221106195259858" style="zoom:50%;" /><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20221106195354556.png" alt="image-20221106195354556" style="zoom:50%;" /><p><code>技术</code></p><p><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20221106185646994.png" alt="image-20221106185646994"></p><h2 id="开发环境搭建"><a href="#开发环境搭建" class="headerlink" title="开发环境搭建"></a>开发环境搭建</h2><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20221106200821282.png" alt="image-20221106200821282" style="zoom: 67%;" /><p><code>前端环境搭建</code></p><p>将nginx文件夹移动到非中文目录, 启动exe文件, 访问</p><p><a href="http://localhost/">http://localhost</a></p><p><code>后端环境搭建</code></p><p>IDEA打开工程, 项目由三个模块</p><table><thead><tr><th><strong>序号</strong></th><th><strong>名称</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>1</td><td>sky-take-out</td><td>maven父工程，统一管理依赖版本，聚合其他子模块</td></tr><tr><td>2</td><td>sky-common</td><td>子模块，存放公共类，例如：工具类、常量类、异常类等</td></tr><tr><td>3</td><td>sky-pojo</td><td>子模块，存放实体类、VO、DTO等</td></tr><tr><td>4</td><td>sky-server</td><td>子模块，后端服务，存放配置文件、Controller、Service、Mapper等</td></tr></tbody></table><p><code>sky-common</code></p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>constant</td><td>存放相关常量类</td></tr><tr><td>context</td><td>存放上下文类</td></tr><tr><td>enumeration</td><td>项目的枚举类存储</td></tr><tr><td>exception</td><td>存放自定义异常类</td></tr><tr><td>json</td><td>处理json转换的类</td></tr><tr><td>properties</td><td>存放SpringBoot相关的配置属性类</td></tr><tr><td>result</td><td>返回结果类的封装</td></tr><tr><td>utils</td><td>常用工具类</td></tr></tbody></table><p><code>sky-pojo</code></p><table><thead><tr><th><strong>名称</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>Entity</td><td>实体，通常和数据库中的表对应</td></tr><tr><td>DTO</td><td>数据传输对象，通常用于程序中各层之间传递数据</td></tr><tr><td>VO</td><td>视图对象，为前端展示数据提供的对象</td></tr><tr><td>POJO</td><td>普通Java对象，只有属性和对应的getter和setter</td></tr></tbody></table><p><code>sky-server</code></p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>config</td><td>存放配置类</td></tr><tr><td>controller</td><td>存放controller类</td></tr><tr><td>interceptor</td><td>存放拦截器类</td></tr><tr><td>mapper</td><td>存放mapper接口</td></tr><tr><td>service</td><td>存放service类</td></tr><tr><td>SkyApplication</td><td>启动类</td></tr></tbody></table><p><code>SQL</code></p><p><code>表描述</code></p><table><thead><tr><th><strong>序号</strong></th><th><strong>表名</strong></th><th><strong>中文名</strong></th></tr></thead><tbody><tr><td>1</td><td>employee</td><td>员工表</td></tr><tr><td>2</td><td>category</td><td>分类表</td></tr><tr><td>3</td><td>dish</td><td>菜品表</td></tr><tr><td>4</td><td>dish_flavor</td><td>菜品口味表</td></tr><tr><td>5</td><td>setmeal</td><td>套餐表</td></tr><tr><td>6</td><td>setmeal_dish</td><td>套餐菜品关系表</td></tr><tr><td>7</td><td>user</td><td>用户表</td></tr><tr><td>8</td><td>address_book</td><td>地址表</td></tr><tr><td>9</td><td>shopping_cart</td><td>购物车表</td></tr><tr><td>10</td><td>orders</td><td>订单表</td></tr><tr><td>11</td><td>order_detail</td><td>订单明细表</td></tr></tbody></table><p><code>sql文件</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> DATABASE  IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> `sky_take_out` ;<br>USE `sky_take_out`;<br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `address_book`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `address_book` (<br>  `id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `user_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;用户id&#x27;</span>,<br>  `consignee` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;收货人&#x27;</span>,<br>  `sex` <span class="hljs-type">varchar</span>(<span class="hljs-number">2</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;性别&#x27;</span>,<br>  `phone` <span class="hljs-type">varchar</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;手机号&#x27;</span>,<br>  `province_code` <span class="hljs-type">varchar</span>(<span class="hljs-number">12</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8mb4  <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;省级区划编号&#x27;</span>,<br>  `province_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8mb4  <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;省级名称&#x27;</span>,<br>  `city_code` <span class="hljs-type">varchar</span>(<span class="hljs-number">12</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8mb4  <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;市级区划编号&#x27;</span>,<br>  `city_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8mb4  <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;市级名称&#x27;</span>,<br>  `district_code` <span class="hljs-type">varchar</span>(<span class="hljs-number">12</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8mb4  <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;区级区划编号&#x27;</span>,<br>  `district_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8mb4  <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;区级名称&#x27;</span>,<br>  `detail` <span class="hljs-type">varchar</span>(<span class="hljs-number">200</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8mb4  <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;详细地址&#x27;</span>,<br>  `label` <span class="hljs-type">varchar</span>(<span class="hljs-number">100</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8mb4  <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;标签&#x27;</span>,<br>  `is_default` tinyint(<span class="hljs-number">1</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;默认 0 否 1是&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">2</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb3 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;地址簿&#x27;</span>;<br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `category`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `category` (<br>  `id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `type` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;类型   1 菜品分类 2 套餐分类&#x27;</span>,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;分类名称&#x27;</span>,<br>  `sort` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;顺序&#x27;</span>,<br>  `status` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;分类状态 0:禁用，1:启用&#x27;</span>,<br>  `create_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  `update_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>  `create_user` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;创建人&#x27;</span>,<br>  `update_user` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;修改人&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `idx_category_name` (`name`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">23</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb3 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;菜品及套餐分类&#x27;</span>;<br><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `category` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">11</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;酒水饮料&#x27;</span>,<span class="hljs-number">10</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-09 22:09:18&#x27;</span>,<span class="hljs-string">&#x27;2022-06-09 22:09:18&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `category` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">12</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;传统主食&#x27;</span>,<span class="hljs-number">9</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-09 22:09:32&#x27;</span>,<span class="hljs-string">&#x27;2022-06-09 22:18:53&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `category` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">13</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;人气套餐&#x27;</span>,<span class="hljs-number">12</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-09 22:11:38&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 11:04:40&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `category` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">15</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;商务套餐&#x27;</span>,<span class="hljs-number">13</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-09 22:14:10&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 11:04:48&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `category` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">16</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;蜀味烤鱼&#x27;</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-09 22:15:37&#x27;</span>,<span class="hljs-string">&#x27;2022-08-31 14:27:25&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `category` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">17</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;蜀味牛蛙&#x27;</span>,<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-09 22:16:14&#x27;</span>,<span class="hljs-string">&#x27;2022-08-31 14:39:44&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `category` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">18</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;特色蒸菜&#x27;</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-09 22:17:42&#x27;</span>,<span class="hljs-string">&#x27;2022-06-09 22:17:42&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `category` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">19</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;新鲜时蔬&#x27;</span>,<span class="hljs-number">7</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-09 22:18:12&#x27;</span>,<span class="hljs-string">&#x27;2022-06-09 22:18:28&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `category` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">20</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;水煮鱼&#x27;</span>,<span class="hljs-number">8</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-09 22:22:29&#x27;</span>,<span class="hljs-string">&#x27;2022-06-09 22:23:45&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `category` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">21</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;汤类&#x27;</span>,<span class="hljs-number">11</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 10:51:47&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 10:51:47&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `dish`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `dish` (<br>  `id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜品名称&#x27;</span>,<br>  `category_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜品分类id&#x27;</span>,<br>  `price` <span class="hljs-type">decimal</span>(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜品价格&#x27;</span>,<br>  `image` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;图片&#x27;</span>,<br>  `description` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;描述信息&#x27;</span>,<br>  `status` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;1&#x27;</span> COMMENT <span class="hljs-string">&#x27;0 停售 1 起售&#x27;</span>,<br>  `create_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  `update_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>  `create_user` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;创建人&#x27;</span>,<br>  `update_user` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;修改人&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `idx_dish_name` (`name`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">70</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb3 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;菜品&#x27;</span>;<br><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">46</span>,<span class="hljs-string">&#x27;王老吉&#x27;</span>,<span class="hljs-number">11</span>,<span class="hljs-number">6.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/41bfcacf-7ad4-4927-8b26-df366553a94c.png&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-09 22:40:47&#x27;</span>,<span class="hljs-string">&#x27;2022-06-09 22:40:47&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">47</span>,<span class="hljs-string">&#x27;北冰洋&#x27;</span>,<span class="hljs-number">11</span>,<span class="hljs-number">4.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/4451d4be-89a2-4939-9c69-3a87151cb979.png&#x27;</span>,<span class="hljs-string">&#x27;还是小时候的味道&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 09:18:49&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 09:18:49&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">48</span>,<span class="hljs-string">&#x27;雪花啤酒&#x27;</span>,<span class="hljs-number">11</span>,<span class="hljs-number">4.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/bf8cbfc1-04d2-40e8-9826-061ee41ab87c.png&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 09:22:54&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 09:22:54&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">49</span>,<span class="hljs-string">&#x27;米饭&#x27;</span>,<span class="hljs-number">12</span>,<span class="hljs-number">2.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/76752350-2121-44d2-b477-10791c23a8ec.png&#x27;</span>,<span class="hljs-string">&#x27;精选五常大米&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 09:30:17&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 09:30:17&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">50</span>,<span class="hljs-string">&#x27;馒头&#x27;</span>,<span class="hljs-number">12</span>,<span class="hljs-number">1.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/475cc599-8661-4899-8f9e-121dd8ef7d02.png&#x27;</span>,<span class="hljs-string">&#x27;优质面粉&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 09:34:28&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 09:34:28&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">51</span>,<span class="hljs-string">&#x27;老坛酸菜鱼&#x27;</span>,<span class="hljs-number">20</span>,<span class="hljs-number">56.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/4a9cefba-6a74-467e-9fde-6e687ea725d7.png&#x27;</span>,<span class="hljs-string">&#x27;原料：汤，草鱼，酸菜&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 09:40:51&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 09:40:51&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">52</span>,<span class="hljs-string">&#x27;经典酸菜鮰鱼&#x27;</span>,<span class="hljs-number">20</span>,<span class="hljs-number">66.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/5260ff39-986c-4a97-8850-2ec8c7583efc.png&#x27;</span>,<span class="hljs-string">&#x27;原料：酸菜，江团，鮰鱼&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 09:46:02&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 09:46:02&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">53</span>,<span class="hljs-string">&#x27;蜀味水煮草鱼&#x27;</span>,<span class="hljs-number">20</span>,<span class="hljs-number">38.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/a6953d5a-4c18-4b30-9319-4926ee77261f.png&#x27;</span>,<span class="hljs-string">&#x27;原料：草鱼，汤&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 09:48:37&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 09:48:37&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">54</span>,<span class="hljs-string">&#x27;清炒小油菜&#x27;</span>,<span class="hljs-number">19</span>,<span class="hljs-number">18.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/3613d38e-5614-41c2-90ed-ff175bf50716.png&#x27;</span>,<span class="hljs-string">&#x27;原料：小油菜&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 09:51:46&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 09:51:46&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">55</span>,<span class="hljs-string">&#x27;蒜蓉娃娃菜&#x27;</span>,<span class="hljs-number">19</span>,<span class="hljs-number">18.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/4879ed66-3860-4b28-ba14-306ac025fdec.png&#x27;</span>,<span class="hljs-string">&#x27;原料：蒜，娃娃菜&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 09:53:37&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 09:53:37&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">56</span>,<span class="hljs-string">&#x27;清炒西兰花&#x27;</span>,<span class="hljs-number">19</span>,<span class="hljs-number">18.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/e9ec4ba4-4b22-4fc8-9be0-4946e6aeb937.png&#x27;</span>,<span class="hljs-string">&#x27;原料：西兰花&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 09:55:44&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 09:55:44&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">57</span>,<span class="hljs-string">&#x27;炝炒圆白菜&#x27;</span>,<span class="hljs-number">19</span>,<span class="hljs-number">18.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/22f59feb-0d44-430e-a6cd-6a49f27453ca.png&#x27;</span>,<span class="hljs-string">&#x27;原料：圆白菜&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 09:58:35&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 09:58:35&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">58</span>,<span class="hljs-string">&#x27;清蒸鲈鱼&#x27;</span>,<span class="hljs-number">18</span>,<span class="hljs-number">98.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/c18b5c67-3b71-466c-a75a-e63c6449f21c.png&#x27;</span>,<span class="hljs-string">&#x27;原料：鲈鱼&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 10:12:28&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 10:12:28&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">59</span>,<span class="hljs-string">&#x27;东坡肘子&#x27;</span>,<span class="hljs-number">18</span>,<span class="hljs-number">138.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/a80a4b8c-c93e-4f43-ac8a-856b0d5cc451.png&#x27;</span>,<span class="hljs-string">&#x27;原料：猪肘棒&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 10:24:03&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 10:24:03&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">60</span>,<span class="hljs-string">&#x27;梅菜扣肉&#x27;</span>,<span class="hljs-number">18</span>,<span class="hljs-number">58.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/6080b118-e30a-4577-aab4-45042e3f88be.png&#x27;</span>,<span class="hljs-string">&#x27;原料：猪肉，梅菜&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 10:26:03&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 10:26:03&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">61</span>,<span class="hljs-string">&#x27;剁椒鱼头&#x27;</span>,<span class="hljs-number">18</span>,<span class="hljs-number">66.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/13da832f-ef2c-484d-8370-5934a1045a06.png&#x27;</span>,<span class="hljs-string">&#x27;原料：鲢鱼，剁椒&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 10:28:54&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 10:28:54&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">62</span>,<span class="hljs-string">&#x27;金汤酸菜牛蛙&#x27;</span>,<span class="hljs-number">17</span>,<span class="hljs-number">88.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/7694a5d8-7938-4e9d-8b9e-2075983a2e38.png&#x27;</span>,<span class="hljs-string">&#x27;原料：鲜活牛蛙，酸菜&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 10:33:05&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 10:33:05&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">63</span>,<span class="hljs-string">&#x27;香锅牛蛙&#x27;</span>,<span class="hljs-number">17</span>,<span class="hljs-number">88.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/f5ac8455-4793-450c-97ba-173795c34626.png&#x27;</span>,<span class="hljs-string">&#x27;配料：鲜活牛蛙，莲藕，青笋&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 10:35:40&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 10:35:40&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">64</span>,<span class="hljs-string">&#x27;馋嘴牛蛙&#x27;</span>,<span class="hljs-number">17</span>,<span class="hljs-number">88.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/7a55b845-1f2b-41fa-9486-76d187ee9ee1.png&#x27;</span>,<span class="hljs-string">&#x27;配料：鲜活牛蛙，丝瓜，黄豆芽&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 10:37:52&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 10:37:52&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">65</span>,<span class="hljs-string">&#x27;草鱼2斤&#x27;</span>,<span class="hljs-number">16</span>,<span class="hljs-number">68.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/b544d3ba-a1ae-4d20-a860-81cb5dec9e03.png&#x27;</span>,<span class="hljs-string">&#x27;原料：草鱼，黄豆芽，莲藕&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 10:41:08&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 10:41:08&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">66</span>,<span class="hljs-string">&#x27;江团鱼2斤&#x27;</span>,<span class="hljs-number">16</span>,<span class="hljs-number">119.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/a101a1e9-8f8b-47b2-afa4-1abd47ea0a87.png&#x27;</span>,<span class="hljs-string">&#x27;配料：江团鱼，黄豆芽，莲藕&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 10:42:42&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 10:42:42&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">67</span>,<span class="hljs-string">&#x27;鮰鱼2斤&#x27;</span>,<span class="hljs-number">16</span>,<span class="hljs-number">72.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/8cfcc576-4b66-4a09-ac68-ad5b273c2590.png&#x27;</span>,<span class="hljs-string">&#x27;原料：鮰鱼，黄豆芽，莲藕&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 10:43:56&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 10:43:56&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">68</span>,<span class="hljs-string">&#x27;鸡蛋汤&#x27;</span>,<span class="hljs-number">21</span>,<span class="hljs-number">4.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/c09a0ee8-9d19-428d-81b9-746221824113.png&#x27;</span>,<span class="hljs-string">&#x27;配料：鸡蛋，紫菜&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 10:54:25&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 10:54:25&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">69</span>,<span class="hljs-string">&#x27;平菇豆腐汤&#x27;</span>,<span class="hljs-number">21</span>,<span class="hljs-number">6.00</span>,<span class="hljs-string">&#x27;https://sky-itcast.oss-cn-beijing.aliyuncs.com/16d0a3d6-2253-4cfc-9b49-bf7bd9eb2ad2.png&#x27;</span>,<span class="hljs-string">&#x27;配料：豆腐，平菇&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-06-10 10:55:02&#x27;</span>,<span class="hljs-string">&#x27;2022-06-10 10:55:02&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `dish_flavor`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `dish_flavor` (<br>  `id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `dish_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜品&#x27;</span>,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;口味名称&#x27;</span>,<br>  `<span class="hljs-keyword">value</span>` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;口味数据list&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">104</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb3 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;菜品口味关系表&#x27;</span>;<br><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">40</span>,<span class="hljs-number">10</span>,<span class="hljs-string">&#x27;甜味&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;无糖\&quot;,\&quot;少糖\&quot;,\&quot;半糖\&quot;,\&quot;多糖\&quot;,\&quot;全糖\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">41</span>,<span class="hljs-number">7</span>,<span class="hljs-string">&#x27;忌口&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不要葱\&quot;,\&quot;不要蒜\&quot;,\&quot;不要香菜\&quot;,\&quot;不要辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">42</span>,<span class="hljs-number">7</span>,<span class="hljs-string">&#x27;温度&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;热饮\&quot;,\&quot;常温\&quot;,\&quot;去冰\&quot;,\&quot;少冰\&quot;,\&quot;多冰\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">45</span>,<span class="hljs-number">6</span>,<span class="hljs-string">&#x27;忌口&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不要葱\&quot;,\&quot;不要蒜\&quot;,\&quot;不要香菜\&quot;,\&quot;不要辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">46</span>,<span class="hljs-number">6</span>,<span class="hljs-string">&#x27;辣度&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不辣\&quot;,\&quot;微辣\&quot;,\&quot;中辣\&quot;,\&quot;重辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">47</span>,<span class="hljs-number">5</span>,<span class="hljs-string">&#x27;辣度&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不辣\&quot;,\&quot;微辣\&quot;,\&quot;中辣\&quot;,\&quot;重辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">48</span>,<span class="hljs-number">5</span>,<span class="hljs-string">&#x27;甜味&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;无糖\&quot;,\&quot;少糖\&quot;,\&quot;半糖\&quot;,\&quot;多糖\&quot;,\&quot;全糖\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">49</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;甜味&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;无糖\&quot;,\&quot;少糖\&quot;,\&quot;半糖\&quot;,\&quot;多糖\&quot;,\&quot;全糖\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">50</span>,<span class="hljs-number">4</span>,<span class="hljs-string">&#x27;甜味&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;无糖\&quot;,\&quot;少糖\&quot;,\&quot;半糖\&quot;,\&quot;多糖\&quot;,\&quot;全糖\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">51</span>,<span class="hljs-number">3</span>,<span class="hljs-string">&#x27;甜味&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;无糖\&quot;,\&quot;少糖\&quot;,\&quot;半糖\&quot;,\&quot;多糖\&quot;,\&quot;全糖\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">52</span>,<span class="hljs-number">3</span>,<span class="hljs-string">&#x27;忌口&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不要葱\&quot;,\&quot;不要蒜\&quot;,\&quot;不要香菜\&quot;,\&quot;不要辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">86</span>,<span class="hljs-number">52</span>,<span class="hljs-string">&#x27;忌口&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不要葱\&quot;,\&quot;不要蒜\&quot;,\&quot;不要香菜\&quot;,\&quot;不要辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">87</span>,<span class="hljs-number">52</span>,<span class="hljs-string">&#x27;辣度&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不辣\&quot;,\&quot;微辣\&quot;,\&quot;中辣\&quot;,\&quot;重辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">88</span>,<span class="hljs-number">51</span>,<span class="hljs-string">&#x27;忌口&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不要葱\&quot;,\&quot;不要蒜\&quot;,\&quot;不要香菜\&quot;,\&quot;不要辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">89</span>,<span class="hljs-number">51</span>,<span class="hljs-string">&#x27;辣度&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不辣\&quot;,\&quot;微辣\&quot;,\&quot;中辣\&quot;,\&quot;重辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">92</span>,<span class="hljs-number">53</span>,<span class="hljs-string">&#x27;忌口&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不要葱\&quot;,\&quot;不要蒜\&quot;,\&quot;不要香菜\&quot;,\&quot;不要辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">93</span>,<span class="hljs-number">53</span>,<span class="hljs-string">&#x27;辣度&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不辣\&quot;,\&quot;微辣\&quot;,\&quot;中辣\&quot;,\&quot;重辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">94</span>,<span class="hljs-number">54</span>,<span class="hljs-string">&#x27;忌口&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不要葱\&quot;,\&quot;不要蒜\&quot;,\&quot;不要香菜\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">95</span>,<span class="hljs-number">56</span>,<span class="hljs-string">&#x27;忌口&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不要葱\&quot;,\&quot;不要蒜\&quot;,\&quot;不要香菜\&quot;,\&quot;不要辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">96</span>,<span class="hljs-number">57</span>,<span class="hljs-string">&#x27;忌口&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不要葱\&quot;,\&quot;不要蒜\&quot;,\&quot;不要香菜\&quot;,\&quot;不要辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">97</span>,<span class="hljs-number">60</span>,<span class="hljs-string">&#x27;忌口&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不要葱\&quot;,\&quot;不要蒜\&quot;,\&quot;不要香菜\&quot;,\&quot;不要辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">101</span>,<span class="hljs-number">66</span>,<span class="hljs-string">&#x27;辣度&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不辣\&quot;,\&quot;微辣\&quot;,\&quot;中辣\&quot;,\&quot;重辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">102</span>,<span class="hljs-number">67</span>,<span class="hljs-string">&#x27;辣度&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不辣\&quot;,\&quot;微辣\&quot;,\&quot;中辣\&quot;,\&quot;重辣\&quot;]&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `dish_flavor` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">103</span>,<span class="hljs-number">65</span>,<span class="hljs-string">&#x27;辣度&#x27;</span>,<span class="hljs-string">&#x27;[\&quot;不辣\&quot;,\&quot;微辣\&quot;,\&quot;中辣\&quot;,\&quot;重辣\&quot;]&#x27;</span>);<br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `employee`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `employee` (<br>  `id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;姓名&#x27;</span>,<br>  `username` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;用户名&#x27;</span>,<br>  `password` <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;密码&#x27;</span>,<br>  `phone` <span class="hljs-type">varchar</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;手机号&#x27;</span>,<br>  `sex` <span class="hljs-type">varchar</span>(<span class="hljs-number">2</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;性别&#x27;</span>,<br>  `id_number` <span class="hljs-type">varchar</span>(<span class="hljs-number">18</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;身份证号&#x27;</span>,<br>  `status` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;1&#x27;</span> COMMENT <span class="hljs-string">&#x27;状态 0:禁用，1:启用&#x27;</span>,<br>  `create_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  `update_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>  `create_user` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;创建人&#x27;</span>,<br>  `update_user` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;修改人&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `idx_username` (`username`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">2</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb3 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;员工信息&#x27;</span>;<br><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `employee` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;管理员&#x27;</span>,<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;123456&#x27;</span>,<span class="hljs-string">&#x27;13812312312&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;110101199001010047&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2022-02-15 15:51:20&#x27;</span>,<span class="hljs-string">&#x27;2022-02-17 09:16:20&#x27;</span>,<span class="hljs-number">10</span>,<span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `order_detail`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `order_detail` (<br>  `id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;名字&#x27;</span>,<br>  `image` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;图片&#x27;</span>,<br>  `order_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;订单id&#x27;</span>,<br>  `dish_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜品id&#x27;</span>,<br>  `setmeal_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;套餐id&#x27;</span>,<br>  `dish_flavor` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;口味&#x27;</span>,<br>  `number` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;1&#x27;</span> COMMENT <span class="hljs-string">&#x27;数量&#x27;</span>,<br>  `amount` <span class="hljs-type">decimal</span>(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;金额&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">5</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb3 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;订单明细表&#x27;</span>;<br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `orders`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `orders` (<br>  `id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `number` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;订单号&#x27;</span>,<br>  `status` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;1&#x27;</span> COMMENT <span class="hljs-string">&#x27;订单状态 1待付款 2待接单 3已接单 4派送中 5已完成 6已取消 7退款&#x27;</span>,<br>  `user_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;下单用户&#x27;</span>,<br>  `address_book_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;地址id&#x27;</span>,<br>  `order_time` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;下单时间&#x27;</span>,<br>  `checkout_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;结账时间&#x27;</span>,<br>  `pay_method` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;1&#x27;</span> COMMENT <span class="hljs-string">&#x27;支付方式 1微信,2支付宝&#x27;</span>,<br>  `pay_status` tinyint <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;支付状态 0未支付 1已支付 2退款&#x27;</span>,<br>  `amount` <span class="hljs-type">decimal</span>(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;实收金额&#x27;</span>,<br>  `remark` <span class="hljs-type">varchar</span>(<span class="hljs-number">100</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;备注&#x27;</span>,<br>  `phone` <span class="hljs-type">varchar</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;手机号&#x27;</span>,<br>  `address` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;地址&#x27;</span>,<br>  `user_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;用户名称&#x27;</span>,<br>  `consignee` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;收货人&#x27;</span>,<br>  `cancel_reason` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;订单取消原因&#x27;</span>,<br>  `rejection_reason` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;订单拒绝原因&#x27;</span>,<br>  `cancel_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;订单取消时间&#x27;</span>,<br>  `estimated_delivery_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;预计送达时间&#x27;</span>,<br>  `delivery_status` tinyint(<span class="hljs-number">1</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;1&#x27;</span> COMMENT <span class="hljs-string">&#x27;配送状态  1立即送出  0选择具体时间&#x27;</span>,<br>  `delivery_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;送达时间&#x27;</span>,<br>  `pack_amount` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;打包费&#x27;</span>,<br>  `tableware_number` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;餐具数量&#x27;</span>,<br>  `tableware_status` tinyint(<span class="hljs-number">1</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;1&#x27;</span> COMMENT <span class="hljs-string">&#x27;餐具数量状态  1按餐量提供  0选择具体数量&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">4</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb3 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;订单表&#x27;</span>;<br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `setmeal`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `setmeal` (<br>  `id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `category_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜品分类id&#x27;</span>,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;套餐名称&#x27;</span>,<br>  `price` <span class="hljs-type">decimal</span>(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;套餐价格&#x27;</span>,<br>  `status` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;1&#x27;</span> COMMENT <span class="hljs-string">&#x27;售卖状态 0:停售 1:起售&#x27;</span>,<br>  `description` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;描述信息&#x27;</span>,<br>  `image` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;图片&#x27;</span>,<br>  `create_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  `update_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>  `create_user` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;创建人&#x27;</span>,<br>  `update_user` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;修改人&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `idx_setmeal_name` (`name`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">32</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb3 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;套餐&#x27;</span>;<br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `setmeal_dish`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `setmeal_dish` (<br>  `id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `setmeal_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;套餐id&#x27;</span>,<br>  `dish_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜品id&#x27;</span>,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜品名称 （冗余字段）&#x27;</span>,<br>  `price` <span class="hljs-type">decimal</span>(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜品单价（冗余字段）&#x27;</span>,<br>  `copies` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜品份数&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">47</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb3 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;套餐菜品关系&#x27;</span>;<br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `shopping_cart`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `shopping_cart` (<br>  `id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;商品名称&#x27;</span>,<br>  `image` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;图片&#x27;</span>,<br>  `user_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `dish_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;菜品id&#x27;</span>,<br>  `setmeal_id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;套餐id&#x27;</span>,<br>  `dish_flavor` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;口味&#x27;</span>,<br>  `number` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;1&#x27;</span> COMMENT <span class="hljs-string">&#x27;数量&#x27;</span>,<br>  `amount` <span class="hljs-type">decimal</span>(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;金额&#x27;</span>,<br>  `create_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">9</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb3 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;购物车&#x27;</span>;<br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `<span class="hljs-keyword">user</span>`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `<span class="hljs-keyword">user</span>` (<br>  `id` <span class="hljs-type">bigint</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键&#x27;</span>,<br>  `openid` <span class="hljs-type">varchar</span>(<span class="hljs-number">45</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;微信用户唯一标识&#x27;</span>,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;姓名&#x27;</span>,<br>  `phone` <span class="hljs-type">varchar</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;手机号&#x27;</span>,<br>  `sex` <span class="hljs-type">varchar</span>(<span class="hljs-number">2</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;性别&#x27;</span>,<br>  `id_number` <span class="hljs-type">varchar</span>(<span class="hljs-number">18</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;身份证号&#x27;</span>,<br>  `avatar` <span class="hljs-type">varchar</span>(<span class="hljs-number">500</span>) <span class="hljs-keyword">COLLATE</span> utf8_bin <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;头像&#x27;</span>,<br>  `create_time` datetime <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">4</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb3 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;用户信息&#x27;</span>;<br></code></pre></td></tr></table></figure><p><code>前后端联调</code></p><p>通过断点调试跟踪后端程序的执行过程</p><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20221107110539832.png" alt="image-20221107110539832" style="zoom:67%;" /><p><code>nginx反向代理和负载均衡</code></p><p>前端发送的请求,如何请求到后端服务?</p><p>前端请求地址：<a href="http://localhost/api/employee/login">http://localhost/api/employee/login</a></p><p>后端接口地址：<a href="http://localhost:8080/admin/employee/login">http://localhost:8080/admin/employee/login</a></p><p><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20221107152041371.png" alt="image-20221107152041371"></p><p><code>nginx反向代理</code></p><p>将前端发送的动态请求由nginx转发到后端服务器, 提供访问速度(走nginx缓存), 负载均衡(集群服务器),保证后端服务安全(隐藏后端服务地址)</p><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20221107153808368.png" alt="image-20221107153808368" style="zoom:67%;" /><p><code>反向代理</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nginx">server&#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">server_name</span> localhost;<br>    <br>    <span class="hljs-section">location</span> /api/&#123;<br>        <span class="hljs-attribute">proxy_pass</span> http://localhost:8080/admin/; <span class="hljs-comment">#反向代理</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>proxy_pass:  设置代理服务器地址; 当访问  <a href="http://localhost/api/xxx">http://localhost/api/xxx</a>,  反向代理到 <a href="http://localhost:8080/admin/xxx">http://localhost:8080/admin/xxx</a></p><p><code>负载均衡</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> webservers&#123;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.128:8080</span>;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.129:8080</span>;<br>&#125;<br>server&#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">server_name</span> localhost;<br>    <br>    <span class="hljs-section">location</span> /api/&#123;<br>        <span class="hljs-attribute">proxy_pass</span> http://webservers/admin;<span class="hljs-comment">#负载均衡</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>当访问  <a href="http://localhost/api/xxx">http://localhost/api/xxx</a>,  反向代理到 <a href="http://webservers/admin/xxx">http://webservers/admin/xxx</a>, 然后根据webservers寻找一台服务器, 根据负载均衡策略最终代理到 <a href="http://192.168.100.128:8080/admin/xxx">http://192.168.100.128:8080/admin/xxx</a> 或 <a href="http://192.168.100.129:8080/admin/xxx">http://192.168.100.129:8080/admin/xxx</a></p><blockquote><p>这里不一定非是 webservers, 保持一致即可</p></blockquote><p><code>负载均衡策略</code></p><table><thead><tr><th><strong>名称</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>轮询</td><td>默认方式</td></tr><tr><td>weight</td><td>权重方式，默认为1，权重越高，被分配的客户端请求就越多</td></tr><tr><td>ip_hash</td><td>依据ip分配方式，这样每个访客可以固定访问一个后端服务</td></tr><tr><td>least_conn</td><td>依据最少连接方式，把请求优先分配给连接数少的后端服务</td></tr><tr><td>url_hash</td><td>依据url分配方式，这样相同的url会被分配到同一个后端服务</td></tr><tr><td>fair</td><td>依据响应时间方式，响应时间短的服务将会被优先分配</td></tr></tbody></table><p><code>示例</code></p><p><strong>默认轮询</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> webservers&#123;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.128:8080</span>;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.129:8080</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>weight</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> webservers&#123;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.128:8080</span> weight=<span class="hljs-number">90</span>;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.129:8080</span> weight=<span class="hljs-number">10</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>ip_hash</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> webservers&#123;<br>    ip_hash;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.128:8080</span>;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.129:8080</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>least_conn</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> webservers&#123;<br>    least_conn;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.128:8080</span>;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.129:8080</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>url_hash</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> webservers&#123;<br>    <span class="hljs-attribute">hash</span> &amp;request_uri;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.128:8080</span>;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.129:8080</span>;<br>&#125;c<br></code></pre></td></tr></table></figure><p><strong>fair</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> webservers&#123;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.128:8080</span>;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.100.129:8080</span>;<br>    fair;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>完善登录功能</code></p><blockquote><p>使用md5对密码加密存储</p></blockquote><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20221107160739680.png" alt="image-20221107160739680" style="zoom: 80%;" /><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Employee <span class="hljs-title function_">login</span><span class="hljs-params">(EmployeeLoginDTO employeeLoginDTO)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">username</span> <span class="hljs-operator">=</span> employeeLoginDTO.getUsername();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> employeeLoginDTO.getPassword();<br><br>        <span class="hljs-comment">//1、根据用户名查询数据库中的数据</span><br>        <span class="hljs-type">Employee</span> <span class="hljs-variable">employee</span> <span class="hljs-operator">=</span> employeeMapper.getByUsername(username);<br><br>        <span class="hljs-comment">//2、处理各种异常情况（用户名不存在、密码不对、账号被锁定）</span><br>        <span class="hljs-keyword">if</span> (employee == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-comment">//账号不存在</span><br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AccountNotFoundException</span>(MessageConstant.ACCOUNT_NOT_FOUND);<br>        &#125;<br><br>        <span class="hljs-comment">// 进行md5加密，然后再进行比对</span><br>        password = DigestUtils.md5DigestAsHex(password.getBytes());<br><br>        <span class="hljs-keyword">if</span> (!password.equals(employee.getPassword())) &#123;<br>            <span class="hljs-comment">//密码错误</span><br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PasswordErrorException</span>(MessageConstant.PASSWORD_ERROR);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (employee.getStatus() == StatusConstant.DISABLE) &#123;<br>            <span class="hljs-comment">//账号被锁定</span><br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AccountLockedException</span>(MessageConstant.ACCOUNT_LOCKED);<br>        &#125;<br><br>        <span class="hljs-comment">//3、返回实体对象</span><br>        <span class="hljs-keyword">return</span> employee;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="导入接口文档"><a href="#导入接口文档" class="headerlink" title="导入接口文档"></a>导入接口文档</h2><p><code>前后端开发流程</code></p><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20221107181446913.png" alt="image-20221107181446913" style="zoom:67%;" /><ol><li>定义接口, 确定接口的路径, 请求方式, 传入参数, 返回参数</li><li>前端和后端一起开发, 同时, 也可以自行测试</li><li>提交给测试人员做最终测试</li></ol><p><code>YApi</code></p><p><a href="http://yapi.smart-xwork.cn/">http://yapi.smart-xwork.cn/</a></p><p>导入JSON接口, 后面根据接口文档开发</p><h2 id="Swagger"><a href="#Swagger" class="headerlink" title="Swagger"></a>Swagger</h2><p>生成可视化Restful风格的Web服务 <a href="https://swagger.io/">https://swagger.io/</a></p><ol><li>前后端分离开发更加方便</li><li>接口文档在线自动生成</li></ol><p>Knife4j 是 swagger 的加强版</p><ol><li>导入依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.xiaoymin<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>knife4j-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>配置类</li></ol><p>WebMvcConfiguration.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 通过knife4j生成接口文档</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">*/</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> Docket <span class="hljs-title function_">docket</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">ApiInfo</span> <span class="hljs-variable">apiInfo</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ApiInfoBuilder</span>()<br>                .title(<span class="hljs-string">&quot;苍穹外卖项目接口文档&quot;</span>)<br>                .version(<span class="hljs-string">&quot;2.0&quot;</span>)<br>                .description(<span class="hljs-string">&quot;苍穹外卖项目接口文档&quot;</span>)<br>                .build();<br>        <span class="hljs-type">Docket</span> <span class="hljs-variable">docket</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Docket</span>(DocumentationType.SWAGGER_2)<br>                .apiInfo(apiInfo)<br>                .select()<br>                .apis(RequestHandlerSelectors.basePackage(<span class="hljs-string">&quot;com.sky.controller&quot;</span>))<br>                .paths(PathSelectors.any())<br>                .build();<br>        <span class="hljs-keyword">return</span> docket;<br>    &#125;<br></code></pre></td></tr></table></figure><ol start="3"><li>静态资源映射</li></ol><p>WebMvcConfiguration.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 设置静态资源映射</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> registry</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addResourceHandlers</span><span class="hljs-params">(ResourceHandlerRegistry registry)</span> &#123;<br>       registry.addResourceHandler(<span class="hljs-string">&quot;/doc.html&quot;</span>).addResourceLocations(<span class="hljs-string">&quot;classpath:/META-INF/resources/&quot;</span>);<br>       registry.addResourceHandler(<span class="hljs-string">&quot;/webjars/**&quot;</span>).addResourceLocations(<span class="hljs-string">&quot;classpath:/META-INF/resources/webjars/&quot;</span>);<br>   &#125;<br></code></pre></td></tr></table></figure><ol start="4"><li>访问</li></ol><p>接口文档访问路径为: <a href="http://ip:port/doc.html">http://ip:port/doc.html</a>  -&gt;   <a href="http://localhost:8080/doc.html">http://localhost:8080/doc.html</a></p><p><code>Yapi 和 Swagger的区别</code></p><ol><li>Yapi是设计阶段的工具, 用来管理和维护接口</li><li>Swagger是开发阶段使用的框架, 帮助后端做后端的接口测试</li></ol><p><code>Swagger注解</code></p><table><thead><tr><th><strong>注解</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>@Api</td><td>用在类上，例如<code>Controller</code>，表示对类的说明</td></tr><tr><td>@ApiModel</td><td>用在类上，例如<code>entity、DTO、VO</code></td></tr><tr><td>@ApiModelProperty</td><td>用在<code>属性</code>上，描述属性信息</td></tr><tr><td>@ApiOperation</td><td>用在<code>方法</code>上，例如Controller的方法，说明方法的用途、作用</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@ApiModel(description = &quot;员工登录时传递的数据模型&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmployeeLoginDTO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-meta">@ApiModelProperty(&quot;用户名&quot;)</span><br>    <span class="hljs-keyword">private</span> String username;<br><br>    <span class="hljs-meta">@ApiModelProperty(&quot;密码&quot;)</span><br>    <span class="hljs-keyword">private</span> String password;<br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Builder</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-meta">@ApiModel(description = &quot;员工登录返回的数据格式&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmployeeLoginVO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-meta">@ApiModelProperty(&quot;主键值&quot;)</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-meta">@ApiModelProperty(&quot;用户名&quot;)</span><br>    <span class="hljs-keyword">private</span> String userName;<br><br>    <span class="hljs-meta">@ApiModelProperty(&quot;姓名&quot;)</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-meta">@ApiModelProperty(&quot;jwt令牌&quot;)</span><br>    <span class="hljs-keyword">private</span> String token;<br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> io.swagger.annotations.ApiModel;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiModelProperty;<br><span class="hljs-keyword">import</span> lombok.AllArgsConstructor;<br><span class="hljs-keyword">import</span> lombok.Builder;<br><span class="hljs-keyword">import</span> lombok.Data;<br><span class="hljs-keyword">import</span> lombok.NoArgsConstructor;<br><br><span class="hljs-keyword">import</span> java.io.Serializable;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Builder</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-meta">@ApiModel(description = &quot;员工登录返回的数据格式&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmployeeLoginVO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-meta">@ApiModelProperty(&quot;主键值&quot;)</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-meta">@ApiModelProperty(&quot;用户名&quot;)</span><br>    <span class="hljs-keyword">private</span> String userName;<br><br>    <span class="hljs-meta">@ApiModelProperty(&quot;姓名&quot;)</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-meta">@ApiModelProperty(&quot;jwt令牌&quot;)</span><br>    <span class="hljs-keyword">private</span> String token;<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="day02"><a href="#day02" class="headerlink" title="day02"></a>day02</h1><h2 id="新增员工"><a href="#新增员工" class="headerlink" title="新增员工"></a>新增员工</h2><blockquote><p>当前端提交的数据和实体类对应属性差别比较大时, 建议使用<strong>DTO</strong>来封装数据</p></blockquote><p><strong>EmployeeDTO</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.sky.dto;<br><br><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-keyword">import</span> java.io.Serializable;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmployeeDTO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-keyword">private</span> String username;<br><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-keyword">private</span> String phone;<br><br>    <span class="hljs-keyword">private</span> String sex;<br><br>    <span class="hljs-keyword">private</span> String idNumber;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>Controller 层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 新增员工</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;新增员工&quot;)</span><br><span class="hljs-meta">@PostMapping</span><br><span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">save</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> EmployeeDTO employeeDTO)</span>&#123;<br>    log.info(<span class="hljs-string">&quot;新增员工：&#123;&#125;&quot;</span>, employeeDTO);<br>    employeeService.save(employeeDTO);<br>    <span class="hljs-keyword">return</span> Result.success();<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>Service层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 新增员工</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> employeeDTO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">save</span><span class="hljs-params">(EmployeeDTO employeeDTO)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 新增员工</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> employeeDTO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">save</span><span class="hljs-params">(EmployeeDTO employeeDTO)</span> &#123;<br>    <span class="hljs-comment">// 1.数据拷贝 EmployeeDTO -&gt; Employee</span><br>    <span class="hljs-type">Employee</span> <span class="hljs-variable">employee</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Employee</span>();<br>    BeanUtils.copyProperties(employeeDTO, employee);<br>    <span class="hljs-comment">// 2.补全 Employee 数据</span><br>    <span class="hljs-comment">// 2.1.默认密码123456</span><br>    employee.setPassword(DigestUtils.md5DigestAsHex(DEFAULT_PASSWORD.getBytes()));<br>    <span class="hljs-comment">// 2.2.默认状态 开启(1)</span><br>    employee.setStatus(ENABLE);<br>    <span class="hljs-comment">// 2.3.默认时间now, 默认user - admin(id)</span><br>    employee.setCreateTime(LocalDateTime.now());<br>    employee.setUpdateTime(LocalDateTime.now());<br>    employee.setCreateUser(<span class="hljs-number">1L</span>);<br>    employee.setUpdateUser(<span class="hljs-number">1L</span>);<br>    <span class="hljs-comment">// 3.插入数据库数据</span><br>    employeeMapper.insert(employee);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>Mapper层</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 新增员工</span><br><span class="hljs-comment"> * @param employee</span><br><span class="hljs-comment"> */</span><br><span class="hljs-variable">@Insert</span>(&quot;insert into employee(username, name, phone, sex, id_number, password, status, create_time, update_time, create_user, update_user) values (#&#123;username&#125;, #&#123;name&#125;, #&#123;phone&#125;, #&#123;sex&#125;, #&#123;idNumber&#125;, #&#123;password&#125;, #&#123;status&#125;, #&#123;createTime&#125;, #&#123;updateTime&#125;, #&#123;createUser&#125;, #&#123;updateUser&#125;)&quot;)<br>void <span class="hljs-keyword">insert</span>(Employee employee);<br></code></pre></td></tr></table></figure><blockquote><ol><li>注意: 使用swagger调试时, 应该在登录获得一个全局参数添加到文档管理-&gt;全局参数设置</li></ol><p><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20231206210155964.png" alt="image-20231206210155964"></p><ol start="2"><li>重复插入username(唯一约束)相同的数据,  报错:</li></ol><p><code>java.sql.SQLIntegrityConstraintViolationException: Duplicate entry &#39;小智&#39; for key &#39;idx_username&#39;</code></p><p>解决: 定义全局异常处理器来处理</p><p>GlobalExceptionHandler.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 处理SQL异常</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> ex</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ExceptionHandler</span><br><span class="hljs-keyword">public</span> Result <span class="hljs-title function_">exceptionHandler</span><span class="hljs-params">(SQLIntegrityConstraintViolationException ex)</span>&#123;<br>    <span class="hljs-comment">//message =&gt; Duplicate entry &#x27;小智&#x27; for key &#x27;idx_username</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> ex.getMessage();<br>    <span class="hljs-keyword">if</span> (message.contains(<span class="hljs-string">&quot;Duplicate entry&quot;</span>))&#123;<br>        <span class="hljs-comment">// 空格切割</span><br>        String[] split = message.split(<span class="hljs-string">&quot; &quot;</span>);<br>        <span class="hljs-comment">// 取出 &#x27;小智&#x27;</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">username</span> <span class="hljs-operator">=</span> split[<span class="hljs-number">2</span>];<br>        <span class="hljs-comment">// &#x27;小智&#x27;已存在</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">msg</span> <span class="hljs-operator">=</span> username + ALREADY_EXISTS;<br>        <span class="hljs-keyword">return</span> Result.error(msg);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// 未知错误</span><br>        <span class="hljs-keyword">return</span> Result.error(UNKNOWN_ERROR);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="3"><li>employee.setCreateUser(1L);employee.setUpdateUser(1L);    id不能是固定值</li></ol><p><code>在JwtTokenAdminInterceptor中获取当前  empId</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">try</span> &#123;<br>    log.info(<span class="hljs-string">&quot;jwt校验:&#123;&#125;&quot;</span>, token);<br>    <span class="hljs-type">Claims</span> <span class="hljs-variable">claims</span> <span class="hljs-operator">=</span> JwtUtil.parseJWT(jwtProperties.getAdminSecretKey(), token);<br>    <span class="hljs-type">Long</span> <span class="hljs-variable">empId</span> <span class="hljs-operator">=</span> Long.valueOf(claims.get(JwtClaimsConstant.EMP_ID).toString());<br>    log.info(<span class="hljs-string">&quot;当前员工id：&quot;</span>, empId);  &lt;------------------- id  通过ThreadLocal进行传递<br>    <span class="hljs-comment">//3、通过，放行</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">catch</span> (Exception ex) &#123;<br>    <span class="hljs-comment">//4、不通过，响应401状态码</span><br>    response.setStatus(<span class="hljs-number">401</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>ThreadLocal</strong></p><p>Thread的局部变量, 为<code>每个线程</code>提供单独一份<code>存储空间</code>, 具有<code>线程隔离</code>效果, 只有同一个线程才能获取对应的值, 线程外不能访问</p><p>方法API</p><ul><li>public void set(T value) 设置当前线程的线程局部变量的值</li><li>public T get() 返回当前线程所对应的线程局部变量的值</li><li>public void remove()        移除当前线程的线程局部变量</li></ul><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20221111212349365.png" alt="image-20221111212349365" style="zoom:67%;" /><p><strong>ThreadLocal工具类</strong></p><p>sky-common</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.sky.context;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BaseContext</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ThreadLocal&lt;Long&gt; threadLocal = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadLocal</span>&lt;&gt;();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setCurrentId</span><span class="hljs-params">(Long id)</span> &#123;<br>        threadLocal.set(id);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Long <span class="hljs-title function_">getCurrentId</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> threadLocal.get();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">removeCurrentId</span><span class="hljs-params">()</span> &#123;<br>        threadLocal.remove();<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>修改JwtTokenAdminInterceptor逻辑</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//2、校验令牌</span><br><span class="hljs-keyword">try</span> &#123;<br>    log.info(<span class="hljs-string">&quot;jwt校验:&#123;&#125;&quot;</span>, token);<br>    <span class="hljs-type">Claims</span> <span class="hljs-variable">claims</span> <span class="hljs-operator">=</span> JwtUtil.parseJWT(jwtProperties.getAdminSecretKey(), token);<br>    <span class="hljs-type">Long</span> <span class="hljs-variable">empId</span> <span class="hljs-operator">=</span> Long.valueOf(claims.get(JwtClaimsConstant.EMP_ID).toString());<br>    log.info(<span class="hljs-string">&quot;当前员工id：&quot;</span>, empId);<br><br>    <span class="hljs-comment">//3.将用户id存储到ThreadLocal</span><br>    BaseContext.setCurrentId(empId);<br><br>    <span class="hljs-comment">//4、通过，放行</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">catch</span> (Exception ex) &#123;<br>    <span class="hljs-comment">//5、不通过，响应401状态码</span><br>    response.setStatus(<span class="hljs-number">401</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>EmployeeServiceImpl</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 新增员工</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> employeeDTO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">save</span><span class="hljs-params">(EmployeeDTO employeeDTO)</span> &#123;<br>    <span class="hljs-comment">// 1.数据拷贝 EmployeeDTO -&gt; Employee</span><br>    <span class="hljs-type">Employee</span> <span class="hljs-variable">employee</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Employee</span>();<br>    BeanUtils.copyProperties(employeeDTO, employee);<br>    <span class="hljs-comment">// 2.补全 Employee 数据</span><br>    <span class="hljs-comment">// 2.1.默认密码123456</span><br>    employee.setPassword(DigestUtils.md5DigestAsHex(DEFAULT_PASSWORD.getBytes()));<br>    <span class="hljs-comment">// 2.2.默认状态 开启(1)</span><br>    employee.setStatus(ENABLE);<br>    <span class="hljs-comment">// 2.3.默认时间now, 默认user - admin(id)</span><br>    employee.setCreateTime(LocalDateTime.now());<br>    employee.setUpdateTime(LocalDateTime.now());<br>    <span class="hljs-comment">/*employee.setCreateUser(1L);</span><br><span class="hljs-comment">    employee.setUpdateUser(1L);*/</span><br>    employee.setCreateUser(BaseContext.getCurrentId());<br>    employee.setUpdateUser(BaseContext.getCurrentId());<br>    <span class="hljs-comment">// 3.插入数据库数据</span><br>    employeeMapper.insert(employee);<br>&#125;<br></code></pre></td></tr></table></figure></blockquote><h2 id="退出登录"><a href="#退出登录" class="headerlink" title="退出登录"></a>退出登录</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 退出</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@PostMapping(&quot;/logout&quot;)</span><br><span class="hljs-meta">@ApiOperation(&quot;退出登录&quot;)</span><br><span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">logout</span><span class="hljs-params">()</span> &#123;<br>    log.info(<span class="hljs-string">&quot;退出登录&quot;</span>);<br>    BaseContext.removeCurrentId();<br>    <span class="hljs-keyword">return</span> Result.success();<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="员工分页查询"><a href="#员工分页查询" class="headerlink" title="员工分页查询"></a>员工分页查询</h2><p><strong>EmployeePageQueryDTO</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.sky.dto;<br><br><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-keyword">import</span> java.io.Serializable;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmployeePageQueryDTO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">//员工姓名</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-comment">//页码</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> page;<br><br>    <span class="hljs-comment">//每页显示记录数</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> pageSize;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>PageResult</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.sky.result;<br><br><span class="hljs-keyword">import</span> lombok.AllArgsConstructor;<br><span class="hljs-keyword">import</span> lombok.Data;<br><span class="hljs-keyword">import</span> lombok.NoArgsConstructor;<br><br><span class="hljs-keyword">import</span> java.io.Serializable;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 封装分页查询结果</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PageResult</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">long</span> total; <span class="hljs-comment">//总记录数</span><br><br>    <span class="hljs-keyword">private</span> List records; <span class="hljs-comment">//当前页数据集合</span><br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>controller层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 员工分页查询</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> employeePageQueryDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;员工分页查询&quot;)</span><br><span class="hljs-meta">@GetMapping(&quot;/page&quot;)</span><br><span class="hljs-keyword">public</span> Result&lt;PageResult&gt; <span class="hljs-title function_">page</span><span class="hljs-params">(EmployeePageQueryDTO employeePageQueryDTO)</span>&#123;<br>    <span class="hljs-type">PageResult</span> <span class="hljs-variable">pageResult</span> <span class="hljs-operator">=</span> employeeService.pageQuery(employeePageQueryDTO);<br>    <span class="hljs-keyword">return</span> Result.success(pageResult);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>service层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 员工分页查询</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> employeePageQueryDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br>PageResult <span class="hljs-title function_">pageQuery</span><span class="hljs-params">(EmployeePageQueryDTO employeePageQueryDTO)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 员工分页查询</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> employeePageQueryDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> PageResult <span class="hljs-title function_">pageQuery</span><span class="hljs-params">(EmployeePageQueryDTO employeePageQueryDTO)</span> &#123;<br>    <span class="hljs-comment">// 开始分页查询  xxx.(pageNum  pageSize)</span><br>    PageHelper.startPage(employeePageQueryDTO.getPage(), employeePageQueryDTO.getPageSize());<br>    <span class="hljs-comment">// mapper : select * from employee (where name = #&#123;name&#125;) 需要动态SQL</span><br>    Page&lt;Employee&gt; page = employeeMapper.pageQuery(employeePageQueryDTO);<br>    <span class="hljs-comment">// 获得 total(总条数) records(数据)</span><br>    <span class="hljs-type">long</span> <span class="hljs-variable">total</span> <span class="hljs-operator">=</span> page.getTotal();<br>    List&lt;Employee&gt; records = page.getResult();<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PageResult</span>(total, records);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mapper层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 员工分页查询</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> employeePageQueryDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br>Page&lt;Employee&gt; <span class="hljs-title function_">pageQuery</span><span class="hljs-params">(EmployeePageQueryDTO employeePageQueryDTO)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">mapper</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;com.sky.mapper.EmployeeMapper&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pageQuery&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;com.sky.entity.Employee&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;com.sky.dto.EmployeePageQueryDTO&quot;</span>&gt;</span><br>        select * from employee<br>        <span class="hljs-tag">&lt;<span class="hljs-name">where</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--判断要全面, 空字符串也不行--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;name != null and name != &#x27;&#x27;&quot;</span>&gt;</span><br>                name like concat(&#x27;%&#x27;, #&#123;name&#125;, &#x27;%&#x27;)<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">where</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>时间格式问题</strong></p><p><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20231206215622845.png" alt="image-20231206215622845"></p><ol><li><p>在对应属性加注解(麻烦)</p><p>Employee.java</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span><br><span class="hljs-keyword">private</span> LocalDateTime createTime;<br><br><span class="hljs-meta">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span><br><span class="hljs-keyword">private</span> LocalDateTime updateTime;<br></code></pre></td></tr></table></figure><ol start="2"><li>扩展消息转换器, 统一对日期类型进行格式处理</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 扩展Spring MVC框架的消息转换器</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> converters</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">extendMessageConverters</span><span class="hljs-params">(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters)</span> &#123;<br>    log.info(<span class="hljs-string">&quot;扩展消息转换器&quot;</span>);<br>    <span class="hljs-comment">// 1.创建消息转换器对象</span><br>    <span class="hljs-type">MappingJackson2HttpMessageConverter</span> <span class="hljs-variable">converter</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MappingJackson2HttpMessageConverter</span>();<br>    <span class="hljs-comment">// 2.为消息转换器对象设置一个对象转换器, 对象转换器可以将java对象序列化成json数据</span><br>    converter.setObjectMapper(<span class="hljs-keyword">new</span> <span class="hljs-title class_">JacksonObjectMapper</span>());<br>    <span class="hljs-comment">// 3.将自己的消息转换器加入容器</span><br>    converters.add(<span class="hljs-number">0</span>, converter);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>定义序列化器</strong></p><p>sky-common</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.sky.json;<br><br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.DeserializationFeature;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.<span class="hljs-keyword">module</span>.SimpleModule;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;<br><span class="hljs-keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalTimeSerializer;<br><br><span class="hljs-keyword">import</span> java.time.LocalDate;<br><span class="hljs-keyword">import</span> java.time.LocalDateTime;<br><span class="hljs-keyword">import</span> java.time.LocalTime;<br><span class="hljs-keyword">import</span> java.time.format.DateTimeFormatter;<br><br><span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 对象映射器:基于jackson将Java对象转为json，或者将json转为Java对象</span><br><span class="hljs-comment"> * 将JSON解析为Java对象的过程称为 [从JSON反序列化Java对象]</span><br><span class="hljs-comment"> * 从Java对象生成JSON的过程称为 [序列化Java对象到JSON]</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JacksonObjectMapper</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ObjectMapper</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">DEFAULT_DATE_FORMAT</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;yyyy-MM-dd&quot;</span>;<br>    <span class="hljs-comment">//public static final String DEFAULT_DATE_TIME_FORMAT = &quot;yyyy-MM-dd HH:mm:ss&quot;;</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">DEFAULT_DATE_TIME_FORMAT</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;yyyy-MM-dd HH:mm&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">DEFAULT_TIME_FORMAT</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;HH:mm:ss&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">JacksonObjectMapper</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">super</span>();<br>        <span class="hljs-comment">//收到未知属性时不报异常</span><br>        <span class="hljs-built_in">this</span>.configure(FAIL_ON_UNKNOWN_PROPERTIES, <span class="hljs-literal">false</span>);<br><br>        <span class="hljs-comment">//反序列化时，属性不存在的兼容处理</span><br>        <span class="hljs-built_in">this</span>.getDeserializationConfig().withoutFeatures(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);<br><br>        <span class="hljs-type">SimpleModule</span> <span class="hljs-variable">simpleModule</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleModule</span>()<br>                .addDeserializer(LocalDateTime.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LocalDateTimeDeserializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)))<br>                .addDeserializer(LocalDate.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LocalDateDeserializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)))<br>                .addDeserializer(LocalTime.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LocalTimeDeserializer</span>(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)))<br>                .addSerializer(LocalDateTime.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LocalDateTimeSerializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)))<br>                .addSerializer(LocalDate.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LocalDateSerializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)))<br>                .addSerializer(LocalTime.class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LocalTimeSerializer</span>(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)));<br><br>        <span class="hljs-comment">//注册功能模块 例如，可以添加自定义序列化器和反序列化器</span><br>        <span class="hljs-built_in">this</span>.registerModule(simpleModule);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="启用禁用员工"><a href="#启用禁用员工" class="headerlink" title="启用禁用员工"></a>启用禁用员工</h2><p><strong>controller层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 启用、禁用员工账号</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> status</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;启用、禁用员工账号&quot;)</span><br><span class="hljs-meta">@PostMapping(&quot;/status/&#123;status&#125;&quot;)</span><br><span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">startOrStop</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Integer status, Long id)</span>&#123;<br>    log.info(<span class="hljs-string">&quot;启用、禁用员工账号=&gt; status:&#123;&#125;, id:&#123;&#125;&quot;</span>, status, id);<br>    employeeService.startOrStop(status, id);<br>    <span class="hljs-keyword">return</span> Result.success();<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>service层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 启用、禁用员工账号</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> status</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">startOrStop</span><span class="hljs-params">(Integer status, Long id)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 启用、禁用员工账号</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> status</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">startOrStop</span><span class="hljs-params">(Integer status, Long id)</span> &#123;<br>    <span class="hljs-type">Employee</span> <span class="hljs-variable">employee</span> <span class="hljs-operator">=</span> Employee.builder().status(status).id(id).build();<br>    employeeMapper.update(employee);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mapper层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 编辑员工</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> employee</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">(Employee employee)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">update</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;update&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;com.sky.entity.Employee&quot;</span>&gt;</span><br>        update employee<br>            <span class="hljs-tag">&lt;<span class="hljs-name">set</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;username != null&quot;</span>&gt;</span>username=#&#123;username&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;password != null&quot;</span>&gt;</span>password=#&#123;password&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;name != null&quot;</span>&gt;</span>name=#&#123;name&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;phone != null&quot;</span>&gt;</span>phone=#&#123;phone&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;sex != null&quot;</span>&gt;</span>sex=#&#123;sex&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;idNumber != null&quot;</span>&gt;</span>id_Number=#&#123;idNumber&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;status != null&quot;</span>&gt;</span>status=#&#123;status&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;updateTime != null&quot;</span>&gt;</span>update_Time=#&#123;updateTime&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;updateUser != null&quot;</span>&gt;</span>update_User=#&#123;updateUser&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br>        where id=#&#123;id&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">update</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="编辑员工"><a href="#编辑员工" class="headerlink" title="编辑员工"></a>编辑员工</h2><p><strong>controller层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 编辑员工信息</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> employeeDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;编辑员工信息&quot;)</span><br><span class="hljs-meta">@PutMapping</span><br><span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">update</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> EmployeeDTO employeeDTO)</span>&#123;<br>    log.info(<span class="hljs-string">&quot;编辑员工信息:&#123;&#125;&quot;</span>, employeeDTO);<br>    employeeService.update(employeeDTO);<br>    <span class="hljs-keyword">return</span> Result.success();<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>service层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 编辑员工信息</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> employeeDTO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">(EmployeeDTO employeeDTO)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 编辑员工信息</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> employeeDTO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">(EmployeeDTO employeeDTO)</span> &#123;<br>    <span class="hljs-type">Employee</span> <span class="hljs-variable">employee</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Employee</span>();<br>    BeanUtils.copyProperties(employeeDTO, employee);<br>    employee.setUpdateUser(BaseContext.getCurrentId());<br>    employee.setUpdateTime(LocalDateTime.now());<br>    employeeMapper.update(employee);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mapper层</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 编辑员工</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> employee</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">(Employee employee)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">update</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;update&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;com.sky.entity.Employee&quot;</span>&gt;</span><br>    update employee<br>        <span class="hljs-tag">&lt;<span class="hljs-name">set</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;username != null&quot;</span>&gt;</span>username=#&#123;username&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;password != null&quot;</span>&gt;</span>password=#&#123;password&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;name != null&quot;</span>&gt;</span>name=#&#123;name&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;phone != null&quot;</span>&gt;</span>phone=#&#123;phone&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;sex != null&quot;</span>&gt;</span>sex=#&#123;sex&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;idNumber != null&quot;</span>&gt;</span>id_Number=#&#123;idNumber&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;status != null&quot;</span>&gt;</span>status=#&#123;status&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;updateTime != null&quot;</span>&gt;</span>update_Time=#&#123;updateTime&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;updateUser != null&quot;</span>&gt;</span>update_User=#&#123;updateUser&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br>    where id=#&#123;id&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">update</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="导入分类模块代码"><a href="#导入分类模块代码" class="headerlink" title="导入分类模块代码"></a>导入分类模块代码</h2><p><strong>业务规则</strong></p><ol><li>分类名称唯一</li><li>分类有两个分支:  菜品分类和套餐分类</li><li>新添加的分类默认为  禁用</li></ol><p><strong>接口设计</strong></p><ol><li>新增分类</li><li>分类分页查询</li><li>根据id删除分类</li><li>修改分类</li><li>启用禁用分类</li><li>根据类型查询分类</li></ol><p><strong>表设计</strong></p><table><thead><tr><th><strong>字段名</strong></th><th><strong>数据类型</strong></th><th><strong>说明</strong></th><th><strong>备注</strong></th></tr></thead><tbody><tr><td>id</td><td>bigint</td><td>主键</td><td>自增</td></tr><tr><td>name</td><td>varchar(32)</td><td>分类名称</td><td>唯一</td></tr><tr><td>type</td><td>int</td><td>分类类型</td><td>1菜品分类 2套餐分类</td></tr><tr><td>sort</td><td>int</td><td>排序字段</td><td>用于分类数据的排序</td></tr><tr><td>status</td><td>int</td><td>状态</td><td>1启用 0禁用</td></tr><tr><td>create_time</td><td>datetime</td><td>创建时间</td><td></td></tr><tr><td>update_time</td><td>datetime</td><td>最后修改时间</td><td></td></tr><tr><td>create_user</td><td>bigint</td><td>创建人id</td><td></td></tr><tr><td>update_user</td><td>bigint</td><td>最后修改人id</td><td></td></tr></tbody></table><p><strong>代码导入</strong></p><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/image-20221112164259732.png" alt="image-20221112164259732"/><h1 id="day03"><a href="#day03" class="headerlink" title="day03"></a>day03</h1><h2 id="公共字段填充"><a href="#公共字段填充" class="headerlink" title="公共字段填充"></a>公共字段填充</h2><p>在service逻辑中需要手动设置时间和用户id, 这些逻辑是固定的: </p><ol><li><p>在新增数据时, 将createTime、updateTime 设置为当前时间, createUser、updateUser设置为当前登录用户ID。</p></li><li><p>在更新数据时, 将updateTime 设置为当前时间, updateUser设置为当前登录用户ID。</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">employee.setCreateTime(LocalDateTime.now());<br>employee.setUpdateTime(LocalDateTime.now());<br>employee.setCreateUser(BaseContext.getCurrentId());<br>employee.setUpdateUser(BaseContext.getCurrentId());<br></code></pre></td></tr></table></figure><blockquote><p>用AOP切面编程,完成公共字段的自动填充</p></blockquote><p><strong>步骤</strong></p><ol><li><p>自定义<code>注解</code>, 标识需要aop的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 自定义注解, 用于标识某个方法需要进行字段`自动填充`处理</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Target(ElementType.METHOD)</span> <span class="hljs-comment">// 作用范围:方法</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span> <span class="hljs-comment">// 信息保留在.class文件</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> AutoFill &#123;<br>    <span class="hljs-comment">//数据库操作类型enum : INSERT UPDATE</span><br>    OperationType <span class="hljs-title function_">value</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 数据库操作类型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">OperationType</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新操作</span><br><span class="hljs-comment">     */</span><br>    UPDATE,<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 插入操作</span><br><span class="hljs-comment">     */</span><br>    INSERT<br><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>自定义<code>切面</code>, 统一拦截标识的<code>方法</code>, 通过<code>反射</code>填充公共字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 自定义切面，实现公共字段自动填充处理逻辑</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 付广建 2023/12/7 14:53</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AutoFillAspect</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 切入点</span><br><span class="hljs-comment">     * 在mapper包且有<span class="hljs-doctag">@AutoFill</span>条件切入</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Pointcut(&quot;execution(* com.sky.mapper.*.*(..)) &amp;&amp; @annotation(com.sky.annotation.AutoFill)&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">autoFillPointCut</span><span class="hljs-params">()</span>&#123;&#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 前置通知,在通知中进行公共字段的赋值</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> joinPoint</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Before(&quot;autoFillPointCut()&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">autoFill</span><span class="hljs-params">(JoinPoint joinPoint)</span>&#123;<br>        log.info(<span class="hljs-string">&quot;开始进行公共字段自动填充...&quot;</span>);<br>        <span class="hljs-comment">// 获取被拦截方法的数据库操作类型</span><br>        <span class="hljs-type">MethodSignature</span> <span class="hljs-variable">signature</span> <span class="hljs-operator">=</span> (MethodSignature) joinPoint.getSignature();<span class="hljs-comment">// 方法签名对象</span><br>        <span class="hljs-type">AutoFill</span> <span class="hljs-variable">autoFill</span> <span class="hljs-operator">=</span> signature.getMethod().getAnnotation(AutoFill.class);<span class="hljs-comment">// 方法注解对象</span><br>        <span class="hljs-type">OperationType</span> <span class="hljs-variable">operationType</span> <span class="hljs-operator">=</span> autoFill.value();<span class="hljs-comment">// 获得数据库操作类型</span><br>        <span class="hljs-comment">// 获取当前被拦截的方法的参数 -- 实体对象</span><br>        Object[] args = joinPoint.getArgs();<br>        <span class="hljs-keyword">if</span> (args==<span class="hljs-literal">null</span> || args.length==<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-comment">// 获得sql方法的第一个参数, 这里只有一个参数: 实体类</span><br>        <span class="hljs-type">Object</span> <span class="hljs-variable">entity</span> <span class="hljs-operator">=</span> args[<span class="hljs-number">0</span>];<br>        <span class="hljs-comment">// 准备赋值数据</span><br>        <span class="hljs-type">LocalDateTime</span> <span class="hljs-variable">now</span> <span class="hljs-operator">=</span> LocalDateTime.now();<br>        <span class="hljs-type">Long</span> <span class="hljs-variable">empId</span> <span class="hljs-operator">=</span> BaseContext.getCurrentId();<br>        <span class="hljs-comment">// 根据不同的操作类型, 为对应属性通过反射来赋值</span><br>        <span class="hljs-keyword">if</span> (operationType == INSERT)&#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-comment">// 4个字段赋值</span><br>                <span class="hljs-type">Method</span> <span class="hljs-variable">setCreateTime</span> <span class="hljs-operator">=</span> entity.getClass().getDeclaredMethod(SET_CREATE_TIME, LocalDateTime.class);<br>                <span class="hljs-type">Method</span> <span class="hljs-variable">setUpdateTime</span> <span class="hljs-operator">=</span> entity.getClass().getDeclaredMethod(SET_UPDATE_TIME, LocalDateTime.class);<br>                <span class="hljs-type">Method</span> <span class="hljs-variable">setCreateUser</span> <span class="hljs-operator">=</span> entity.getClass().getDeclaredMethod(SET_CREATE_USER, Long.class);<br>                <span class="hljs-type">Method</span> <span class="hljs-variable">setUpdateUser</span> <span class="hljs-operator">=</span> entity.getClass().getDeclaredMethod(SET_UPDATE_USER, Long.class);<br>                <span class="hljs-comment">// 通过反射为对象属性赋值</span><br>                setCreateTime.invoke(entity, now);<br>                setUpdateTime.invoke(entity, now);<br>                setCreateUser.invoke(entity, empId);<br>                setUpdateUser.invoke(entity, empId);<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (operationType == OperationType.UPDATE) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-comment">// 2个字段赋值</span><br>                <span class="hljs-type">Method</span> <span class="hljs-variable">setUpdateTime</span> <span class="hljs-operator">=</span> entity.getClass().getDeclaredMethod(SET_UPDATE_TIME, LocalDateTime.class);<br>                <span class="hljs-type">Method</span> <span class="hljs-variable">setUpdateUser</span> <span class="hljs-operator">=</span> entity.getClass().getDeclaredMethod(SET_UPDATE_USER, Long.class);<br>                <span class="hljs-comment">// 通过反射为对象属性赋值</span><br>                setUpdateTime.invoke(entity, now);<br>                setUpdateUser.invoke(entity, empId);<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>在mapper中对应方法加入<code>注解</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 新增员工</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> employee</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@AutoFill(INSERT)</span><br><span class="hljs-meta">@Insert(&quot;insert into employee(username, name, phone, sex, id_number, password, status, create_time, update_time, create_user, update_user) values (#&#123;username&#125;, #&#123;name&#125;, #&#123;phone&#125;, #&#123;sex&#125;, #&#123;idNumber&#125;, #&#123;password&#125;, #&#123;status&#125;, #&#123;createTime&#125;, #&#123;updateTime&#125;, #&#123;createUser&#125;, #&#123;updateUser&#125;)&quot;)</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(Employee employee)</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 编辑员工</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> employee</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@AutoFill(UPDATE)</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">(Employee employee)</span>;<br></code></pre></td></tr></table></figure></li></ol><p>技术: 枚举, 注解, aop, 反射</p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><blockquote><p>新增菜品需要上传菜品对应的图片, 需要实现通用文件上传接口</p><p>使用OSS服务进行文件存储</p></blockquote><ol><li>定义OSS配置</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">alioss:</span><br>  <span class="hljs-attr">endpoint:</span> <span class="hljs-string">oss-cn-beijing.aliyuncs.com</span><br>  <span class="hljs-attr">access-key-id:</span> <span class="hljs-string">LTAI5tS29pxXXphPTxRg3EDo</span><br>  <span class="hljs-attr">access-key-secret:</span> <span class="hljs-string">J58e7LZSAEb63cajvwRlQmjJYEJNiH</span><br>  <span class="hljs-attr">bucket-name:</span> <span class="hljs-string">fgj2</span><br></code></pre></td></tr></table></figure><ol start="2"><li>接收oss参数</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@ConfigurationProperties(&quot;sky.alioss&quot;)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AliOssProperties</span> &#123;<br>    <span class="hljs-keyword">private</span> String endpoint;<br>    <span class="hljs-keyword">private</span> String accessKeyId;<br>    <span class="hljs-keyword">private</span> String accessKeySecret;<br>    <span class="hljs-keyword">private</span> String bucketName;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="3"><li>文件上传工具类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OssConfiguration</span> &#123;<br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-meta">@ConditionalOnMissingBean</span> <span class="hljs-comment">// 这个bean初始化依赖于另一个bean(AliOssProperties)</span><br>    <span class="hljs-keyword">public</span> AliOssUtil <span class="hljs-title function_">aliOssUtil</span><span class="hljs-params">(AliOssProperties aliOssProperties)</span>&#123;<br>        log.info(<span class="hljs-string">&quot;开始创建阿里云文件上传工具类对象&#123;&#125;&quot;</span>, aliOssProperties);<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AliOssUtil</span>(aliOssProperties.getEndpoint(),<br>                aliOssProperties.getAccessKeyId(),<br>                aliOssProperties.getAccessKeySecret(),<br>                aliOssProperties.getBucketName());<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AliOssUtil</span> &#123;<br><br>    <span class="hljs-keyword">private</span> String endpoint;<br>    <span class="hljs-keyword">private</span> String accessKeyId;<br>    <span class="hljs-keyword">private</span> String accessKeySecret;<br>    <span class="hljs-keyword">private</span> String bucketName;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 文件上传</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> bytes</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> objectName</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">upload</span><span class="hljs-params">(<span class="hljs-type">byte</span>[] bytes, String objectName)</span> &#123;<br><br>        <span class="hljs-comment">// 创建OSSClient实例。</span><br>        <span class="hljs-type">OSS</span> <span class="hljs-variable">ossClient</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">OSSClientBuilder</span>().build(endpoint, accessKeyId, accessKeySecret);<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 创建PutObject请求。</span><br>            ossClient.putObject(bucketName, objectName, <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(bytes));<br>        &#125; <span class="hljs-keyword">catch</span> (OSSException oe) &#123;<br>            System.out.println(<span class="hljs-string">&quot;Caught an OSSException, which means your request made it to OSS, &quot;</span><br>                    + <span class="hljs-string">&quot;but was rejected with an error response for some reason.&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;Error Message:&quot;</span> + oe.getErrorMessage());<br>            System.out.println(<span class="hljs-string">&quot;Error Code:&quot;</span> + oe.getErrorCode());<br>            System.out.println(<span class="hljs-string">&quot;Request ID:&quot;</span> + oe.getRequestId());<br>            System.out.println(<span class="hljs-string">&quot;Host ID:&quot;</span> + oe.getHostId());<br>        &#125; <span class="hljs-keyword">catch</span> (ClientException ce) &#123;<br>            System.out.println(<span class="hljs-string">&quot;Caught an ClientException, which means the client encountered &quot;</span><br>                    + <span class="hljs-string">&quot;a serious internal problem while trying to communicate with OSS, &quot;</span><br>                    + <span class="hljs-string">&quot;such as not being able to access the network.&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;Error Message:&quot;</span> + ce.getMessage());<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">if</span> (ossClient != <span class="hljs-literal">null</span>) &#123;<br>                ossClient.shutdown();<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment">//文件访问路径规则 https://BucketName.Endpoint/ObjectName</span><br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">stringBuilder</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>(<span class="hljs-string">&quot;https://&quot;</span>);<br>        stringBuilder<br>                .append(bucketName)<br>                .append(<span class="hljs-string">&quot;.&quot;</span>)<br>                .append(endpoint)<br>                .append(<span class="hljs-string">&quot;/&quot;</span>)<br>                .append(objectName);<br><br>        log.info(<span class="hljs-string">&quot;文件上传到:&#123;&#125;&quot;</span>, stringBuilder.toString());<br><br>        <span class="hljs-keyword">return</span> stringBuilder.toString();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>接口定义</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/admin/common&quot;)</span><br><span class="hljs-meta">@Api(&quot;通用接口&quot;)</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommonController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> AliOssUtil aliOssUtil;<br><br>    <span class="hljs-meta">@PostMapping(&quot;/upload&quot;)</span><br>    <span class="hljs-meta">@ApiOperation(&quot;文件上传&quot;)</span><br>    <span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">upload</span><span class="hljs-params">(MultipartFile file)</span>&#123;<br>        log.info(<span class="hljs-string">&quot;文件上传:&#123;&#125;&quot;</span>, file);<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 原始文件名</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">originalFilename</span> <span class="hljs-operator">=</span> file.getOriginalFilename();<br>            <span class="hljs-comment">// 截取后缀</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">extension</span> <span class="hljs-operator">=</span> originalFilename.substring(originalFilename.lastIndexOf(<span class="hljs-string">&quot;.&quot;</span>));<br>            <span class="hljs-comment">// 构造新文件名字</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">objectName</span> <span class="hljs-operator">=</span> UUID.randomUUID().toString() + extension;<br>            <span class="hljs-comment">// 文件请求路径</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">filePath</span> <span class="hljs-operator">=</span> aliOssUtil.upload(file.getBytes(), objectName);<br>            <span class="hljs-keyword">return</span> Result.success(filePath);<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            log.error(<span class="hljs-string">&quot;文件上传失败:&#123;&#125;&quot;</span>, e);<br>        &#125;<br>        <span class="hljs-keyword">return</span> Result.error(UPLOAD_FAILED);<br>    &#125;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="新增菜品"><a href="#新增菜品" class="headerlink" title="新增菜品"></a>新增菜品</h2><p>新增菜品, 添加菜品和口味, 需要操作两张表</p><table><thead><tr><th>表名</th><th>说明</th></tr></thead><tbody><tr><td>dish</td><td>菜品表</td></tr><tr><td>dish_flavor</td><td>菜品口味表</td></tr></tbody></table><p><strong>controller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 付广建 2023/12/7 15:26</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/admin/dish&quot;)</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@Api(tags = &quot;菜品相关接口&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DishController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> DishService dishService;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 新增菜品</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> dishDTO</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PostMapping</span><br>    <span class="hljs-meta">@ApiOperation(&quot;新增菜品&quot;)</span><br>    <span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">save</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> DishDTO dishDTO)</span> &#123;<br>        log.info(<span class="hljs-string">&quot;新增菜品:&#123;&#125;&quot;</span>, dishDTO);<br>        dishService.saveWithFlavor(dishDTO);<br>        <span class="hljs-keyword">return</span> Result.success();<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>service</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 付广建 2023/12/7 16:21</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">DishService</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 新增菜品</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> dishDTO</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">saveWithFlavor</span><span class="hljs-params">(DishDTO dishDTO)</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DishServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">DishService</span> &#123;<br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> DishMapper dishMapper;<br><br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> DishFlavorMapper dishFlavorMapper;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 新增菜品和对应的口味</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> dishDTO</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Transactional</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">saveWithFlavor</span><span class="hljs-params">(DishDTO dishDTO)</span> &#123;<br>        <span class="hljs-comment">// 1.新增菜品</span><br>        <span class="hljs-type">Dish</span> <span class="hljs-variable">dish</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Dish</span>();<br>        BeanUtils.copyProperties(dishDTO, dish);<br>        dishMapper.insert(dish);<br><br>        <span class="hljs-comment">// dishId 为null, 只能到数据库查了</span><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">dishId</span> <span class="hljs-operator">=</span> dishMapper.getDishId(dish.getImage());<br><br>        <span class="hljs-comment">// 2.新增口味</span><br>        List&lt;DishFlavor&gt; flavors = dishDTO.getFlavors();<br>        <span class="hljs-keyword">if</span> (flavors!=<span class="hljs-literal">null</span> &amp;&amp; flavors.size()&gt;<span class="hljs-number">0</span>) &#123;<br>            flavors.forEach(flavor -&gt; flavor.setDishId(dishId));<br>        &#125;<br>        dishFlavorMapper.insertBatch(flavors);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mapper</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.sky.mapper;<br><br><span class="hljs-keyword">import</span> com.sky.annotation.AutoFill;<br><span class="hljs-keyword">import</span> com.sky.entity.Dish;<br><span class="hljs-keyword">import</span> com.sky.enumeration.OperationType;<br><span class="hljs-keyword">import</span> org.apache.ibatis.annotations.Insert;<br><span class="hljs-keyword">import</span> org.apache.ibatis.annotations.Mapper;<br><span class="hljs-keyword">import</span> org.apache.ibatis.annotations.Select;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><br><span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> com.sky.enumeration.OperationType.INSERT;<br><br><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">DishMapper</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据分类id查询菜品数量</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> categoryId</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Select(&quot;select count(id) from dish where category_id = #&#123;categoryId&#125;&quot;)</span><br>    Integer <span class="hljs-title function_">countByCategoryId</span><span class="hljs-params">(Long categoryId)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 新增菜品</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> dish</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@AutoFill(INSERT)</span><br>    <span class="hljs-meta">@Insert(&quot;insert into dish(name, category_id, price, image, description, create_time, update_time, create_user, update_user, status) values  (#&#123;name&#125;, #&#123;categoryId&#125;, #&#123;price&#125;, #&#123;image&#125;, #&#123;description&#125;, #&#123;createTime&#125;, #&#123;updateTime&#125;, #&#123;createUser&#125;, #&#123;updateUser&#125;, #&#123;status&#125;)&quot;)</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(Dish dish)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查找菜品Id</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> image</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Select(&quot;select id from dish where image=#&#123;image&#125;&quot;)</span><br>    Long <span class="hljs-title function_">getDishId</span><span class="hljs-params">(String image)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.sky.mapper;<br><br><span class="hljs-keyword">import</span> com.sky.entity.DishFlavor;<br><span class="hljs-keyword">import</span> org.apache.ibatis.annotations.Mapper;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 付广建 2023/12/7 16:24</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">DishFlavorMapper</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 批量插入口味数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> flavors</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">insertBatch</span><span class="hljs-params">(List&lt;DishFlavor&gt; flavors)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="菜品分页查询"><a href="#菜品分页查询" class="headerlink" title="菜品分页查询"></a>菜品分页查询</h2><p><strong>DTO</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.sky.dto;<br><br><span class="hljs-keyword">import</span> io.swagger.annotations.Api;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiModel;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiModelProperty;<br><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-keyword">import</span> java.io.Serializable;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@ApiModel(&quot;菜品分页时传递的数据模型&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DishPageQueryDTO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-meta">@ApiModelProperty(&quot;页码&quot;)</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> page;<br><br>    <span class="hljs-meta">@ApiModelProperty(&quot;每页条数&quot;)</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> pageSize;<br><br>    <span class="hljs-meta">@ApiModelProperty(&quot;菜品名称&quot;)</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-comment">//分类id</span><br>    <span class="hljs-meta">@ApiModelProperty(&quot;分类id&quot;)</span><br>    <span class="hljs-keyword">private</span> Integer categoryId;<br><br>    <span class="hljs-comment">//状态 0表示禁用 1表示启用</span><br>    <span class="hljs-meta">@ApiModelProperty(&quot;状态 0表示禁用 1表示启用&quot;)</span><br>    <span class="hljs-keyword">private</span> Integer status;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>VO</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.sky.vo;<br><br><span class="hljs-keyword">import</span> com.sky.entity.DishFlavor;<br><span class="hljs-keyword">import</span> lombok.AllArgsConstructor;<br><span class="hljs-keyword">import</span> lombok.Builder;<br><span class="hljs-keyword">import</span> lombok.Data;<br><span class="hljs-keyword">import</span> lombok.NoArgsConstructor;<br><span class="hljs-keyword">import</span> java.io.Serializable;<br><span class="hljs-keyword">import</span> java.math.BigDecimal;<br><span class="hljs-keyword">import</span> java.time.LocalDateTime;<br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Builder</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DishVO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-keyword">private</span> Long id;<br>    <span class="hljs-comment">//菜品名称</span><br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-comment">//菜品分类id</span><br>    <span class="hljs-keyword">private</span> Long categoryId;<br>    <span class="hljs-comment">//菜品价格</span><br>    <span class="hljs-keyword">private</span> BigDecimal price;<br>    <span class="hljs-comment">//图片</span><br>    <span class="hljs-keyword">private</span> String image;<br>    <span class="hljs-comment">//描述信息</span><br>    <span class="hljs-keyword">private</span> String description;<br>    <span class="hljs-comment">//0 停售 1 起售</span><br>    <span class="hljs-keyword">private</span> Integer status;<br>    <span class="hljs-comment">//更新时间</span><br>    <span class="hljs-keyword">private</span> LocalDateTime updateTime;<br>    <span class="hljs-comment">//分类名称</span><br>    <span class="hljs-keyword">private</span> String categoryName;<br>    <span class="hljs-comment">//菜品关联的口味</span><br>    <span class="hljs-keyword">private</span> List&lt;DishFlavor&gt; flavors = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br><br>    <span class="hljs-comment">//private Integer copies;</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>Controller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 菜品分页查询</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> dishPageQueryDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@GetMapping(&quot;/page&quot;)</span><br><span class="hljs-meta">@ApiOperation(&quot;菜品分页查询&quot;)</span><br><span class="hljs-keyword">public</span> Result&lt;PageResult&gt; <span class="hljs-title function_">page</span><span class="hljs-params">(DishPageQueryDTO dishPageQueryDTO)</span> &#123;<br>    log.info(<span class="hljs-string">&quot;菜品分页查询:&#123;&#125;&quot;</span>, dishPageQueryDTO);<br>    <span class="hljs-type">PageResult</span> <span class="hljs-variable">pageResult</span> <span class="hljs-operator">=</span> dishService.pageQuery(dishPageQueryDTO);<span class="hljs-comment">//后绪步骤定义</span><br>    <span class="hljs-keyword">return</span> Result.success(pageResult);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>Service</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 菜品分页查询</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> dishPageQueryDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br>PageResult <span class="hljs-title function_">pageQuery</span><span class="hljs-params">(DishPageQueryDTO dishPageQueryDTO)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 菜品分页查询</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> dishPageQueryDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> PageResult <span class="hljs-title function_">pageQuery</span><span class="hljs-params">(DishPageQueryDTO dishPageQueryDTO)</span> &#123;<br>    PageHelper.startPage(dishPageQueryDTO.getPage(), dishPageQueryDTO.getPageSize());<br>    Page&lt;DishVO&gt; page = dishMapper.pageQuery(dishPageQueryDTO);<span class="hljs-comment">//后绪步骤实现</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PageResult</span>(page.getTotal(), page.getResult());<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mapper</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 菜品分页查询</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> dishPageQueryDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br>Page&lt;DishVO&gt; <span class="hljs-title function_">pageQuery</span><span class="hljs-params">(DishPageQueryDTO dishPageQueryDTO)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pageQuery&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;com.sky.vo.DishVO&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;com.sky.dto.DishPageQueryDTO&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--这里 as categoryName 传给 DishVO 使用--&gt;</span><br>    select d.*, c.`name` as categoryName  from dish d left join category c ON d.category_id=c.id<br>        <span class="hljs-tag">&lt;<span class="hljs-name">where</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;name!=null&quot;</span>&gt;</span> and c.`name` like concat(&#x27;%&#x27;, #&#123;name&#125;, &#x27;%&#x27;) <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;categoryId!=null&quot;</span>&gt;</span> and d.category_Id=#&#123;categoryId&#125; <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;status!=null&quot;</span>&gt;</span> and d.status=#&#123;status&#125; <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">where</span>&gt;</span><br>    order by d.create_time desc<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="删除菜品"><a href="#删除菜品" class="headerlink" title="删除菜品"></a>删除菜品</h2><p><strong>contorller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 批量删除菜品</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> ids</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;批量删除菜品&quot;)</span><br><span class="hljs-meta">@DeleteMapping</span><br><span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">delete</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam</span> List&lt;Long&gt; ids)</span> &#123;<br>    log.info(<span class="hljs-string">&quot;批量删除菜品:&#123;&#125;&quot;</span>, ids);<br>    dishService.deleteBatch(ids);<br>    <span class="hljs-keyword">return</span> Result.success();<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>service</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 批量删除菜品</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> ids</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">deleteBatch</span><span class="hljs-params">(List&lt;Long&gt; ids)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 批量删除菜品</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> ids</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">deleteBatch</span><span class="hljs-params">(List&lt;Long&gt; ids)</span> &#123;<br>    <span class="hljs-comment">// 如果正在启售, 不能删除</span><br>    ids.forEach(id-&gt;&#123;<br>        <span class="hljs-type">Dish</span> <span class="hljs-variable">dish</span> <span class="hljs-operator">=</span> dishMapper.getById(id);<br>        <span class="hljs-keyword">if</span> (dish.getStatus().equals(ENABLE))&#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DeletionNotAllowedException</span>(DISH_ON_SALE);<br>        &#125;<br>    &#125;);<br><br>    <span class="hljs-comment">// 菜品被套餐关联,不能删除</span><br>    List&lt;Long&gt; setmealIds = setmealDishMapper.getSetmealIdsByDishIds(ids);<br>    <span class="hljs-keyword">if</span> (setmealIds!=<span class="hljs-literal">null</span> &amp;&amp; setmealIds.size()&gt;<span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DeletionNotAllowedException</span>(DISH_BE_RELATED_BY_SETMEAL);<br>    &#125;<br><br>    ids.forEach(id-&gt;&#123;<br>        <span class="hljs-comment">// 可以删除, 删除菜品</span><br>        dishMapper.deleteById(id);<br>        <span class="hljs-comment">// 删除菜品口味关系</span><br>        dishFlavorMapper.deleteByDishId(id);<br>    &#125;);<br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据id删除菜品</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Delete(&quot;delete from dish where id=#&#123;id&#125;&quot;)</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">deleteById</span><span class="hljs-params">(Long id)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据菜品id删除数据</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Delete(&quot;delete from dish_flavor where dish_id=#&#123;id&#125;&quot;)</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">deleteByDishId</span><span class="hljs-params">(Long id)</span>;<br></code></pre></td></tr></table></figure><h2 id="根据id查询菜品"><a href="#根据id查询菜品" class="headerlink" title="根据id查询菜品"></a>根据id查询菜品</h2><p><strong>controller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据id查询菜品</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;根据id查询菜品&quot;)</span><br><span class="hljs-meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span><br><span class="hljs-keyword">public</span> Result&lt;DishVO&gt; <span class="hljs-title function_">getById</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Long id)</span>&#123;<br>    log.info(<span class="hljs-string">&quot;根据id查询菜品:&#123;&#125;&quot;</span>, id);<br>    <span class="hljs-type">DishVO</span> <span class="hljs-variable">dishVO</span> <span class="hljs-operator">=</span> dishService.getById(id);<br>    <span class="hljs-keyword">return</span> Result.success(dishVO);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>service</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据id查询菜品</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br>DishVO <span class="hljs-title function_">getById</span><span class="hljs-params">(Long id)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据菜品id回显菜品和菜品口味关系</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> DishVO <span class="hljs-title function_">getById</span><span class="hljs-params">(Long id)</span> &#123;<br>    <span class="hljs-comment">// 查菜品</span><br>    <span class="hljs-type">Dish</span> <span class="hljs-variable">dish</span> <span class="hljs-operator">=</span> dishMapper.getById(id);<br>    <span class="hljs-comment">// 查口味关系</span><br>    List&lt;DishFlavor&gt; dishFlavors = dishFlavorMapper.getByDishId(id);<br>    <span class="hljs-comment">// 封装返回</span><br>    <span class="hljs-type">DishVO</span> <span class="hljs-variable">dishVO</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DishVO</span>();<br>    BeanUtils.copyProperties(dish, dishVO);<br>    dishVO.setFlavors(dishFlavors);<br><br>    <span class="hljs-keyword">return</span> dishVO;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mapper</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据id获取菜品</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Select(&quot;select * from dish where id=#&#123;id&#125;&quot;)</span><br>Dish <span class="hljs-title function_">getById</span><span class="hljs-params">(Long id)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据菜品id查询口味</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> dishId</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Select(&quot;select * from dish_flavor where dish_id=#&#123;dishId&#125;&quot;)</span><br>List&lt;DishFlavor&gt;  <span class="hljs-title function_">getByDishId</span><span class="hljs-params">(Long dishId)</span>;<br></code></pre></td></tr></table></figure><h2 id="修改菜品"><a href="#修改菜品" class="headerlink" title="修改菜品"></a>修改菜品</h2><p><strong>controller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 修改菜品</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> dishDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;修改菜品&quot;)</span><br><span class="hljs-meta">@PutMapping</span><br><span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">update</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> DishDTO dishDTO)</span>&#123;<br>    log.info(<span class="hljs-string">&quot;修改菜品:&#123;&#125;&quot;</span>, dishDTO);<br>    dishService.update(dishDTO);<br>    <span class="hljs-keyword">return</span> Result.success();<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>service</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 修改菜品</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> dishDTO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">(DishDTO dishDTO)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 修改菜品</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> dishDTO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">(DishDTO dishDTO)</span> &#123;<br>    <span class="hljs-type">Dish</span> <span class="hljs-variable">dish</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Dish</span>();<br>    BeanUtils.copyProperties(dishDTO, dish);<br><br>    <span class="hljs-comment">// 修改菜品 不能先删后增,因为id规则主键自增的</span><br>    dishMapper.update(dish);<br><br>    <span class="hljs-comment">// 修改菜品口味关系 先删后增</span><br>    dishFlavorMapper.deleteByDishId(dishDTO.getId());<br>    List&lt;DishFlavor&gt; flavors = dishDTO.getFlavors();<br>    flavors.forEach(flavor-&gt;flavor.setDishId(dishDTO.getId()));<br>    dishFlavorMapper.insertBatch(flavors);<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mapper</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 修改菜品</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> dish</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@AutoFill(UPDATE)</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">(Dish dish)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">update</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;update&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;com.sky.entity.Dish&quot;</span>&gt;</span><br>    update dish<br>        <span class="hljs-tag">&lt;<span class="hljs-name">set</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;name!=null&quot;</span>&gt;</span>name=#&#123;name&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;categoryId!=null&quot;</span>&gt;</span>category_id=#&#123;categoryId&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;price!=null&quot;</span>&gt;</span>price=#&#123;price&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;image!=null&quot;</span>&gt;</span>image=#&#123;image&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;description!=null&quot;</span>&gt;</span>description=#&#123;description&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;createTime!=null&quot;</span>&gt;</span>carate_time=#&#123;carateTime&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;createUser!=null&quot;</span>&gt;</span>carate_user=#&#123;carateUser&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;updateTime!=null&quot;</span>&gt;</span>update_time=#&#123;updateTime&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;updateUser!=null&quot;</span>&gt;</span>update_user=#&#123;updateUser&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br>    where id=#&#123;id&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">update</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 批量插入口味数据</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> flavors</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">insertBatch</span><span class="hljs-params">(List&lt;DishFlavor&gt; flavors)</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据菜品id删除数据</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Delete(&quot;delete from dish_flavor where dish_id=#&#123;id&#125;&quot;)</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">deleteByDishId</span><span class="hljs-params">(Long id)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">insert</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;insertBatch&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;java.util.List&quot;</span>&gt;</span><br>    insert into dish_flavor(dish_id, name, value) values<br>        <span class="hljs-tag">&lt;<span class="hljs-name">foreach</span> <span class="hljs-attr">collection</span>=<span class="hljs-string">&quot;flavors&quot;</span> <span class="hljs-attr">item</span>=<span class="hljs-string">&quot;flavor&quot;</span> <span class="hljs-attr">separator</span>=<span class="hljs-string">&quot;,&quot;</span>&gt;</span><br>            (#&#123;flavor.dishId&#125;, #&#123;flavor.name&#125;, #&#123;flavor.value&#125;)<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">foreach</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">insert</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="菜品起售停售"><a href="#菜品起售停售" class="headerlink" title="菜品起售停售"></a>菜品起售停售</h2><p><strong>controller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 菜品起售停售</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> status</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;菜品起售停售&quot;)</span><br><span class="hljs-meta">@PostMapping(&quot;/status/&#123;status&#125;&quot;)</span><br><span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">startOrStop</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Integer status, Long id)</span>&#123;<br>    dishService.startOrStop(status, id);<br>    <span class="hljs-keyword">return</span> Result.success();<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>service</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 菜品起售停售</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> status</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">startOrStop</span><span class="hljs-params">(Integer status, Long id)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 菜品起售停售</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> status</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">startOrStop</span><span class="hljs-params">(Integer status, Long id)</span> &#123;<br>    <span class="hljs-type">Dish</span> <span class="hljs-variable">dish</span> <span class="hljs-operator">=</span> Dish.builder().status(status).id(id).build();<br>    dishMapper.update(dish);<br><br>    <span class="hljs-comment">// 如果是停售, 要把套餐也停售</span><br>    <span class="hljs-keyword">if</span> (status.equals(DISABLE))&#123;<br>        List&lt;Long&gt; dishIds = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        dishIds.add(id);<br>        List&lt;Long&gt; setmealIds = setmealDishMapper.getSetmealIdsByDishIds(dishIds);<br>        setmealIds.forEach(setmealId-&gt;&#123;<br>            <span class="hljs-type">Setmeal</span> <span class="hljs-variable">setmeal</span> <span class="hljs-operator">=</span> Setmeal.builder().status(status).id(setmealId).build();<br>            setmealMapper.update(setmeal);<br>        &#125;);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mapper</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 修改菜品</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> dish</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@AutoFill(UPDATE)</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">(Dish dish)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">update</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;update&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;com.sky.entity.Dish&quot;</span>&gt;</span><br>    update dish<br>        <span class="hljs-tag">&lt;<span class="hljs-name">set</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;name!=null&quot;</span>&gt;</span>name=#&#123;name&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;categoryId!=null&quot;</span>&gt;</span>category_id=#&#123;categoryId&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;price!=null&quot;</span>&gt;</span>price=#&#123;price&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;image!=null&quot;</span>&gt;</span>image=#&#123;image&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;description!=null&quot;</span>&gt;</span>description=#&#123;description&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;createTime!=null&quot;</span>&gt;</span>carate_time=#&#123;carateTime&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;createUser!=null&quot;</span>&gt;</span>carate_user=#&#123;carateUser&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;updateTime!=null&quot;</span>&gt;</span>update_time=#&#123;updateTime&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;updateUser!=null&quot;</span>&gt;</span>update_user=#&#123;updateUser&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;status!=null&quot;</span>&gt;</span>status=#&#123;status&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br>    where id=#&#123;id&#125;<br>&lt;/update<br></code></pre></td></tr></table></figure><h1 id="day04"><a href="#day04" class="headerlink" title="day04"></a>day04</h1><h2 id="新增套餐"><a href="#新增套餐" class="headerlink" title="新增套餐"></a>新增套餐</h2><p><strong>controller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 新增套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> setmealDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;新增套餐&quot;)</span><br><span class="hljs-meta">@PostMapping</span><br><span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">save</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SetmealDTO setmealDTO)</span>&#123;<br>    log.info(<span class="hljs-string">&quot;新增套餐:&#123;&#125;&quot;</span>, setmealDTO);<br>    setmealService.save(setmealDTO);<br>    <span class="hljs-keyword">return</span> Result.success();<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>service</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 新增套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> setmealDTO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">save</span><span class="hljs-params">(SetmealDTO setmealDTO)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 新增套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> setmealDTO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">save</span><span class="hljs-params">(SetmealDTO setmealDTO)</span> &#123;<br>    <span class="hljs-comment">// 新增套餐</span><br>    <span class="hljs-type">Setmeal</span> <span class="hljs-variable">setmeal</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Setmeal</span>();<br>    BeanUtils.copyProperties(setmealDTO, setmeal);<br>    setmealMapper.insert(setmeal);<br>    <span class="hljs-comment">// 查到套餐ID</span><br>    <span class="hljs-type">Long</span> <span class="hljs-variable">setmealId</span> <span class="hljs-operator">=</span> setmealMapper.getSetmealIdByImage(setmeal.getImage());<br>    <span class="hljs-comment">// 新增套餐菜品关系</span><br>    List&lt;SetmealDish&gt; setmealDishes = setmealDTO.getSetmealDishes();<br>    setmealDishes.forEach(setmealDish -&gt; &#123;<br>        setmealDish.setSetmealId(setmealId);<br>    &#125;);<br>    setmealDishMapper.insertBatch(setmealDishes);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 新增套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> setmeal</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@AutoFill(INSERT)</span><br><span class="hljs-meta">@Insert(&quot;insert into setmeal(category_id, description, image, name, price, status, create_user, create_time, update_time, update_user) values (#&#123;categoryId&#125;, #&#123;description&#125;, #&#123;image&#125;, #&#123;name&#125;, #&#123;price&#125;, #&#123;status&#125;, #&#123;createUser&#125;, #&#123;createTime&#125;, #&#123;updateTime&#125;, #&#123;updateUser&#125;)&quot;)</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(Setmeal setmeal)</span>;<br></code></pre></td></tr></table></figure><h2 id="套餐分页查询"><a href="#套餐分页查询" class="headerlink" title="套餐分页查询"></a>套餐分页查询</h2><p><strong>controller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 套餐分页查询</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> pageQueryDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;套餐分页查询&quot;)</span><br><span class="hljs-meta">@GetMapping(&quot;/page&quot;)</span><br><span class="hljs-keyword">public</span> Result&lt;PageResult&gt; <span class="hljs-title function_">page</span><span class="hljs-params">(SetmealPageQueryDTO pageQueryDTO)</span>&#123;<br>    log.info(<span class="hljs-string">&quot;套餐分页查询:&#123;&#125;&quot;</span>, pageQueryDTO);<br>    <span class="hljs-type">PageResult</span> <span class="hljs-variable">pageResult</span> <span class="hljs-operator">=</span> setmealService.pageQuery(pageQueryDTO);<br>    <span class="hljs-keyword">return</span> Result.success(pageResult);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>service</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 套餐分页查询</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> pageQueryDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br>PageResult <span class="hljs-title function_">pageQuery</span><span class="hljs-params">(SetmealPageQueryDTO pageQueryDTO)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 套餐分页查询</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> pageQueryDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> PageResult <span class="hljs-title function_">pageQuery</span><span class="hljs-params">(SetmealPageQueryDTO pageQueryDTO)</span> &#123;<br>    PageHelper.startPage(pageQueryDTO.getPage(), pageQueryDTO.getPageSize());<br>    Page&lt;SetmealVO&gt; page = setmealMapper.pageQuery(pageQueryDTO);<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PageResult</span>(page.getTotal(), page.getResult());<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mapper</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 套餐分页查询</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> pageQueryDTO</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br>Page&lt;SetmealVO&gt; <span class="hljs-title function_">pageQuery</span><span class="hljs-params">(SetmealPageQueryDTO pageQueryDTO)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pageQuery&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;com.sky.vo.SetmealVO&quot;</span>&gt;</span><br>    select s.*,c.name categoryName from setmeal s left join category c on s.category_id = c.id<br>    <span class="hljs-tag">&lt;<span class="hljs-name">where</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;name != null&quot;</span>&gt;</span>and s.name like concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;)<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;status != null&quot;</span>&gt;</span>and s.status = #&#123;status&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;categoryId != null&quot;</span>&gt;</span>and s.category_id = #&#123;categoryId&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">where</span>&gt;</span><br>    order by s.create_time desc<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="批量删除套餐"><a href="#批量删除套餐" class="headerlink" title="批量删除套餐"></a>批量删除套餐</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 批量删除套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> ids</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;批量删除套餐&quot;)</span><br><span class="hljs-meta">@DeleteMapping</span><br><span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">remove</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam</span> List&lt;Long&gt; ids)</span>&#123;<br>    log.info(<span class="hljs-string">&quot;批量删除套餐:&#123;&#125;&quot;</span>, ids);<br>    setmealService.removeBatch(ids);<br>    <span class="hljs-keyword">return</span> Result.success();<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 批量删除套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> ids</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">removeBatch</span><span class="hljs-params">(List&lt;Long&gt; ids)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 批量删除套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> ids</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">removeBatch</span><span class="hljs-params">(List&lt;Long&gt; ids)</span> &#123;<br>    <span class="hljs-comment">// 套餐起售则不能删</span><br>    ids.forEach(id-&gt;&#123;<br>        <span class="hljs-keyword">if</span> (setmealMapper.getById(id).getStatus().equals(ENABLE)) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DeletionNotAllowedException</span>(SETMEAL_ON_SALE);<br>    &#125;);<br><br>    <span class="hljs-comment">// 删除套餐</span><br>    setmealMapper.removeBatch(ids);<br><br>    <span class="hljs-comment">// 删除套餐菜品关系</span><br>    ids.forEach(id-&gt;&#123;<br>        setmealDishMapper.removeBySetmealId(id);<br>    &#125;);<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mapper</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据id批量删除套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> ids</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">removeBatch</span><span class="hljs-params">(List&lt;Long&gt; ids)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">delete</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;removeBatch&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;java.util.List&quot;</span>&gt;</span><br>    delete from setmeal where<br>        <span class="hljs-tag">&lt;<span class="hljs-name">foreach</span> <span class="hljs-attr">item</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">collection</span>=<span class="hljs-string">&quot;ids&quot;</span></span><br><span class="hljs-tag">                 <span class="hljs-attr">open</span>=<span class="hljs-string">&quot;id in (&quot;</span> <span class="hljs-attr">separator</span>=<span class="hljs-string">&quot;,&quot;</span> <span class="hljs-attr">close</span>=<span class="hljs-string">&quot;)&quot;</span>&gt;</span><br>            #&#123;id&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">foreach</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">delete</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据套餐id删除</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Delete(&quot;delete from setmeal_dish where setmeal_id=#&#123;id&#125;&quot;)</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">removeBySetmealId</span><span class="hljs-params">(Long id)</span>;<br></code></pre></td></tr></table></figure><h2 id="修改套餐"><a href="#修改套餐" class="headerlink" title="修改套餐"></a>修改套餐</h2><p><strong>controller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 修改套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;修改套餐&quot;)</span><br><span class="hljs-meta">@PutMapping</span><br><span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">update</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SetmealDTO setmealDTO)</span>&#123;<br>    log.info(<span class="hljs-string">&quot;修改套餐:&#123;&#125;&quot;</span>, setmealDTO);<br>    setmealService.update(setmealDTO);<br>    <span class="hljs-keyword">return</span> Result.success();<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>service</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 修改套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> setmealDTO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">(SetmealDTO setmealDTO)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 修改套餐和套餐菜品关系</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> setmealDTO</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">(SetmealDTO setmealDTO)</span> &#123;<br>    <span class="hljs-comment">// 修改套餐</span><br>    <span class="hljs-type">Setmeal</span> <span class="hljs-variable">setmeal</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Setmeal</span>();<br>    BeanUtils.copyProperties(setmealDTO, setmeal);<br>    setmealMapper.update(setmeal);<br><br>    <span class="hljs-comment">// 修改套餐菜品关系 -&gt; 先删后增</span><br>    <span class="hljs-comment">// 删除关系</span><br>    setmealDishMapper.removeBySetmealId(setmeal.getId());<br>    <span class="hljs-comment">// 新增关系</span><br>    List&lt;SetmealDish&gt; setmealDishes = setmealDTO.getSetmealDishes();<br>    setmealDishes.forEach(setmealDish -&gt; setmealDish.setSetmealId(setmeal.getId()));<br>    setmealDishMapper.insertBatch(setmealDTO.getSetmealDishes());<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mapper</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 修改套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> setmeal</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@AutoFill(UPDATE)</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">(Setmeal setmeal)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">update</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;update&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;com.sky.entity.Setmeal&quot;</span>&gt;</span><br>    update setmeal<br>    <span class="hljs-tag">&lt;<span class="hljs-name">set</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;categoryId!=null&quot;</span>&gt;</span>category_id=#&#123;categoryId&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;name!=null&quot;</span>&gt;</span>name=#&#123;name&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;price!=null&quot;</span>&gt;</span>price=#&#123;price&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;status!=null&quot;</span>&gt;</span>status=#&#123;status&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;description!=null&quot;</span>&gt;</span>description=#&#123;description&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;image!=null&quot;</span>&gt;</span>image=#&#123;image&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;updateTime!=null&quot;</span>&gt;</span>update_time=#&#123;updateTime&#125;,<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;updateUser!=null&quot;</span>&gt;</span>update_user=#&#123;updateUser&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br>    where id=#&#123;id&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">update</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="起售停售套餐"><a href="#起售停售套餐" class="headerlink" title="起售停售套餐"></a>起售停售套餐</h2><p><strong>controller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 起售停售套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> status</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> setmealId</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;起售停售套餐&quot;)</span><br><span class="hljs-meta">@PostMapping(&quot;/status/&#123;status&#125;&quot;)</span><br><span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">startOrStop</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Integer status,</span><br><span class="hljs-params">                                  <span class="hljs-meta">@RequestParam(&quot;id&quot;)</span> Long setmealId)</span>&#123;<br>    log.info(<span class="hljs-string">&quot;起售停售套餐:status:&#123;&#125;,setmealId:&#123;&#125;&quot;</span>, status, setmealId);<br>    setmealService.startOrStop(status, setmealId);<br>    <span class="hljs-keyword">return</span> Result.success();<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>service</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 起售停售套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> status</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> setmealId</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">startOrStop</span><span class="hljs-params">(Integer status, Long setmealId)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 起售停售套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> status</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> setmealId</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">startOrStop</span><span class="hljs-params">(Integer status, Long setmealId)</span> &#123;<br>    setmealMapper.update(Setmeal.builder().status(status).id(setmealId).build());<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="根据id查询套餐"><a href="#根据id查询套餐" class="headerlink" title="根据id查询套餐"></a>根据id查询套餐</h2><p><strong>controller</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据id查询套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ApiOperation(&quot;根据id查询套餐&quot;)</span><br><span class="hljs-meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span><br><span class="hljs-keyword">public</span> Result&lt;SetmealVO&gt; <span class="hljs-title function_">getById</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Long id)</span>&#123;<br>    log.info(<span class="hljs-string">&quot;根据id查询套餐:&#123;&#125;&quot;</span>, id);<br>    <span class="hljs-type">SetmealVO</span> <span class="hljs-variable">setmealVO</span> <span class="hljs-operator">=</span> setmealService.getById(id);<br>    <span class="hljs-keyword">return</span> Result.success(setmealVO);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>service</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据id查询套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br>SetmealVO <span class="hljs-title function_">getById</span><span class="hljs-params">(Long id)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据id查询套餐</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> SetmealVO <span class="hljs-title function_">getById</span><span class="hljs-params">(Long id)</span> &#123;<br>    <span class="hljs-comment">// 查询套餐</span><br>    <span class="hljs-type">Setmeal</span> <span class="hljs-variable">setmeal</span> <span class="hljs-operator">=</span> setmealMapper.getById(id);<br>    <span class="hljs-comment">// 查询菜品套餐关系</span><br>    List&lt;SetmealDish&gt; list = setmealDishMapper.getBySetmealId(id);<br>    <span class="hljs-comment">// 封装返回</span><br>    <span class="hljs-type">SetmealVO</span> <span class="hljs-variable">setmealVO</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SetmealVO</span>();<br>    BeanUtils.copyProperties(setmeal, setmealVO);<br>    setmealVO.setSetmealDishes(list);<br>    <span class="hljs-keyword">return</span> setmealVO;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>mapper</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据id获得套餐数据</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Select(&quot;select * from setmeal where id=#&#123;id&#125;&quot;)</span><br>Setmeal <span class="hljs-title function_">getById</span><span class="hljs-params">(Long id)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 根据套餐id找到关系数据</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> id</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Select(&quot;select * from setmeal_dish where setmeal_id=#&#123;id&#125;&quot;)</span><br>List&lt;SetmealDish&gt; <span class="hljs-title function_">getBySetmealId</span><span class="hljs-params">(Long id)</span>;<br></code></pre></td></tr></table></figure><h1 id="day05"><a href="#day05" class="headerlink" title="day05"></a>day05</h1><blockquote><p>利用redis查询店铺状态: 打烊还是营业中</p></blockquote><p><strong>controller</strong></p><p>管理端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.sky.controller.admin;<br><br><span class="hljs-keyword">import</span> com.sky.result.Result;<br><span class="hljs-keyword">import</span> io.swagger.annotations.Api;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiOperation;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.*;<br><br><span class="hljs-keyword">import</span> javax.annotation.Resource;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 付广建 2023/12/8 15:44</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@RestController(&quot;adminShopController&quot;)</span><br><span class="hljs-meta">@RequestMapping(&quot;/admin/shop&quot;)</span><br><span class="hljs-meta">@Api(tags = &quot;店铺相关操作&quot;)</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ShopController</span> &#123;<br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> StringRedisTemplate srt;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">KEY</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;SHOP_STATUS&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取营业状态</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@ApiOperation(&quot;获取营业状态&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/status&quot;)</span><br>    <span class="hljs-keyword">public</span> Result&lt;Integer&gt; <span class="hljs-title function_">getStatus</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> srt.opsForValue().get(KEY);<br>        <span class="hljs-keyword">if</span> (status != <span class="hljs-literal">null</span>) &#123;<br>            log.info(<span class="hljs-string">&quot;店铺状态: &#123;&#125;&quot;</span>, status.equals(<span class="hljs-string">&quot;1&quot;</span>) ? <span class="hljs-string">&quot;营业中&quot;</span> : <span class="hljs-string">&quot;打烊中&quot;</span>);<br>            <span class="hljs-keyword">return</span> Result.success(Integer.valueOf(status));<br>        &#125;<br>        <span class="hljs-keyword">return</span> Result.success();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 设置营业状态</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> status</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PutMapping(&quot;/&#123;status&#125;&quot;)</span><br>    <span class="hljs-meta">@ApiOperation(&quot;设置营业状态&quot;)</span><br>    <span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">setStatus</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Integer status)</span>&#123;<br>        srt.opsForValue().set(KEY, status.toString());<br>        <span class="hljs-keyword">return</span> Result.success();<br>    &#125;<br><br><br><br>&#125;<br></code></pre></td></tr></table></figure><p>用户端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.sky.controller.user;<br><br><span class="hljs-keyword">import</span> com.sky.result.Result;<br><span class="hljs-keyword">import</span> io.swagger.annotations.Api;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiOperation;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br><span class="hljs-keyword">import</span> javax.annotation.Resource;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 付广建 2023/12/8 15:50</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@RestController(&quot;userShopController&quot;)</span><br><span class="hljs-meta">@RequestMapping(&quot;/user/shop&quot;)</span><br><span class="hljs-meta">@Api(tags = &quot;店铺相关操作&quot;)</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> StringRedisTemplate srt;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">KEY</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;SHOP_STATUS&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取营业状态</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@ApiOperation(&quot;获取营业状态&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/status&quot;)</span><br>    <span class="hljs-keyword">public</span> Result&lt;String&gt; <span class="hljs-title function_">getStatus</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> srt.opsForValue().get(KEY);<br>        <span class="hljs-keyword">if</span> (status != <span class="hljs-literal">null</span>) &#123;<br>            log.info(<span class="hljs-string">&quot;店铺状态: &#123;&#125;&quot;</span>, status.equals(<span class="hljs-string">&quot;1&quot;</span>) ? <span class="hljs-string">&quot;营业中&quot;</span> : <span class="hljs-string">&quot;打烊中&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> Result.success(status);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>spring基本使用</title>
    <link href="/2023/12/06/spring%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/12/06/spring%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="IoC容器基础"><a href="#IoC容器基础" class="headerlink" title="IoC容器基础"></a>IoC容器基础</h1><h2 id="简单上手"><a href="#简单上手" class="headerlink" title="简单上手"></a>简单上手</h2><p>轻量级的<code>IoC</code>和<code>AOP</code>的容器框架, 针对<code>Bean</code>的生命周期进行管理的轻量级容器.</p><p>IoC(控制反转), 把复杂系统分解成互相合作的对象, 这些对象通过封装对外透明, 可以灵活的重用和扩展</p><p>我们把对象交给IoC容器管理, 根据配置文件决定给我们哪个实现类</p><p>高内聚,低耦合是现代软件开发的设计目标, Spring框架给我们提供IoC容器进行对象管理, 被管理的对象是Bean</p><p>Student -编写配置-&gt; Bean配置 -提供给-&gt; IoC容器 -提供-&gt; student对象</p><h2 id="Bean注册和配置"><a href="#Bean注册和配置" class="headerlink" title="Bean注册和配置"></a>Bean注册和配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml">// name 命名,防止冲突; alias 起一个小名<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.Student&quot;</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;prototype&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">alias</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student&quot;</span> <span class="hljs-attr">alias</span>=<span class="hljs-string">&quot;s&quot;</span> /&gt;</span><br><br>// 单例模式(默认)&#123;一开始（容器加载配置时）就被创建，我们之后拿到的都是这个对象&#125;和原型模式&#123;只有在获取时才会被创建&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.Student&quot;</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;singleton&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student1&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.Student&quot;</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;prototype&quot;</span>/&gt;</span><br><br>// 懒加载: 只有在真正第一次使用时才会创建对象<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.Student&quot;</span> <span class="hljs-attr">lazy-init</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br><br>// depend-on 在哪个对象之后执行<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.Student&quot;</span> <span class="hljs-attr">lazy-init</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;art&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.ArtStudent&quot;</span> <span class="hljs-attr">depends-on</span>=<span class="hljs-string">&quot;student&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sport&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.SportStudent&quot;</span> <span class="hljs-attr">depends-on</span>=<span class="hljs-string">&quot;student&quot;</span>/&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs xml">// 属性注入 property<br><br>// 注入自定义对象 ref<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;teacher&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.ProgramTeacher&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.Student&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;teacher&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;teacher&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>// 注入基本类型 value<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.Student&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;卢本伟&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>// 构造方法注入 constructor<br><br>// 注入自定义对象 ref<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;teacher&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.ArtTeacher&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.Student&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">constructor-arg</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;teacher&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;teacher&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>// 注入基本类型 value<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student2&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.Student&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">constructor-arg</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;age&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">constructor-arg</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;int&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>// 注入集合 list<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.Student&quot;</span>&gt;</span><br>  <span class="hljs-comment">&lt;!--  对于集合类型，我们可以直接使用标签编辑集合的默认值  --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;list&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">list</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>AAA<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>BBB<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>CCC<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">list</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>// 注入集合 map<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.Student&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;map&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">map</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;语文&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;100.0&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;数学&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;80.0&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;英语&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;92.5&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">map</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="自动装配"><a href="#自动装配" class="headerlink" title="自动装配"></a>自动装配</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml">// 三种自动装配方法 <br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;teacher&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.teacher.ProgramTeacher&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.Student&quot;</span> <span class="hljs-attr">autowire</span>=<span class="hljs-string">&quot;constructor&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student1&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.Student&quot;</span> <span class="hljs-attr">autowire</span>=<span class="hljs-string">&quot;byType&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student2&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.Student&quot;</span> <span class="hljs-attr">autowire</span>=<span class="hljs-string">&quot;byName&quot;</span> /&gt;</span><br><br>// byType 的错误, 这样两个bean注入时出错, 应该注明注入哪个teacher<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;teacher&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.teacher.ProgramTeacher&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;teacher2&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.teacher.ArtTeacher&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student1&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.Student&quot;</span> <span class="hljs-attr">autowire</span>=<span class="hljs-string">&quot;byType&quot;</span>/&gt;</span><br>// 1.设定primary属性，表示这个Bean作为主要的Bean，当出现歧义时，也会优先选择<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;teacher&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.teacher.ProgramTeacher&quot;</span> <span class="hljs-attr">primary</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br>// 2.希望ProgramTeacher这个Bean在任何情况下都不参与到自动装配中，此时我们就可以将它的自动装配候选关闭<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;teacher2&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.teacher.ArtTeacher&quot;</span> <span class="hljs-attr">autowire-candidate</span>=<span class="hljs-string">&quot;false&quot;</span>/&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="生命周期与继承"><a href="#生命周期与继承" class="headerlink" title="生命周期与继承"></a>生命周期与继承</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs xml">// 指定初始化方法和销毁方法<br>public void init()&#123;<br>    System.out.println(&quot;我是对象初始化时要做的事情！&quot;);    <br>&#125;<br>public void destroy()&#123;<br>    System.out.println(&quot;我是对象销毁时要做的事情！&quot;);<br>&#125;<br>// 配置<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;student&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.Student&quot;</span> <span class="hljs-attr">init-method</span>=<span class="hljs-string">&quot;init&quot;</span> <span class="hljs-attr">destroy-method</span>=<span class="hljs-string">&quot;destroy&quot;</span>/&gt;</span><br>// 执行<br>ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;test.xml&quot;);<br>context.close();<br><br>// bean的继承, 配置abstract抽象不能调用<br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;artStudent&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.ArtStudent&quot;</span> <span class="hljs-attr">abstract</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;小明&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sportStudent&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.test.bean.student.SportStudent&quot;</span> <span class="hljs-attr">parent</span>=<span class="hljs-string">&quot;artStudent&quot;</span>/&gt;</span><br><br>// 最外层的beans标签中进行默认配置,整个上下文中所有的Bean都采用某种配置<br><br>https://www.springframework.org/schema/beans/spring-beans.xsd&quot; default-lazy-init=&quot;true&quot;&gt;<br><br></code></pre></td></tr></table></figure><h2 id="工厂模式和工厂Bean"><a href="#工厂模式和工厂Bean" class="headerlink" title="工厂模式和工厂Bean"></a>工厂模式和工厂Bean</h2><p>外界不用类的构造方法完成对象创建, 利用反射找到工厂类, 利用工厂类生成需要的Bean对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// class填写为这个类这个只是为了告诉Spring我们的工厂方法在哪个位置，真正注册的是工厂方法提供的东西</span><br>&lt;bean name=<span class="hljs-string">&quot;studentFactory&quot;</span> class=<span class="hljs-string">&quot;com.test.bean.StudentFactory&quot;</span>/&gt;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentFactory</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Student <span class="hljs-title function_">getStudent</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;欢迎光临电子厂&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>    <span class="hljs-type">ApplicationContext</span>  <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;test.xml&quot;</span>);<br>    <span class="hljs-type">Student</span> <span class="hljs-variable">student</span> <span class="hljs-operator">=</span> (Student) context.getBean(<span class="hljs-string">&quot;studentFactory&quot;</span>);<br>    System.out.println(student);<br><br>&#125;<br><br><span class="hljs-comment">// 直接注入工厂类</span><br>&lt;bean name=<span class="hljs-string">&quot;studentFactory&quot;</span> class=<span class="hljs-string">&quot;com.test.bean.student.StudentFactory&quot;</span> /&gt;<br>&lt;bean factory-bean=<span class="hljs-string">&quot;studentFactory&quot;</span> factory-method=<span class="hljs-string">&quot;getStudent&quot;</span> /&gt;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>    <span class="hljs-type">ApplicationContext</span>  <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;test.xml&quot;</span>);<br>    <span class="hljs-type">StudentFactory</span> <span class="hljs-variable">bean</span> <span class="hljs-operator">=</span> (StudentFactory) context.getBean(<span class="hljs-string">&quot;studentFactory&quot;</span>);<br>    <span class="hljs-type">Student</span> <span class="hljs-variable">student</span> <span class="hljs-operator">=</span> context.getBean(Student.class);<br><br>&#125;<br><br><span class="hljs-comment">// 继承工厂类接口</span><br>&lt;bean name=<span class="hljs-string">&quot;studentFactory&quot;</span> class=<span class="hljs-string">&quot;com.test.bean.student.StudentFactory&quot;</span> /&gt;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentFactory</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">FactoryBean</span>&lt;Student&gt; &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Student <span class="hljs-title function_">getStudent</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;欢迎光临电子厂&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Student <span class="hljs-title function_">getObject</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">return</span> getStudent();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Class&lt;?&gt; getObjectType() &#123;<br>        <span class="hljs-keyword">return</span> Student.class;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ApplicationContext</span>  <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;test.xml&quot;</span>);<br>        <span class="hljs-type">Student</span> <span class="hljs-variable">student</span> <span class="hljs-operator">=</span> context.getBean(Student.class);<br>        <span class="hljs-type">StudentFactory</span> <span class="hljs-variable">bean</span> <span class="hljs-operator">=</span> context.getBean(StudentFactory.class);<br>        <span class="hljs-comment">// 获得学生bean对象</span><br>        System.out.println(context.getBean(<span class="hljs-string">&quot;studentFactory&quot;</span>));<br>        <span class="hljs-comment">// 获得工厂bean对象</span><br>        System.out.println(context.getBean(<span class="hljs-string">&quot;&amp;studentFactory&quot;</span>));<br>    &#125;<br><br></code></pre></td></tr></table></figure><h2 id="注解开发"><a href="#注解开发" class="headerlink" title="注解开发"></a>注解开发</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs java"> <br><span class="hljs-comment">// 注入bean</span><br><span class="hljs-meta">@Import(SecConfig.class)</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MainConfiguration</span> &#123;<br><br>    <span class="hljs-meta">@Bean(name = &quot;student&quot;, initMethod = &quot;&quot;, destroyMethod = &quot;&quot;, autowireCandidate = false)</span><br>    <span class="hljs-meta">@Lazy(true)</span>     <span class="hljs-comment">//对应lazy-init属性</span><br>    <span class="hljs-meta">@Scope(&quot;prototype&quot;)</span>    <span class="hljs-comment">//对应scope属性</span><br>    <span class="hljs-meta">@DependsOn(&quot;teacher&quot;)</span>    <span class="hljs-comment">//对应depends-on属性</span><br>    <span class="hljs-keyword">public</span> Student <span class="hljs-title function_">student</span><span class="hljs-params">(Teacher teacher)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(teacher);<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> Teacher <span class="hljs-title function_">teacher</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Teacher</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 自动装配</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    Teacher teacher;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Student</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;我被构造了&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">study</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;study&quot;</span>);<br>    &#125;<br><br>&#125;<br><br><span class="hljs-comment">// @Autowired 和 @Resource 区别</span><br><span class="hljs-meta">@Resource</span>默认ByName如果找不到则ByType，可以添加到set方法、字段上。<br><span class="hljs-meta">@Autowired</span>默认是byType，只会根据类型寻找，可以添加在构造方法、set方法、字段、方法参数上。<br><span class="hljs-meta">@Resource</span> = <span class="hljs-meta">@Autowired</span> + <span class="hljs-meta">@Qualifier</span><br><span class="hljs-meta">@Resource</span> 需要另外导入包<br>&lt;dependency&gt;<br>    &lt;groupId&gt;jakarta.annotation&lt;/groupId&gt;<br>    &lt;artifactId&gt;jakarta.annotation-api&lt;/artifactId&gt;<br>    &lt;version&gt;<span class="hljs-number">2.1</span><span class="hljs-number">.1</span>&lt;/version&gt;<br>&lt;/dependency&gt;<br><br><span class="hljs-comment">// @Component</span><br><span class="hljs-meta">@Component(&quot;lbwnb&quot;)</span>   <span class="hljs-comment">//同样可以自己起名字</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span> &#123;<br>&#125;<br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@ComponentScan(&quot;com.test.bean&quot;)</span>   <span class="hljs-comment">//包扫描，这样Spring就会去扫描对应包下所有的类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MainConfiguration</span> &#123;<br>&#125;<br><br><span class="hljs-comment">// 工厂类</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentFactory</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">FactoryBean</span>&lt;Student&gt; &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Student <span class="hljs-title function_">getObject</span><span class="hljs-params">()</span> &#123;   <span class="hljs-comment">//生产的Bean对象</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Class&lt;?&gt; getObjectType() &#123;   <span class="hljs-comment">//生产的Bean类型</span><br>        <span class="hljs-keyword">return</span> Student.class;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isSingleton</span><span class="hljs-params">()</span> &#123;   <span class="hljs-comment">//生产的Bean是否采用单例模式</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="SpringEL-表达式"><a href="#SpringEL-表达式" class="headerlink" title="SpringEL 表达式"></a>SpringEL 表达式</h1><h2 id="注入外部属性"><a href="#注入外部属性" class="headerlink" title="注入外部属性"></a>注入外部属性</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 配置文件</span><br>test.name=士兵<br><br><span class="hljs-comment">// 导入配置文件</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@ComponentScan(&quot;com.test.bean&quot;)</span><br><span class="hljs-meta">@PropertySource(value = &quot;classpath:test.properties&quot;, encoding = &quot;UTF-8&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MainConfiguration</span> &#123;<br>&#125;<br><br><span class="hljs-comment">// 注入</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span> &#123;<br>    <span class="hljs-meta">@Value(&quot;$&#123;test.name&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">study</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;study =&gt; &quot;</span> + name);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="SpEL简单使用"><a href="#SpEL简单使用" class="headerlink" title="SpEL简单使用"></a>SpEL简单使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">AnnotationConfigApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AnnotationConfigApplicationContext</span>(MainConfiguration.class);<br>        <span class="hljs-type">Student</span> <span class="hljs-variable">student</span> <span class="hljs-operator">=</span> context.getBean(Student.class);<br>        <span class="hljs-type">SpelExpressionParser</span> <span class="hljs-variable">parser</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpelExpressionParser</span>();<br>        <span class="hljs-type">Expression</span> <span class="hljs-variable">exp</span> <span class="hljs-operator">=</span> parser.parseExpression(<span class="hljs-string">&quot;name&quot;</span>);<br>        exp.setValue(student, <span class="hljs-string">&quot;刻晴&quot;</span>);<br>        System.out.println(exp.getValue(student));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="集合操作"><a href="#集合操作" class="headerlink" title="集合操作"></a>集合操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">AnnotationConfigApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AnnotationConfigApplicationContext</span>(MainConfiguration.class);<br>        <span class="hljs-type">Student</span> <span class="hljs-variable">student</span> <span class="hljs-operator">=</span> context.getBean(Student.class);<br>        <span class="hljs-type">SpelExpressionParser</span> <span class="hljs-variable">parser</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpelExpressionParser</span>();<br>        <span class="hljs-comment">// 取出</span><br>        System.out.println(parser.parseExpression(<span class="hljs-string">&quot;map[&#x27;活尸]&quot;</span>));<br>        System.out.println(parser.parseExpression(<span class="hljs-string">&quot;list[2]&quot;</span>));<br>        <span class="hljs-comment">// 创建集合</span><br>        <span class="hljs-type">Expression</span> <span class="hljs-variable">exp</span> <span class="hljs-operator">=</span> parser.parseExpression(<span class="hljs-string">&quot;&#123;5, 2, 1, 4, 6, 7, 0, 3, 9, 8&#125;&quot;</span>);<br>        List&lt;?&gt; list = (List&lt;?&gt;) exp.getValue();<br>        System.out.println(list);<br><br>        <span class="hljs-type">Expression</span> <span class="hljs-variable">exp1</span> <span class="hljs-operator">=</span> parser.parseExpression(<span class="hljs-string">&quot;&#123;name: &#x27;小明&#x27;, info: &#123;address: &#x27;北京市朝阳区&#x27;, tel: 10086&#125;&#125;&quot;</span>);<br>        System.out.println(exp1.getValue());<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="AOP-面向切片"><a href="#AOP-面向切片" class="headerlink" title="AOP 面向切片"></a>AOP 面向切片</h1><p>代码切入类的指定方法,指定位置; 在方法执行前或执行后, 作一些<code>额外操作</code>, 就是<code>代理</code>;<br>保证原有业务不变的情况下，添加额外的动作.</p><p>如何使用AOP ?</p><ol><li>需要切入的<code>类</code>, 类的哪个<code>方法</code>需要被切入.</li><li>切入后执行什么<code>动作</code>.</li><li>方法执行<code>前</code>切入还是<code>后</code>切入.</li><li>如何告诉Spring容器我们要切入.</li></ol><h2 id="使用配置实现AOP"><a href="#使用配置实现AOP" class="headerlink" title="使用配置实现AOP"></a>使用配置实现AOP</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">aop:config</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">aop:pointcut</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;test&quot;</span> <span class="hljs-attr">expression</span>=<span class="hljs-string">&quot;execution(* com.test.bean.student.Student.study(String))&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">aop:aspect</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;studentAOP&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--&lt;aop:after method=&quot;afterStudy&quot; pointcut-ref=&quot;test&quot; /&gt;--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">aop:around</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;aroundStudy&quot;</span> <span class="hljs-attr">pointcut-ref</span>=<span class="hljs-string">&quot;test&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">aop:aspect</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">aop:config</span>&gt;</span><br><br>public class Student &#123;<br><br>   public void study(String str) &#123;<br>       System.out.println(&quot;执行study方法, 参数: &quot; + str);<br>   &#125;<br><br>&#125;<br><br>public class StudentAOP &#123;<br>    public void afterStudy(JoinPoint point) &#123;<br>        System.out.println(&quot;意义在哪里...参数: &quot; + point.getArgs()[0]);<br>    &#125;<br><br>    public void aroundStudy(ProceedingJoinPoint joinPoint) throws Throwable &#123;<br>        System.out.println(&quot;方法开始之前&quot;);<br>        Object arg = joinPoint.getArgs()[0];<br>        joinPoint.proceed();<br>        System.out.println(&quot;方法执行完毕, 结果为: &quot; + arg);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="使用接口实现AOP"><a href="#使用接口实现AOP" class="headerlink" title="使用接口实现AOP"></a>使用接口实现AOP</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// before</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentAOP</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">MethodBeforeAdvice</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">before</span><span class="hljs-params">(Method method, Object[] args, Object target)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        System.out.println(<span class="hljs-string">&quot;通过Advice实现AOP&quot;</span>);<br>    &#125;<br>&#125;<br><br>&lt;bean id=<span class="hljs-string">&quot;student&quot;</span> class=<span class="hljs-string">&quot;com.test.bean.student.Student&quot;</span>/&gt;<br>&lt;bean id=<span class="hljs-string">&quot;studentAOP&quot;</span> class=<span class="hljs-string">&quot;com.test.bean.aop.StudentAOP&quot;</span>/&gt;<br>&lt;aop:config&gt;<br>    &lt;aop:pointcut id=<span class="hljs-string">&quot;test&quot;</span> expression=<span class="hljs-string">&quot;execution(* com.test.bean.student.Student.study(String))&quot;</span> /&gt;<br>    &lt;aop:advisor advice-ref=<span class="hljs-string">&quot;studentAOP&quot;</span> pointcut-ref=<span class="hljs-string">&quot;test&quot;</span> /&gt;<br>&lt;/aop:config&gt;<br><br><span class="hljs-comment">// after</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentAOP</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">AfterReturningAdvice</span> &#123;<br><br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterReturning</span><span class="hljs-params">(Object returnValue, Method method, Object[] args, Object target)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        System.out.println(<span class="hljs-string">&quot;我是执行后方法&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// around</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentAOP</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">MethodInterceptor</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">invoke</span><span class="hljs-params">(MethodInvocation invocation)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        System.out.println(<span class="hljs-string">&quot;我是执行之前&quot;</span>);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> invocation.proceed();<br>        System.out.println(<span class="hljs-string">&quot;我是执行之后&quot;</span>);<br>        <span class="hljs-keyword">return</span> value;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="使用注解实现AOP"><a href="#使用注解实现AOP" class="headerlink" title="使用注解实现AOP"></a>使用注解实现AOP</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentAOP</span> &#123;<br>    <span class="hljs-meta">@Before(&quot;execution(* com.test.bean.student.Student.study(..))&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">before</span><span class="hljs-params">(JoinPoint point)</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;我是之前执行的内容！: 参数: &quot;</span> + point.getArgs()[<span class="hljs-number">0</span>]);<br>    &#125;<br>    <span class="hljs-meta">@AfterReturning(&quot;execution(* com.test.bean.student.Student.study(..))&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">after</span><span class="hljs-params">(JoinPoint point)</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;我是之后执行的内容！: 参数: &quot;</span> + point.getArgs()[<span class="hljs-number">0</span>]);<br>    &#125;<br>    <span class="hljs-meta">@Around(&quot;execution(* com.test.bean.student.Student.study(..))&quot;)</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">around</span><span class="hljs-params">(ProceedingJoinPoint point)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        System.out.println(<span class="hljs-string">&quot;方法执行之前！&quot;</span>);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">val</span> <span class="hljs-operator">=</span> point.proceed();<br>        System.out.println(<span class="hljs-string">&quot;方法执行之后！&quot;</span>);<br>        <span class="hljs-keyword">return</span> val;<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">@EnableAspectJAutoProxy</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@ComponentScan(&quot;com.test.bean&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MainConfiguration</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="整合数据库"><a href="#整合数据库" class="headerlink" title="整合数据库"></a>整合数据库</h1><p>数据库的链接开关耗费资源, JDBC定义数据源DataSource接口, 将连接交给DataSource管理, 采用池化技术创建好连接</p><p><img src="https://fgj2.oss-cn-beijing.aliyuncs.com/-1701159815238.png" alt="连接池"></p><h2 id="整合Mybatis框架"><a href="#整合Mybatis框架" class="headerlink" title="整合Mybatis框架"></a>整合Mybatis框架</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">AnnotationConfigApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AnnotationConfigApplicationContext</span>(MainConfiguration.class);<br>        <span class="hljs-type">TestMapper</span> <span class="hljs-variable">mapper</span> <span class="hljs-operator">=</span> context.getBean(TestMapper.class);<br>        System.out.println(mapper.getOrder());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="使用HikariCP连接池"><a href="#使用HikariCP连接池" class="headerlink" title="使用HikariCP连接池"></a>使用HikariCP连接池</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.zaxxer<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>HikariCP<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.0.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>@Bean<br>public DataSource dataSource() &#123;<br>    HikariDataSource dataSource = new HikariDataSource();<br>    dataSource.setJdbcUrl(&quot;jdbc:mysql://localhost:3306/study&quot;);<br>    dataSource.setDriverClassName(&quot;com.mysql.cj.jdbc.Driver&quot;);<br>    dataSource.setUsername(&quot;root&quot;);<br>    dataSource.setPassword(&quot;123456&quot;);<br>    return dataSource;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>原子性:要么成功,要么失败<br>一致性:不能成功一半<br>隔离性:事务和事务之间隔离<br>持久性:事务完成不能回退</p><table><thead><tr><th>隔离级别</th><th>脏读</th><th>可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>读未提交</td><td>可能</td><td>可能</td><td>可能</td></tr><tr><td>读已提交</td><td>不能</td><td>可能</td><td>可能</td></tr><tr><td>可重复读</td><td>不能</td><td>不能</td><td>可能</td></tr><tr><td>串行化</td><td>不能</td><td>不能</td><td>不能</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Transactional</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Order</span>().setUser_id(<span class="hljs-number">7</span>).setNum(<span class="hljs-number">2</span>).setName(<span class="hljs-string">&quot;手套&quot;</span>).setPrice(<span class="hljs-number">900</span>);<br>        testMapper.insertOrder(order);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-literal">true</span>) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(<span class="hljs-string">&quot;我是测试异常&quot;</span>);<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Order</span>().setUser_id(<span class="hljs-number">7</span>).setNum(<span class="hljs-number">5</span>).setName(<span class="hljs-string">&quot;袜子&quot;</span>).setPrice(<span class="hljs-number">900</span>);<br>        testMapper.insertOrder(order1);<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="JUnit"><a href="#JUnit" class="headerlink" title="JUnit"></a>JUnit</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.junit.jupiter<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit-jupiter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.9.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>6.0.10<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>@ExtendWith(SpringExtension.class)<br>@ContextConfiguration(classes = MainConfiguration.class)<br>public class TestMain &#123;<br>    @Autowired<br>    TestServiceImpl service;<br>    @Test<br>    public void test()&#123;<br>        service.test();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>后端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>spring</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>jQuery使用</title>
    <link href="/2023/12/06/jQuery%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/12/06/jQuery%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p><code>Dom对象 &lt;=&gt; jQuery对象</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Dom对象 &lt;=&gt; jQuery对象<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;mydiv&quot;</span>&gt;</span>咒术回战<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// Dom</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> mydiv = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;mydiv&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Dom: &#x27;</span> + mydiv.<span class="hljs-property">innerText</span>);</span><br><span class="language-javascript">    <span class="hljs-comment">// jQuery</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> mydiv1 = $(<span class="hljs-string">&#x27;#mydiv&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;jQuery: &#x27;</span> + mydiv1[<span class="hljs-number">0</span>].<span class="hljs-property">innerText</span>);</span><br><span class="language-javascript">    <span class="hljs-comment">// Dom -&gt; jQuery</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> $1 = $(mydiv);</span><br><span class="language-javascript">    <span class="hljs-comment">// jQuery -&gt; Dom</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> dom = <span class="hljs-title function_">jQuery</span>($1);  <span class="hljs-comment">// 1</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> dom1 = $1[<span class="hljs-number">0</span>];  <span class="hljs-comment">// 2</span></span><br><span class="language-javascript">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="jQuery选择器"><a href="#jQuery选择器" class="headerlink" title="jQuery选择器"></a>jQuery选择器</h1><p>查找定位元素,把选择器字符串传入方法能选择不同Dom对象并以jQuery包装集形式返回</p><p><code>基础选择器</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>基础选择器<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>银骑士<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;id1&quot;</span>&gt;</span>黑骑士<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;class1&quot;</span>&gt;</span>恶魔王子<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// id选择器</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> $1 = $(#id1);</span><br><span class="language-javascript">    <span class="hljs-comment">// 元素选择器</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> $span = $(<span class="hljs-string">&#x27;span&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-comment">// 类选择器</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> $class1 = $(<span class="hljs-string">&#x27;.class1&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-comment">// 通用选择器</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> $2 = $(<span class="hljs-string">&#x27;*&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-comment">// 组合选择器</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> $combine = $(<span class="hljs-string">&#x27;span, #id1, .class1&#x27;</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>选择器</th><th>格式</th></tr></thead><tbody><tr><td>id选择器</td><td>$(#id)</td></tr><tr><td>元素名称选择器</td><td>$(element)</td></tr><tr><td>类选择器</td><td>$(.class)</td></tr><tr><td>选择所有元素</td><td>$(*)</td></tr><tr><td>组合选择器</td><td>$(s1,s2,s3)</td></tr></tbody></table><p><code>层次选择器</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>层次选择器<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;testing&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;lang&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;lang-javascript&quot;</span>&gt;</span>JavaScript<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;lang-python&quot;</span>&gt;</span>Python<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;lang-lua&quot;</span>&gt;</span>Lua<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 后代选择器 (后代范围更广)</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> $ul = $(<span class="hljs-string">&#x27;ul li&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-comment">// 子代选择器</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> $ul1 = $(<span class="hljs-string">&#x27;ul.lang &gt; li.lang-javascript&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-comment">// 相邻选择器</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> $lang = $(<span class="hljs-string">&#x27;.lang-javascript + li&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-comment">// 同辈选择器 (同辈范围更广)</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> $lang1 = $(<span class="hljs-string">&#x27;.lang-javascript ~ li&#x27;</span>);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>选择器</th><th>格式</th></tr></thead><tbody><tr><td>后代选择器</td><td>$(s1 s2)</td></tr><tr><td>子代选择器</td><td>$(parent &gt; child)</td></tr><tr><td>相邻选择器</td><td>$(prev + next)</td></tr><tr><td>同辈选择器</td><td>$(prev ~ sibling)</td></tr></tbody></table><p>表单选择器</p><table><thead><tr><th>选择器</th><th>格式</th></tr></thead><tbody><tr><td>表单选择器</td><td>$(:input)</td></tr><tr><td>文本框选择器</td><td>$(:text)</td></tr><tr><td>密码框选择器</td><td>$(:password)</td></tr><tr><td>单选按钮选择器</td><td>$(:radio)</td></tr><tr><td>复选框选择器</td><td>$(:checkbox)</td></tr><tr><td>提交按钮选择器</td><td>$(:submit)</td></tr><tr><td>图像域选择器</td><td>$(:image)</td></tr><tr><td>重置按钮选择器</td><td>$(:reset)</td></tr><tr><td>按钮选择器</td><td>$(:button)</td></tr><tr><td>文件域选择器</td><td>$(:file)</td></tr></tbody></table><h1 id="Dom操作"><a href="#Dom操作" class="headerlink" title="Dom操作"></a>Dom操作</h1><p><code>操作元素属性</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>操作元素属性<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ch&quot;</span> <span class="hljs-attr">checked</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;aa&quot;</span> <span class="hljs-attr">abc</span>=<span class="hljs-string">&quot;abc&quot;</span> /&gt;</span> aa<br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ch&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;bb&quot;</span> <span class="hljs-attr">test</span>=<span class="hljs-string">true/</span>&gt;</span> bb<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 获取属性</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> attr1 = $(<span class="hljs-string">&#x27;#aa&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;abc&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> attr2 = $(<span class="hljs-string">&#x27;#bb&#x27;</span>).<span class="hljs-title function_">prop</span>(<span class="hljs-string">&#x27;test&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;attr: &#x27;</span> + attr1 + <span class="hljs-string">&#x27; prop: &#x27;</span> + attr2)</span><br><span class="language-javascript">    <span class="hljs-comment">// 设置属性</span></span><br><span class="language-javascript">    $(<span class="hljs-string">&#x27;#aa&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;value&#x27;</span>, <span class="hljs-number">1</span>)</span><br><span class="language-javascript">    <span class="hljs-comment">// 删除属性</span></span><br><span class="language-javascript">    $(<span class="hljs-string">&#x27;#aa&#x27;</span>).<span class="hljs-title function_">removeAttr</span>(<span class="hljs-string">&#x27;value&#x27;</span>)</span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>attr(属性名称)</td><td>获取指定的属性值</td></tr><tr><td>prop(属性名称)</td><td>获取具有true和false两个属性的属性值</td></tr></tbody></table><p><code>操作元素样式</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>操作元素样式<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">padding</span>: <span class="hljs-number">8px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">180px</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">        <span class="hljs-selector-class">.blue</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">background</span>: blue;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">        <span class="hljs-selector-class">.green</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">background</span>: green;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">        <span class="hljs-selector-class">.larger</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>css方法设置元素样式<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;conBlue&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;blue larger&quot;</span>&gt;</span>天蓝色<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;conRed&quot;</span>&gt;</span>大红色<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;remove&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;blue larger&quot;</span>&gt;</span>天蓝色<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 获取class</span></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> cls = $(<span class="hljs-string">&quot;#conBlue&quot;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;class&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(cls);</span><br><span class="language-javascript">    <span class="hljs-comment">// 修改class</span></span><br><span class="language-javascript">    $(<span class="hljs-string">&quot;#conBlue&quot;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;class&#x27;</span>, <span class="hljs-string">&#x27;green&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-comment">// 添加class</span></span><br><span class="language-javascript">    $(<span class="hljs-string">&quot;#conBlue&quot;</span>).<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&#x27;larger&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-comment">// 添加具体样式</span></span><br><span class="language-javascript">    $(<span class="hljs-string">&quot;#conBlue&quot;</span>).<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;font-size&#x27;</span>, <span class="hljs-string">&#x27;90px&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-comment">// 移除样式</span></span><br><span class="language-javascript">    $(<span class="hljs-string">&quot;#conBlue&quot;</span>).<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&#x27;green&#x27;</span>)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>attr(‘class’)</td><td>获取class属性的值,即样式名称</td></tr><tr><td>attr(‘class’, ‘样式名’)</td><td>获取class属性的值,修改样式</td></tr><tr><td>addClass(‘样式名’)</td><td>添加样式名称</td></tr><tr><td>css(‘样式名’, ‘样式’)</td><td>添加具体样式</td></tr><tr><td>removeClass(‘样式名’)</td><td>移除样式</td></tr></tbody></table><p><code>操作元素内容</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>操作元素内容 <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;html&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    $(<span class="hljs-string">&#x27;#html&#x27;</span>).<span class="hljs-title function_">html</span>(<span class="hljs-string">&#x27;&lt;h1&gt;Tokyo&lt;/h1&gt;&#x27;</span>)</span><br><span class="language-javascript">    $(<span class="hljs-string">&#x27;#text&#x27;</span>).<span class="hljs-title function_">text</span>(<span class="hljs-string">&#x27;Tokyo&#x27;</span>)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>html()</td><td>获取元素html内容</td></tr><tr><td>html(‘html, 内容’)</td><td>设定元素html内容</td></tr><tr><td>text()</td><td>获取元素的文本内容,不包含html</td></tr><tr><td>text(‘text 内容’)</td><td>设置元素文本内容,不包含html</td></tr><tr><td>val()</td><td>获取元素value值</td></tr><tr><td>val(‘值’)</td><td>设定元素的value值</td></tr></tbody></table><p><code>添加元素</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>添加元素<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-tag">div</span>&#123;</span><br><span class="language-css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">    <span class="hljs-selector-tag">span</span>&#123;</span><br><span class="language-css">      <span class="hljs-attribute">color</span>: white;</span><br><span class="language-css">      <span class="hljs-attribute">padding</span>: <span class="hljs-number">8px</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">    <span class="hljs-selector-class">.red</span>&#123;</span><br><span class="language-css">      <span class="hljs-attribute">background-color</span>: red;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">    <span class="hljs-selector-class">.blue</span>&#123;</span><br><span class="language-css">      <span class="hljs-attribute">background-color</span>: blue;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">    <span class="hljs-selector-class">.green</span>&#123;</span><br><span class="language-css">      <span class="hljs-attribute">background-color</span>: green;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;red&quot;</span>&gt;</span>男神<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;blue&quot;</span>&gt;</span>偶像<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>小鲜肉<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">const</span> span = <span class="hljs-string">&quot;&lt;span&gt;小狗&lt;/span&gt;&quot;</span></span><br><span class="language-javascript">  <span class="hljs-keyword">const</span> span1 = <span class="hljs-string">&quot;&lt;span&gt;无头恶魔&lt;/span&gt;&quot;</span></span><br><span class="language-javascript">  <span class="hljs-comment">// prepend append是子元素</span></span><br><span class="language-javascript">  <span class="hljs-comment">// 在小鲜肉前面加小狗</span></span><br><span class="language-javascript">  $(<span class="hljs-string">&quot;.green&quot;</span>).<span class="hljs-title function_">prepend</span>(span)</span><br><span class="language-javascript">  <span class="hljs-comment">// 在小鲜肉前面加无头恶魔</span></span><br><span class="language-javascript">  $(<span class="hljs-string">&quot;.green&quot;</span>).<span class="hljs-title function_">append</span>(span1)</span><br><span class="language-javascript">  <span class="hljs-comment">// before after是同级元素</span></span><br><span class="language-javascript">  <span class="hljs-comment">// 在男神前加石像鬼</span></span><br><span class="language-javascript">  $(<span class="hljs-string">&quot;.red&quot;</span>).<span class="hljs-title function_">before</span>(<span class="hljs-string">&quot;&lt;span class=&#x27;green&#x27;&gt;石像鬼&lt;/span&gt;&quot;</span>)</span><br><span class="language-javascript">  <span class="hljs-comment">// 在偶像后加黑骑士</span></span><br><span class="language-javascript">  $(<span class="hljs-string">&quot;.blue&quot;</span>).<span class="hljs-title function_">after</span>(<span class="hljs-string">&quot;&lt;span class=&#x27;blue&#x27;&gt;黑骑士&lt;/span&gt;&quot;</span>)</span><br><span class="language-javascript"></span><br><span class="language-javascript">  $(<span class="hljs-string">&quot;.red&quot;</span>).<span class="hljs-title function_">remove</span>()</span><br><span class="language-javascript">  $(<span class="hljs-string">&quot;.red&quot;</span>).<span class="hljs-title function_">empty</span>()</span><br><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-comment">//$(&#x27;div.green&#x27;).remove()</span></span><br><span class="language-javascript">  $(<span class="hljs-string">&#x27;div.green&#x27;</span>).<span class="hljs-title function_">empty</span>()</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>$(selector).prepend(content)</td><td>在被选元素内部开头插入元素或内容</td></tr><tr><td>$(content).prependTo(selector)</td><td>另一种写法</td></tr><tr><td>$(selector).append(content)</td><td>在被选元素内部结尾插入元素或内容</td></tr><tr><td>$(content).appendTo(selector)</td><td>另一种写法</td></tr><tr><td>$(selector).before(content)</td><td>在元素前插入指定元素</td></tr><tr><td>$(selector).after(content)</td><td>在元素后插入指定元素</td></tr></tbody></table><p>删除和清空元素</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>$(selector).remove()</td><td>删除被选元素,标签都删了</td></tr><tr><td>$(selector).empty()</td><td>清空被选元素的内容,标签还在</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">$(<span class="hljs-string">&quot;.red&quot;</span>).<span class="hljs-title function_">remove</span>()<br>$(<span class="hljs-string">&quot;.red&quot;</span>).<span class="hljs-title function_">empty</span>()<br></code></pre></td></tr></table></figure><h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><p><code>ready 加载事件</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>加载事件<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">// 一般我们页面从上向下加载,这里获取不到div标签, 但是ready可以在页面加载完成后加载</span></span><br><span class="language-javascript">        $(()=&gt;&#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;ready加载事件&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>($(<span class="hljs-string">&#x27;#p1&#x27;</span>).<span class="hljs-title function_">text</span>());</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;p1&quot;</span>&gt;</span>文本<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>ready()可以写多个, 按顺序执行 $(()&#x3D;&gt;{}) &lt;&#x3D;&gt; $(document).ready(function(){})</p><p><code>bind 绑定事件</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>绑定事件<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn1&quot;</span>&gt;</span>你好<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn2&quot;</span>&gt;</span>你好<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn3&quot;</span>&gt;</span>你好<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>($(<span class="hljs-string">&#x27;#btn3&#x27;</span>).<span class="hljs-title function_">text</span>());</span><br><span class="language-javascript">    <span class="hljs-comment">// 两种写法均可</span></span><br><span class="language-javascript">    <span class="hljs-comment">/*$(&#x27;#btn1&#x27;).click(()=&gt;&#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">        console.log(&#x27;你好&#x27;)</span></span><br><span class="hljs-comment"><span class="language-javascript">    &#125;)</span></span><br><span class="hljs-comment"><span class="language-javascript">    $(&#x27;#btn2&#x27;).bind(&#x27;click&#x27;, ()=&gt;&#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">        console.log(&#x27;尊嘟假嘟2&#x27;)</span></span><br><span class="hljs-comment"><span class="language-javascript">    &#125;)*/</span></span><br><span class="language-javascript">    <span class="hljs-comment">// 一次绑定多个</span></span><br><span class="language-javascript">    $(<span class="hljs-string">&#x27;#btn1&#x27;</span>).<span class="hljs-title function_">click</span>(<span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;你好&#x27;</span>)</span><br><span class="language-javascript">    &#125;).<span class="hljs-title function_">keypress</span>(<span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;尊嘟假嘟&#x27;</span>)</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript">    $(<span class="hljs-string">&#x27;#btn2&#x27;</span>).<span class="hljs-title function_">bind</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;尊嘟假嘟2&#x27;</span>)</span><br><span class="language-javascript">    &#125;).<span class="hljs-title function_">bind</span>(<span class="hljs-string">&#x27;keypress&#x27;</span>, <span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;你好2&#x27;</span>)</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>为被选元素添加一个或多个事件处理程序, 并规定事件发生时运行的函数</p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>jQuery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Axios使用</title>
    <link href="/2023/12/06/Axios%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/12/06/Axios%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>axios? 前端ajax请求库</p><p>特点?  基于xhr+promise异步ajax请求库, 浏览器端和node端都可用, 支持请求&#x2F;响应拦截器, 支持请求取消,</p><p>请求&#x2F;响应数据转换, 批量发送多个请求</p><p><code>Restful风格的Get,Post,Put,Delete 4种方法的8种写法(简写和完整写法)</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../css/bootstrap.min.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/axios.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;page-header&quot;</span>&gt;</span>基本使用<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;get()&quot;</span>&gt;</span> 发送GET请求 <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-warning&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;post()&quot;</span>&gt;</span> 发送POST请求 <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-success&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;put()&quot;</span>&gt;</span> 发送 PUT 请求 <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-danger&quot;</span>  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;delete1()&quot;</span>&gt;</span> 发送 DELETE 请求 <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">baseURL</span> = <span class="hljs-string">&quot;http://localhost:3000&quot;</span></span><br><span class="language-javascript">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;.container&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span>&#123;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">methods</span>:&#123;</span><br><span class="language-javascript">                <span class="hljs-comment">// 简写</span></span><br><span class="language-javascript">                <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">                    axios.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/posts/2&#x27;</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res.<span class="hljs-property">data</span>))</span><br><span class="language-javascript">                &#125;,</span><br><span class="language-javascript">                <span class="hljs-title function_">post</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">                    axios.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/posts&#x27;</span>,&#123;</span><br><span class="language-javascript">                        <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>,</span><br><span class="language-javascript">                        <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;约会大作战&#x27;</span>,</span><br><span class="language-javascript">                        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;后宫&#x27;</span></span><br><span class="language-javascript">                    &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res.<span class="hljs-property">data</span>))</span><br><span class="language-javascript">                &#125;,</span><br><span class="language-javascript">                <span class="hljs-title function_">put</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">                    axios.<span class="hljs-title function_">put</span>(<span class="hljs-string">&#x27;/posts/1&#x27;</span>,&#123;</span><br><span class="language-javascript">                        <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;进击的巨人&#x27;</span>,</span><br><span class="language-javascript">                        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;动作 / 动画 / 奇幻&#x27;</span></span><br><span class="language-javascript">                    &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res.<span class="hljs-property">data</span>))</span><br><span class="language-javascript">                &#125;,</span><br><span class="language-javascript">                <span class="hljs-title function_">delete1</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">                    axios.<span class="hljs-title function_">delete</span>(<span class="hljs-string">&#x27;/posts/4&#x27;</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res.<span class="hljs-property">data</span>))</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">                <span class="hljs-comment">/*</span></span><br><span class="hljs-comment"><span class="language-javascript">                // 完整写法</span></span><br><span class="hljs-comment"><span class="language-javascript">                get()&#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                    axios(&#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                        url: &#x27;/posts/1&#x27;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                        method: &#x27;get&#x27;</span></span><br><span class="hljs-comment"><span class="language-javascript">                    &#125;).then(res =&gt; console.log(res.data))</span></span><br><span class="hljs-comment"><span class="language-javascript">                &#125;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                post()&#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                    axios(&#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                        url: &#x27;/posts&#x27;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                        method: &#x27;post&#x27;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                        data: &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                            title: &#x27;无职转生&#x27;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                            type: &#x27;后宫&#x27;</span></span><br><span class="hljs-comment"><span class="language-javascript">                        &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">                    &#125;).then(res =&gt; console.log(res.data))</span></span><br><span class="hljs-comment"><span class="language-javascript">                &#125;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                put()&#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                    axios(&#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                        url: &#x27;/posts/3&#x27;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                        method: &#x27;put&#x27;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                        data: &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                            title: &#x27;我推的孩子&#x27;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                            type: &#x27;后宫&#x27;</span></span><br><span class="hljs-comment"><span class="language-javascript">                        &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">                    &#125;).then(res =&gt; console.log(res.data))</span></span><br><span class="hljs-comment"><span class="language-javascript">                &#125;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                delete1()&#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                    axios(&#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                        url: &#x27;/posts/1&#x27;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                        method: &#x27;delete&#x27;</span></span><br><span class="hljs-comment"><span class="language-javascript">                    &#125;).then(res =&gt; console.log(res.data))</span></span><br><span class="hljs-comment"><span class="language-javascript">                &#125;*/</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>常用默认配置</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../css/bootstrap.min.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/axios.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;page-header&quot;</span>&gt;</span>基本使用<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;get()&quot;</span>&gt;</span> 发送GET请求 <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 默认请求方法类型</span></span><br><span class="language-javascript">    axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">method</span>=<span class="hljs-string">&#x27;GET&#x27;</span></span><br><span class="language-javascript">    <span class="hljs-comment">// 默认基础路径</span></span><br><span class="language-javascript">    axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">baseURL</span> = <span class="hljs-string">&quot;http://localhost:3000&quot;</span></span><br><span class="language-javascript">    <span class="hljs-comment">// 默认参数</span></span><br><span class="language-javascript">    axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">params</span> = &#123; <span class="hljs-attr">id</span>:<span class="hljs-number">100</span> &#125;</span><br><span class="language-javascript">    <span class="hljs-comment">// 默认超时时间</span></span><br><span class="language-javascript">    axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">timeout</span> = <span class="hljs-number">3000</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">      <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;.container&#x27;</span>,</span><br><span class="language-javascript">      <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">axios</span>(&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;/posts/1&#x27;</span></span><br><span class="language-javascript">          &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res.<span class="hljs-property">data</span>))</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>创建实例对象发请求</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../css/bootstrap.min.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/axios.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;page-header&quot;</span>&gt;</span>基本使用<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;get()&quot;</span>&gt;</span> 发送GET请求<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> test = axios.<span class="hljs-title function_">create</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">baseURL</span>: <span class="hljs-string">&quot;http://localhost:3000&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">timeout</span>: <span class="hljs-number">2000</span></span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript">    axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">baseURL</span> = <span class="hljs-string">&quot;http://localhost:3000&quot;</span></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;.container&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> &#123;&#125;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">                test.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/posts/1&#x27;</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res.<span class="hljs-property">data</span>))</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>拦截器</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/axios.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-comment">// Promise</span></span><br><span class="language-javascript">  <span class="hljs-comment">// 设置请求拦截器,config配置对象</span></span><br><span class="language-javascript">  axios.<span class="hljs-property">interceptors</span>.<span class="hljs-property">request</span>.<span class="hljs-title function_">use</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">config</span>)&#123;</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;请求拦截器 成功&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-comment">// 修改config的参数</span></span><br><span class="language-javascript">    config.<span class="hljs-property">params</span> = &#123; <span class="hljs-attr">a</span>: <span class="hljs-number">100</span> &#125;</span><br><span class="language-javascript">    <span class="hljs-keyword">return</span> config</span><br><span class="language-javascript">  &#125;, <span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>)&#123;</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;请求拦截器 失败&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(error)</span><br><span class="language-javascript">  &#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-comment">// 设置响应拦截器</span></span><br><span class="language-javascript">  axios.<span class="hljs-property">interceptors</span>.<span class="hljs-property">response</span>.<span class="hljs-title function_">use</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>)&#123;</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;响应拦截器 成功&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">return</span> response</span><br><span class="language-javascript">  &#125;, <span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>)&#123;</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;响应拦截器 失败&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(error)</span><br><span class="language-javascript">  &#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-comment">// 发起请求</span></span><br><span class="language-javascript">  <span class="hljs-title function_">axios</span>(&#123;</span><br><span class="language-javascript">    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;get&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;http://localhost:3000/posts&#x27;</span></span><br><span class="language-javascript">  &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">response</span>=&gt;</span>&#123;</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;自定义回调处理成功的结果&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response)</span><br><span class="language-javascript">  &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>取消请求</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../css/bootstrap.min.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/axios.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;page-header&quot;</span>&gt;</span>axios取消请求<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;send&quot;</span>&gt;</span> 发送请求 <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-warning&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cancel1&quot;</span> &gt;</span> 取消请求 <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">let</span> cancel = <span class="hljs-literal">null</span></span><br><span class="language-javascript">  <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">    <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;.container&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span>&#123;</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-title function_">send</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-comment">// 检测上一次请求是否完成</span></span><br><span class="language-javascript">        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">cancel</span> != <span class="hljs-literal">null</span>)&#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// 取消上一次请求</span></span><br><span class="language-javascript">          <span class="hljs-title function_">cancel</span>()</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">        <span class="hljs-title function_">axios</span>(&#123;</span><br><span class="language-javascript">          <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;get&#x27;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;http://localhost:3000/posts/1&#x27;</span>,</span><br><span class="language-javascript">          <span class="hljs-comment">// 设置配置对象的属性</span></span><br><span class="language-javascript">          <span class="hljs-attr">cancelToken</span>: <span class="hljs-keyword">new</span> axios.<span class="hljs-title class_">CancelToken</span>(<span class="hljs-function">(<span class="hljs-params">c</span>)=&gt;</span>&#123;</span><br><span class="language-javascript">            cancel = c</span><br><span class="language-javascript">          &#125;)</span><br><span class="language-javascript">        &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span>&#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res.<span class="hljs-property">data</span>);</span><br><span class="language-javascript">          cancel = <span class="hljs-literal">null</span></span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">      &#125;,</span><br><span class="language-javascript">      <span class="hljs-title function_">cancel1</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-comment">// 取消请求</span></span><br><span class="language-javascript">        <span class="hljs-title function_">cancel</span>()</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>axios</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ajax</title>
    <link href="/2023/12/06/Ajax%E7%9A%84%E5%90%84%E7%A7%8D%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/12/06/Ajax%E7%9A%84%E5%90%84%E7%A7%8D%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="原生"><a href="#原生" class="headerlink" title="原生"></a>原生</h1><p>异步js和xml, 在浏览器<code>不用刷新向服务器发送异步请求</code></p><p>优点<br>    不用刷新页面即可与服务器通信<br>    根据用户事件更新部分页面内容</p><p>缺点<br>    没有浏览历史,不能回退<br>    存在跨域问题(同源)<br>    SEO(搜索引擎优化)不友好, 爬虫爬不到</p><p>HTTP: 超文本传输协议,规定浏览器和万维网服务器之间互相通信的<code>规则</code></p><p>请求报文</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs coq">请求行 | <span class="hljs-type">请求方法 GET</span>... | <span class="hljs-type">url</span> | <span class="hljs-type">HTTP</span>协议版本(HTTP/<span class="hljs-number">1.1</span>)<br>请求头 | <span class="hljs-type">k</span>: v (Host: atfgweg.com    Cookie: name=jihj    Content-type: application/x-www-form-urlencoded)<br>请求体 | <span class="hljs-type">GET</span>请求为空;  POST请求可空可不空(uname=admin&amp;pwd=<span class="hljs-number">123</span>) <br></code></pre></td></tr></table></figure><p>响应报文</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml">响应行 | HTTP/1.1(协议) 200(响应码) OK(响应字符串)<br>响应头 | k:v<br>响应体 | html代码  =&gt; <span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>发送Get请求</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>发送Get请求<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> btn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;button&quot;</span>)[<span class="hljs-number">0</span>];</span><br><span class="language-javascript">    btn.<span class="hljs-property">onclick</span> = <span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;点击一次按钮&#x27;</span>)</span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();</span><br><span class="language-javascript">        xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;http://localhost:3000/posts/1&#x27;</span>)</span><br><span class="language-javascript">        xhr.<span class="hljs-title function_">send</span>()</span><br><span class="language-javascript">        xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>)&#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>)&#123;</span><br><span class="language-javascript">                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">response</span>);</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>发送Post请求</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>发送Post请求<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> btn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;button&quot;</span>)[<span class="hljs-number">0</span>];</span><br><span class="language-javascript">    btn.<span class="hljs-property">onclick</span> = <span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;点击一次按钮&#x27;</span>)</span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();</span><br><span class="language-javascript">        xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;POST&#x27;</span>, <span class="hljs-string">&#x27;http://localhost:3000/posts&#x27;</span>)</span><br><span class="language-javascript">        xhr.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&#x27;Content-Type&#x27;</span>, <span class="hljs-string">&#x27;application/json;charset=utf-8&#x27;</span>);</span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> data = &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">id</span>: <span class="hljs-number">10</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;咒术回战 0&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27; 喜剧 / 动画 / 奇幻 /&#x27;</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">        xhr.<span class="hljs-title function_">send</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data))</span><br><span class="language-javascript">        xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>)&#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">status</span> &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span>)&#123;</span><br><span class="language-javascript">                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(xhr.<span class="hljs-property">response</span>);</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>IE缓存问题</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;https://localhost:8000/ie?t=&#x27;</span>+<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>()) <span class="hljs-comment">// 加一个时间戳,让每一次请求都不一样,不走缓存</span><br></code></pre></td></tr></table></figure><p>超时和网络异常</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">xhr.<span class="hljs-property">timeout</span> = <span class="hljs-number">200</span> <span class="hljs-comment">// 超时时间</span><br>xhr.<span class="hljs-property">ontimeout</span> = <span class="hljs-function">()=&gt;</span><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;超时回调&#x27;</span>)<br>xhr.<span class="hljs-property">onerror</span> = <span class="hljs-function">()=&gt;</span><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;网络异常回调&#x27;</span>)<br></code></pre></td></tr></table></figure><p>取消请求</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">xhr.<span class="hljs-title function_">abort</span>()<br></code></pre></td></tr></table></figure><p><code>发送请求同时取消上一次请求</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>发送请求同时取消上一次请求<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>点击发送<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> btns = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&#x27;button&#x27;</span>);</span><br><span class="language-javascript">        <span class="hljs-keyword">let</span> xhr  = <span class="hljs-literal">null</span></span><br><span class="language-javascript">        <span class="hljs-keyword">let</span> isSending = <span class="hljs-literal">false</span> <span class="hljs-comment">//是否正在发送Ajax请求</span></span><br><span class="language-javascript">        btns[<span class="hljs-number">0</span>].<span class="hljs-property">onclick</span> = <span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (isSending) xhr.<span class="hljs-title function_">abort</span>() <span class="hljs-comment">// 如果正在发送,则取消,并重新发送请求</span></span><br><span class="language-javascript">            xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>()</span><br><span class="language-javascript">            <span class="hljs-comment">// 修改 标识变量的值</span></span><br><span class="language-javascript">            isSending = <span class="hljs-literal">true</span></span><br><span class="language-javascript">            xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;http://localhost:8000/delay&#x27;</span>)</span><br><span class="language-javascript">            xhr.<span class="hljs-title function_">send</span>()</span><br><span class="language-javascript">            xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">if</span> (x.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>) &#123;</span><br><span class="language-javascript">                    isSending = <span class="hljs-literal">false</span></span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h1><p><code>jQuery发送Ajax</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>jQuery发送Ajax<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>jQuery发送ajax请求<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>GET<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>POST<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>通用型方法ajax<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">// get</span></span><br><span class="language-javascript">        $(<span class="hljs-string">&#x27;button&#x27;</span>).<span class="hljs-title function_">eq</span>(<span class="hljs-number">0</span>).<span class="hljs-title function_">click</span>(<span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">            $.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;http://localhost:3000/posts/1&#x27;</span>, &#123; a :<span class="hljs-number">100</span> &#125;, <span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res))</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">        <span class="hljs-comment">// post</span></span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> data = &#123;</span><br><span class="language-javascript">            <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;天使降临到我身边&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;后宫&quot;</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">        $(<span class="hljs-string">&#x27;button&#x27;</span>).<span class="hljs-title function_">eq</span>(<span class="hljs-number">1</span>).<span class="hljs-title function_">click</span>(<span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">            $.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;http://localhost:3000/posts&#x27;</span>, data, <span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res))</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">        <span class="hljs-comment">// 通用</span></span><br><span class="language-javascript">        $(<span class="hljs-string">&#x27;button&#x27;</span>).<span class="hljs-title function_">eq</span>(<span class="hljs-number">2</span>).<span class="hljs-title function_">click</span>(<span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">            $.<span class="hljs-title function_">ajax</span>(&#123;</span><br><span class="language-javascript">                <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;http://localhost:3000/posts/1&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">data</span>: &#123; a :<span class="hljs-number">100</span> &#125;,</span><br><span class="language-javascript">                <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res),</span><br><span class="language-javascript">                <span class="hljs-attr">error</span>: <span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res),</span><br><span class="language-javascript">                <span class="hljs-attr">timeout</span>: <span class="hljs-number">200</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">headers</span>: &#123;</span><br><span class="language-javascript">                    <span class="hljs-attr">test</span>: <span class="hljs-string">&#x27;test&#x27;</span></span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;)</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h1><p><code>axios发送Ajax</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>axios 发送Ajax请求 <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/axios.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>GET<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>POST<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>通用AJAX<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> btns = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;button&#x27;</span>);</span><br><span class="language-javascript">    <span class="hljs-comment">// 基本路径</span></span><br><span class="language-javascript">    axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">baseURL</span> = <span class="hljs-string">&#x27;http://localhost:3000&#x27;</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">    btns[<span class="hljs-number">0</span>].<span class="hljs-property">onclick</span> = <span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">        axios.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/posts/1&#x27;</span>, &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// 请求参数</span></span><br><span class="language-javascript">            <span class="hljs-attr">params</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">id</span>: <span class="hljs-number">100</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;dog&#x27;</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-comment">// 请求头</span></span><br><span class="language-javascript">            <span class="hljs-attr">headers</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">test</span>: <span class="hljs-string">&#x27;test&#x27;</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res))</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">    btns[<span class="hljs-number">1</span>].<span class="hljs-property">onclick</span> = <span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">        axios.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/posts&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-comment">// 请求体</span></span><br><span class="language-javascript">            &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;狗&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">age</span>: <span class="hljs-number">16</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            &#123;</span><br><span class="language-javascript">                <span class="hljs-comment">// 请求参数</span></span><br><span class="language-javascript">                <span class="hljs-attr">params</span>: &#123;</span><br><span class="language-javascript">                    <span class="hljs-attr">id</span>: <span class="hljs-number">100</span>,</span><br><span class="language-javascript">                    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;dog&#x27;</span></span><br><span class="language-javascript">                &#125;,</span><br><span class="language-javascript">                <span class="hljs-comment">// 请求头</span></span><br><span class="language-javascript">                <span class="hljs-attr">headers</span>: &#123;</span><br><span class="language-javascript">                    <span class="hljs-attr">test</span>: <span class="hljs-string">&#x27;test&#x27;</span></span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res))</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">    btns[<span class="hljs-number">2</span>].<span class="hljs-property">onclick</span> = <span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">axios</span>(&#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// 路径</span></span><br><span class="language-javascript">            <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;/posts&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-comment">// 请求方法</span></span><br><span class="language-javascript">            <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-comment">// 请求参数</span></span><br><span class="language-javascript">            <span class="hljs-attr">params</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">id</span>: <span class="hljs-number">100</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;dog&#x27;</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-comment">// 请求头</span></span><br><span class="language-javascript">            <span class="hljs-attr">headers</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">test</span>: <span class="hljs-string">&#x27;test&#x27;</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-comment">// 请求体</span></span><br><span class="language-javascript">            <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;狗&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">age</span>: <span class="hljs-number">16</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span>&#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res.<span class="hljs-property">data</span>)</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h1 id="fetch"><a href="#fetch" class="headerlink" title="fetch"></a>fetch</h1><p><code>fetch发送Ajax</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>fetch发送Ajax<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>AJAX请求<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> btn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;button&#x27;</span>);</span><br><span class="language-javascript">    btn.<span class="hljs-property">onclick</span> = <span class="hljs-function">()=&gt;</span>&#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;http://localhost:3000/posts?age=8&#x27;</span>, &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">headers</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">test</span>: <span class="hljs-string">&#x27;test&#x27;</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">body</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">age</span>: <span class="hljs-string">&#x27;18&#x27;</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;n&#x27;</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span>=&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res))</span><br><span class="language-javascript"></span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="CORS-解决跨域"><a href="#CORS-解决跨域" class="headerlink" title="CORS 解决跨域"></a>CORS 解决跨域</h1><p>跨域是违背同源策略(浏览器协议,域名,端口必须一样)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 允许http://localhost:8000页面发送请求</span><br>res.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="hljs-string">&#x27;http://localhost:8000&#x27;</span>)<br><span class="hljs-comment">// 允许任意页面发送Ajax请求</span><br>res.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>)<br><span class="hljs-comment">// 请求头随意加</span><br>res.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>)<br><span class="hljs-comment">// 请求方法随意 默认get post, 加put delete</span><br>res.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Method&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Ajax</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>idea的一些使用技巧</title>
    <link href="/2023/12/06/idea%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <url>/2023/12/06/idea%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h2><p><code>4个箭头</code></p><ol><li>恢复: 跳到下一个断点（如果有），没有直接运行到完成 </li><li>步过： 执行下一行代码 </li><li>步入： 执行当前行代码以及方法内部的代码，进入方法内部 </li><li>步出： 跳出当前方法，继续执行后续代码</li></ol><p><code>给方法打断点打在头和尾,方便定位这个方法</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">a</span>&#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">method</span><span class="hljs-params">()</span> &#123;  <span class="hljs-comment">// 断点1</span><br>        xxx;<br>                xxx;<br>                xxx;<br>                        xxx;<br>    &#125;  <span class="hljs-comment">// 断点2</span><br>&#125;<br></code></pre></td></tr></table></figure><p><code>给ServiceImpl打断点,如果找不到ServiceImpl, 打在Service上 </code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">IService</span>&#123;<br><br>  <span class="hljs-keyword">void</span> <span class="hljs-title function_">execute</span><span class="hljs-params">()</span>;  <span class="hljs-comment">// 断点</span><br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p><code>冲突</code><br>      |————-时间线————————————|<br>小明: |——-克隆小刚的代码—|—–修改代码 a.java—-|–提交代码(冲突)–|<br>小刚: |————修改代码 a.java——|-提交代码-|</p><p>点击合并(merge)  -&gt;  根据提示框操作</p><p><code>基本操作</code><br>找到左侧项目对应一个文件,右键选择 add commit rollback，    git reset(重置HEAD)<br>先拉pull: 右上角箭头拉<br>后推push: 右下角分支名称处操作</p><p><code>提交点回滚</code><br>左下角git点开看到commit历史进度, 找到对应点右键 rollback, 弹窗选择hard(硬)</p><p><code>分支</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 克隆分支(默认主分支master)</span><br>git <span class="hljs-built_in">clone</span> -b master https://xxxxx.git<br><br><span class="hljs-comment"># 新建并切换到一个新分支</span><br>git checkout -b xxx<br></code></pre></td></tr></table></figure><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><table><thead><tr><th>快捷键</th><th>功能</th></tr></thead><tbody><tr><td>ctrl + f12</td><td>查看当前类的所有方法</td></tr><tr><td>ctrl + h</td><td>打开一个叫做“类型层次结构”的视图</td></tr><tr><td>ctrl + alt + m</td><td>抽取方法</td></tr><tr><td>ctrl + alt + o</td><td>优化导入的类,把import不用的删去</td></tr><tr><td>ctrl + alt + t</td><td>try-catch</td></tr><tr><td>ctrl + y</td><td>删除当前行</td></tr><tr><td>ctrl + Shift  + f</td><td>查找强化,everything</td></tr><tr><td>ctrl + Shift  + j</td><td>自动将下一行上移到当前行末尾</td></tr><tr><td>ctrl + shift + z</td><td>取消撤销</td></tr><tr><td>F2</td><td>跳转到下一个高亮错误 或 警告位置</td></tr></tbody></table><p><a href="https://cloud.tencent.com/developer/article/1767794">IDEA Windows + Mac 快捷键（全）</a></p>]]></content>
    
    
    <categories>
      
      <category>软件操作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客搭建</title>
    <link href="/2023/12/03/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/12/03/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><img src="https://fgj-img.oss-cn-beijing.aliyuncs.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231202193129.jpg?Expires=1701675594&OSSAccessKeyId=TMP.3KhWsPuC7vDAQGSYqiwQ1Bg4aqGNYiRro6GvrUm7WX7BssdwB41eb2B1J3joF9YArLGLbiuMK2sakjWKoUqs73zJH1veoV&Signature=pnlCUFUJgPUJTXfSK1RxDEQHoio%3D" style="zoom:25%;" /><h2 id="1-创建仓库，配置GitHub-Pages"><a href="#1-创建仓库，配置GitHub-Pages" class="headerlink" title="1. 创建仓库，配置GitHub Pages"></a>1. 创建仓库，配置GitHub Pages</h2><p>创建仓库 <code>&lt;用户名&gt;.github.io</code> 格式</p><p>根目录加index.html文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Someone&#x27;s Blog<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello, Blog World ~<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>&lt;GitHub用户名&gt;.github.io</code>仓库url <code> https://&lt;GitHub 用户名&gt;.github.io</code> 可以在setting.page里找到</p><p>然后浏览器可以呈现效果</p><h2 id="2-安装-Git-和-NodeJS"><a href="#2-安装-Git-和-NodeJS" class="headerlink" title="2. 安装 Git 和 NodeJS"></a>2. 安装 Git 和 NodeJS</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">scoop install git <span class="hljs-comment"># 安装Git</span><br><br>scoop install nvm <span class="hljs-comment"># 安装 nvm</span><br>nvm list available <span class="hljs-comment"># 查看可用的 NodeJS 版本，这里建议使用 LTS 版本</span><br>nvm install 16.18.0 <span class="hljs-comment"># 安装 NodeJS，我这里安装的是最新 LTS 版本 16.18.0</span><br>sudo nvm use 16.18.0 <span class="hljs-comment"># NodeJS 版本使用 16.18.0，注意这里需要管理员权限，可以先使用 scoop 安装 sudo 这个工具</span><br></code></pre></td></tr></table></figure><h2 id="3-安装-Hexo"><a href="#3-安装-Hexo" class="headerlink" title="3. 安装 Hexo"></a>3. 安装 Hexo</h2><ol><li>全局安装 Hexo-cli 工具</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install -g hexo-cli<br><br>hexo -v <span class="hljs-comment"># 查看版本，目前最新版本为 4.3.0</span><br></code></pre></td></tr></table></figure><ol start="2"><li>创建项目my-blog并初始化</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo init my-blog<br><span class="hljs-built_in">cd</span> my-blog<br>npm install<br></code></pre></td></tr></table></figure><ol start="3"><li>生成网页文件 &amp; 本地启动</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo generate <span class="hljs-comment"># 生成页面，此命令可以简写为 `hexo g`</span><br>hexo server <span class="hljs-comment"># 本地启动，可简写为 `hexo s`</span><br></code></pre></td></tr></table></figure><h2 id="4-更换主题"><a href="#4-更换主题" class="headerlink" title="4. 更换主题"></a>4. 更换主题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> hexo-blog<br>git <span class="hljs-built_in">clone</span> 主题<br></code></pre></td></tr></table></figure><h2 id="5-基本操作"><a href="#5-基本操作" class="headerlink" title="5.基本操作"></a>5.基本操作</h2><h3 id="基本设置更改"><a href="#基本设置更改" class="headerlink" title="基本设置更改"></a>基本设置更改</h3><blockquote><p>主题优先级高于hexo</p></blockquote><p>主题yml   -&gt;    &#x2F;hexo-blog&#x2F;themes&#x2F;hexo-theme-fluid-1.9.5&#x2F;_config.yml</p><p>hexo主yml-&gt;&#x2F;hexo-blog&#x2F;_config.yml</p><h3 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo g <span class="hljs-literal">-d</span><br>hexo s<br></code></pre></td></tr></table></figure><h3 id="发布Github"><a href="#发布Github" class="headerlink" title="发布Github"></a>发布Github</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g -d</span><br></code></pre></td></tr></table></figure><p>前提是配置插件</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>修改根目录下的 <code>_config.yml</code>，配置 <code>GitHub</code> 相关信息</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> https:<span class="hljs-comment">//github.com/yaorongke/yaorongke.github.io.git</span><br><span class="hljs-symbol">  branch:</span> main<br><span class="hljs-symbol">  token:</span> ghp_3KakcaPHerunNRyMerofcFd9pblU282FSbsY<br></code></pre></td></tr></table></figure><h3 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo new post 文件名<br></code></pre></td></tr></table></figure><h3 id="标签和分类"><a href="#标签和分类" class="headerlink" title="标签和分类"></a>标签和分类</h3><blockquote><p>标签(tags)           分类(categories)</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">测试文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2021-06-10 16:35:20</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">原创</span><br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">Java</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-string">这是一篇测试文章</span><br></code></pre></td></tr></table></figure><h3 id="关于图片"><a href="#关于图片" class="headerlink" title="关于图片"></a>关于图片</h3><ul><li>直接图床</li><li>默认路径: &#x2F;img&#x2F;xxxx.jpg</li></ul><p><img src="http://s532yoxd1.bkt.gdipper.com/default.png?e=1701595060&token=Q_u2sh06owjvRxd8Hsqlg_fh_FzUiEv1i97VL2UR:-jwfpqG1UFk5wi6P-rsWZlGImow="></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/12/03/hello-world/"/>
    <url>/2023/12/03/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
